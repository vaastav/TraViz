{"ast":null,"code":"var _jsxFileName = \"/home/stolet/TraViz/traviz_frontend/src/dc/eventsChart.js\";\nimport React from \"react\";\nimport * as dc from \"dc\";\nimport { scaleLinear } from \"d3\";\nimport { ChartTemplate } from \"./chartTemplate\";\nimport { numberFormat } from \"./cxContext\";\n\nvar eventsChartFunc = function eventsChartFunc(divRef, ndx) {\n  var eventsChart = dc.barChart(divRef);\n  var dimension = ndx.dimension(function (d) {\n    return d.NumEvents;\n  });\n  var group = dimension.group(function (d) {\n    return Math.floor(d / 20) * 20;\n  });\n  eventsChart.dimension(dimension).group(group).gap(1).x(scaleLinear().domain([0, 400]).rangeRound([0, 10 * 20])).y(scaleLinear().domain([0, 10000])).valueAccessor(function (x) {\n    return x.value;\n  }).centerBar(true).xUnits(function () {\n    return 21;\n  }).renderHorizontalGridLines(true).filterPrinter(function (filters) {\n    var filter = filters[0],\n        s = '';\n    s += numberFormat(filter[0]) + ' -> ' + numberFormat(filter[1]);\n    return s;\n  });\n  eventsChart.xAxis().tickFormat(function (v) {\n    return v;\n  });\n  eventsChart.yAxis().ticks(10).tickFormat(function (v) {\n    return v / 1000 + 'K';\n  });\n  return eventsChart;\n};\n\nexport var EventsChart = function EventsChart(props) {\n  return React.createElement(ChartTemplate, {\n    chartFunction: eventsChartFunc,\n    title: \"Num Events distribution\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  });\n};","map":{"version":3,"sources":["/home/stolet/TraViz/traviz_frontend/src/dc/eventsChart.js"],"names":["React","dc","scaleLinear","ChartTemplate","numberFormat","eventsChartFunc","divRef","ndx","eventsChart","barChart","dimension","d","NumEvents","group","Math","floor","gap","x","domain","rangeRound","y","valueAccessor","value","centerBar","xUnits","renderHorizontalGridLines","filterPrinter","filters","filter","s","xAxis","tickFormat","v","yAxis","ticks","EventsChart","props"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,KAAKC,EAAZ,MAAoB,IAApB;AACA,SAASC,WAAT,QAA4B,IAA5B;AACA,SAASC,aAAT,QAA8B,iBAA9B;AACA,SAASC,YAAT,QAA6B,aAA7B;;AAEA,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAACC,MAAD,EAASC,GAAT,EAAiB;AACrC,MAAMC,WAAW,GAAGP,EAAE,CAACQ,QAAH,CAAYH,MAAZ,CAApB;AACA,MAAMI,SAAS,GAAGH,GAAG,CAACG,SAAJ,CAAc,UAAAC,CAAC;AAAA,WAAGA,CAAC,CAACC,SAAL;AAAA,GAAf,CAAlB;AACA,MAAMC,KAAK,GAAGH,SAAS,CAACG,KAAV,CAAgB,UAAUF,CAAV,EAAa;AAAE,WAAOG,IAAI,CAACC,KAAL,CAAWJ,CAAC,GAAG,EAAf,IAAqB,EAA5B;AAAiC,GAAhE,CAAd;AACAH,EAAAA,WAAW,CACVE,SADD,CACWA,SADX,EAECG,KAFD,CAEOA,KAFP,EAGCG,GAHD,CAGK,CAHL,EAICC,CAJD,CAIGf,WAAW,GAAGgB,MAAd,CAAqB,CAAC,CAAD,EAAG,GAAH,CAArB,EAA8BC,UAA9B,CAAyC,CAAC,CAAD,EAAI,KAAK,EAAT,CAAzC,CAJH,EAKCC,CALD,CAKGlB,WAAW,GAAGgB,MAAd,CAAqB,CAAC,CAAD,EAAI,KAAJ,CAArB,CALH,EAMCG,aAND,CAMe,UAAAJ,CAAC;AAAA,WAAEA,CAAC,CAACK,KAAJ;AAAA,GANhB,EAOCC,SAPD,CAOW,IAPX,EAQCC,MARD,CAQQ,YAAW;AAAE,WAAO,EAAP;AAAY,GARjC,EASCC,yBATD,CAS2B,IAT3B,EAUCC,aAVD,CAUgB,UAACC,OAAD,EAAa;AACzB,QAAIC,MAAM,GAAGD,OAAO,CAAC,CAAD,CAApB;AAAA,QAAyBE,CAAC,GAAG,EAA7B;AACAA,IAAAA,CAAC,IAAIzB,YAAY,CAACwB,MAAM,CAAC,CAAD,CAAP,CAAZ,GAA0B,MAA1B,GAAmCxB,YAAY,CAACwB,MAAM,CAAC,CAAD,CAAP,CAApD;AACA,WAAOC,CAAP;AACH,GAdD;AAgBArB,EAAAA,WAAW,CAACsB,KAAZ,GAAoBC,UAApB,CACI,UAAUC,CAAV,EAAa;AAAE,WAAOA,CAAP;AAAW,GAD9B;AAIAxB,EAAAA,WAAW,CAACyB,KAAZ,GAAoBC,KAApB,CAA0B,EAA1B,EAA8BH,UAA9B,CACI,UAAUC,CAAV,EAAa;AAAE,WAAOA,CAAC,GAAG,IAAJ,GAAW,GAAlB;AAAwB,GAD3C;AAIA,SAAOxB,WAAP;AACH,CA7BD;;AA+BA,OAAO,IAAM2B,WAAW,GAAG,SAAdA,WAAc,CAAAC,KAAK;AAAA,SAC5B,oBAAC,aAAD;AAAe,IAAA,aAAa,EAAE/B,eAA9B;AAA+C,IAAA,KAAK,EAAC,yBAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAD4B;AAAA,CAAzB","sourcesContent":["import React from \"react\";\nimport * as dc from \"dc\";\nimport { scaleLinear } from \"d3\";\nimport { ChartTemplate } from \"./chartTemplate\";\nimport { numberFormat } from \"./cxContext\";\n\nconst eventsChartFunc = (divRef, ndx) => {\n    const eventsChart = dc.barChart(divRef);\n    const dimension = ndx.dimension(d=> d.NumEvents);\n    const group = dimension.group(function (d) { return Math.floor(d / 20) * 20; });\n    eventsChart\n    .dimension(dimension)\n    .group(group)\n    .gap(1)\n    .x(scaleLinear().domain([0,400]).rangeRound([0, 10 * 20]))\n    .y(scaleLinear().domain([0, 10000]))\n    .valueAccessor(x=>x.value)\n    .centerBar(true)\n    .xUnits(function() { return 21; })\n    .renderHorizontalGridLines(true)\n    .filterPrinter( (filters) => {\n        var filter = filters[0], s = '';\n        s += numberFormat(filter[0]) + ' -> ' + numberFormat(filter[1]);\n        return s;\n    });\n\n    eventsChart.xAxis().tickFormat(\n        function (v) { return v; }  \n    );\n\n    eventsChart.yAxis().ticks(10).tickFormat(\n        function (v) { return v / 1000 + 'K'; }\n    );\n\n    return eventsChart;\n}\n\nexport const EventsChart = props => (\n    <ChartTemplate chartFunction={eventsChartFunc} title=\"Num Events distribution\" />\n)"]},"metadata":{},"sourceType":"module"}