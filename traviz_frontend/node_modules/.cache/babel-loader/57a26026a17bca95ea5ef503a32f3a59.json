{"ast":null,"code":"var _jsxFileName = \"/home/stolet/TraViz/traviz_frontend/src/dc/durationChart.js\";\nimport React from \"react\";\nimport * as dc from \"dc\";\nimport { scaleLinear } from \"d3\";\nimport { ChartTemplate } from \"./chartTemplate\";\nimport { numberFormat } from \"./cxContext\";\n\nvar durationChartFunc = function durationChartFunc(divRef, ndx) {\n  var durationChart = dc.barChart(divRef);\n  var dimension = ndx.dimension(function (d) {\n    return d.Duration;\n  });\n  var group = dimension.group(function (d) {\n    return Math.floor(d / 50) * 50;\n  });\n  durationChart.dimension(dimension).group(group).gap(1).x(scaleLinear().domain([0, 1000]).rangeRound([0, 10 * 40])).y(scaleLinear().domain([0, 2000])).valueAccessor(function (x) {\n    return x.value;\n  }).centerBar(true).xUnits(function () {\n    return 21;\n  }).round(dc.round.floor).filterPrinter(function (filters) {\n    var filter = filters[0],\n        s = '';\n    s += numberFormat(filter[0]) + 'ms -> ' + numberFormat(filter[1]) + 'ms';\n    return s;\n  });\n  durationChart.xAxis().tickFormat(function (v) {\n    return v;\n  });\n  durationChart.yAxis().tickFormat(function (v) {\n    return v;\n  });\n  return durationChart;\n};\n\nexport var DurationChart = function DurationChart(props) {\n  return React.createElement(ChartTemplate, {\n    chartFunction: durationChartFunc,\n    title: \"Latency Distribution\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  });\n};","map":{"version":3,"sources":["/home/stolet/TraViz/traviz_frontend/src/dc/durationChart.js"],"names":["React","dc","scaleLinear","ChartTemplate","numberFormat","durationChartFunc","divRef","ndx","durationChart","barChart","dimension","d","Duration","group","Math","floor","gap","x","domain","rangeRound","y","valueAccessor","value","centerBar","xUnits","round","filterPrinter","filters","filter","s","xAxis","tickFormat","v","yAxis","DurationChart","props"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,KAAKC,EAAZ,MAAoB,IAApB;AACA,SAASC,WAAT,QAA4B,IAA5B;AACA,SAASC,aAAT,QAA8B,iBAA9B;AACA,SAASC,YAAT,QAA6B,aAA7B;;AAEA,IAAMC,iBAAiB,GAAG,SAApBA,iBAAoB,CAACC,MAAD,EAASC,GAAT,EAAiB;AACvC,MAAMC,aAAa,GAAGP,EAAE,CAACQ,QAAH,CAAYH,MAAZ,CAAtB;AACA,MAAMI,SAAS,GAAGH,GAAG,CAACG,SAAJ,CAAc,UAAAC,CAAC;AAAA,WAAGA,CAAC,CAACC,QAAL;AAAA,GAAf,CAAlB;AACA,MAAMC,KAAK,GAAGH,SAAS,CAACG,KAAV,CAAgB,UAAUF,CAAV,EAAa;AAAE,WAAOG,IAAI,CAACC,KAAL,CAAWJ,CAAC,GAAG,EAAf,IAAqB,EAA5B;AAAiC,GAAhE,CAAd;AACAH,EAAAA,aAAa,CACZE,SADD,CACWA,SADX,EAECG,KAFD,CAEOA,KAFP,EAGCG,GAHD,CAGK,CAHL,EAICC,CAJD,CAIGf,WAAW,GAAGgB,MAAd,CAAqB,CAAC,CAAD,EAAG,IAAH,CAArB,EAA+BC,UAA/B,CAA0C,CAAC,CAAD,EAAI,KAAK,EAAT,CAA1C,CAJH,EAKCC,CALD,CAKGlB,WAAW,GAAGgB,MAAd,CAAqB,CAAC,CAAD,EAAI,IAAJ,CAArB,CALH,EAMCG,aAND,CAMe,UAAAJ,CAAC;AAAA,WAAEA,CAAC,CAACK,KAAJ;AAAA,GANhB,EAOCC,SAPD,CAOW,IAPX,EAQCC,MARD,CAQQ,YAAW;AAAE,WAAO,EAAP;AAAY,GARjC,EASCC,KATD,CASOxB,EAAE,CAACwB,KAAH,CAASV,KAThB,EAUCW,aAVD,CAUgB,UAACC,OAAD,EAAa;AACzB,QAAIC,MAAM,GAAGD,OAAO,CAAC,CAAD,CAApB;AAAA,QAAyBE,CAAC,GAAE,EAA5B;AACAA,IAAAA,CAAC,IAAIzB,YAAY,CAACwB,MAAM,CAAC,CAAD,CAAP,CAAZ,GAA0B,QAA1B,GAAqCxB,YAAY,CAACwB,MAAM,CAAC,CAAD,CAAP,CAAjD,GAA+D,IAApE;AACA,WAAOC,CAAP;AACH,GAdD;AAgBArB,EAAAA,aAAa,CAACsB,KAAd,GAAsBC,UAAtB,CACI,UAAUC,CAAV,EAAa;AAAE,WAAOA,CAAP;AAAU,GAD7B;AAIAxB,EAAAA,aAAa,CAACyB,KAAd,GAAsBF,UAAtB,CACI,UAAUC,CAAV,EAAa;AAAE,WAAOA,CAAP;AAAU,GAD7B;AAIA,SAAOxB,aAAP;AACH,CA7BD;;AA+BA,OAAO,IAAM0B,aAAa,GAAG,SAAhBA,aAAgB,CAAAC,KAAK;AAAA,SAC9B,oBAAC,aAAD;AAAe,IAAA,aAAa,EAAE9B,iBAA9B;AAAiD,IAAA,KAAK,EAAC,sBAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAD8B;AAAA,CAA3B","sourcesContent":["import React from \"react\";\nimport * as dc from \"dc\";\nimport { scaleLinear } from \"d3\";\nimport { ChartTemplate } from \"./chartTemplate\";\nimport { numberFormat } from \"./cxContext\";\n\nconst durationChartFunc = (divRef, ndx) => {\n    const durationChart = dc.barChart(divRef);\n    const dimension = ndx.dimension(d=> d.Duration);\n    const group = dimension.group(function (d) { return Math.floor(d / 50) * 50; });\n    durationChart\n    .dimension(dimension)\n    .group(group)\n    .gap(1)\n    .x(scaleLinear().domain([0,1000]).rangeRound([0, 10 * 40]))\n    .y(scaleLinear().domain([0, 2000]))\n    .valueAccessor(x=>x.value)\n    .centerBar(true)\n    .xUnits(function() { return 21; })\n    .round(dc.round.floor)\n    .filterPrinter( (filters) => {\n        var filter = filters[0], s= '';\n        s += numberFormat(filter[0]) + 'ms -> ' + numberFormat(filter[1]) + 'ms';\n        return s;\n    });\n\n    durationChart.xAxis().tickFormat(\n        function (v) { return v;}\n    );\n\n    durationChart.yAxis().tickFormat(\n        function (v) { return v;}\n    );\n\n    return durationChart;\n}\n\nexport const DurationChart = props => (\n    <ChartTemplate chartFunction={durationChartFunc} title=\"Latency Distribution\" />\n)"]},"metadata":{},"sourceType":"module"}