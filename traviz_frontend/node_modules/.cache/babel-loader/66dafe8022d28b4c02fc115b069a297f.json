{"ast":null,"code":"import _classCallCheck from \"/home/stolet/TraViz/traviz_frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/stolet/TraViz/traviz_frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/stolet/TraViz/traviz_frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/stolet/TraViz/traviz_frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/stolet/TraViz/traviz_frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/stolet/TraViz/traviz_frontend/src/dc/cxContext.js\";\nimport React from \"react\";\nimport * as crossfilter from \"crossfilter2/crossfilter\";\nimport { csv, timeFormat, timeParse, timeMonth, format } from 'd3';\nimport TraceService from \"../services/TraceService/TraceService\";\nimport \"dc/dc.css\";\nexport var CXContext = React.createContext(\"CXContext\");\nexport var dateFormatSpecifier = '%Y-%m-%d %H:%M:%S';\nexport var dateFormat = timeFormat(dateFormatSpecifier);\nexport var dateFormatParser = timeParse(dateFormatSpecifier);\nexport var numberFormat = format('.2f');\nexport var DataContext =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(DataContext, _React$Component);\n\n  function DataContext(props) {\n    var _this;\n\n    _classCallCheck(this, DataContext);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(DataContext).call(this, props));\n    _this.state = {\n      loading: false,\n      hasNDX: false,\n      traces: []\n    };\n    _this.traceService = new TraceService();\n    return _this;\n  }\n\n  _createClass(DataContext, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      if (this.state.hasNDX) {\n        return;\n      }\n\n      if (this.state.loading) {\n        return;\n      }\n\n      this.setState({\n        loading: true\n      });\n      this.traceService.getAllTraces().then(function (traces) {\n        console.log(\"Reached here\");\n        console.log(traces);\n        traces.forEach(function (d) {\n          d.dd = dateFormatParser(d.Date);\n          d.month = timeMonth(d.dd);\n          d.Duration = +d.Duration / 1000000;\n          d.NumEvents = +d.NumEvents;\n          d.Tags = d.Tags;\n        });\n        console.log(traces);\n        _this2.ndx = crossfilter(traces);\n\n        _this2.setState({\n          loading: false,\n          hasNDX: true\n        });\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      if (!this.state.hasNDX) {\n        return null;\n      }\n\n      return React.createElement(CXContext.Provider, {\n        value: {\n          ndx: this.ndx\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        ref: this.parent,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }, this.props.children));\n    }\n  }]);\n\n  return DataContext;\n}(React.Component);","map":{"version":3,"sources":["/home/stolet/TraViz/traviz_frontend/src/dc/cxContext.js"],"names":["React","crossfilter","csv","timeFormat","timeParse","timeMonth","format","TraceService","CXContext","createContext","dateFormatSpecifier","dateFormat","dateFormatParser","numberFormat","DataContext","props","state","loading","hasNDX","traces","traceService","setState","getAllTraces","then","console","log","forEach","d","dd","Date","month","Duration","NumEvents","Tags","ndx","parent","children","Component"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,KAAKC,WAAZ,MAA6B,0BAA7B;AACA,SAAQC,GAAR,EAAYC,UAAZ,EAAuBC,SAAvB,EAAiCC,SAAjC,EAA2CC,MAA3C,QAAwD,IAAxD;AACA,OAAOC,YAAP,MAAyB,uCAAzB;AACA,OAAO,WAAP;AAEA,OAAO,IAAMC,SAAS,GAAGR,KAAK,CAACS,aAAN,CAAoB,WAApB,CAAlB;AACP,OAAO,IAAOC,mBAAmB,GAAG,mBAA7B;AACP,OAAO,IAAMC,UAAU,GAAGR,UAAU,CAACO,mBAAD,CAA7B;AACP,OAAO,IAAME,gBAAgB,GAAGR,SAAS,CAACM,mBAAD,CAAlC;AACP,OAAO,IAAMG,YAAY,GAAGP,MAAM,CAAC,KAAD,CAA3B;AAEP,WAAaQ,WAAb;AAAA;AAAA;AAAA;;AACE,uBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,qFAAMA,KAAN;AACA,UAAKC,KAAL,GAAW;AAACC,MAAAA,OAAO,EAAC,KAAT;AAAeC,MAAAA,MAAM,EAAC,KAAtB;AAA4BC,MAAAA,MAAM,EAAC;AAAnC,KAAX;AAEA,UAAKC,YAAL,GAAoB,IAAIb,YAAJ,EAApB;AAJiB;AAKlB;;AANH;AAAA;AAAA,wCAQsB;AAAA;;AAChB,UAAI,KAAKS,KAAL,CAAWE,MAAf,EAAsB;AAClB;AACH;;AACD,UAAG,KAAKF,KAAL,CAAWC,OAAd,EAAsB;AAClB;AACH;;AACD,WAAKI,QAAL,CAAc;AAACJ,QAAAA,OAAO,EAAC;AAAT,OAAd;AACA,WAAKG,YAAL,CAAkBE,YAAlB,GAAiCC,IAAjC,CAAsC,UAAAJ,MAAM,EAAI;AAC5CK,QAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ;AACAD,QAAAA,OAAO,CAACC,GAAR,CAAYN,MAAZ;AACAA,QAAAA,MAAM,CAACO,OAAP,CAAe,UAAUC,CAAV,EAAa;AACxBA,UAAAA,CAAC,CAACC,EAAF,GAAOhB,gBAAgB,CAACe,CAAC,CAACE,IAAH,CAAvB;AACAF,UAAAA,CAAC,CAACG,KAAF,GAAUzB,SAAS,CAACsB,CAAC,CAACC,EAAH,CAAnB;AACAD,UAAAA,CAAC,CAACI,QAAF,GAAa,CAACJ,CAAC,CAACI,QAAH,GAAc,OAA3B;AACAJ,UAAAA,CAAC,CAACK,SAAF,GAAc,CAACL,CAAC,CAACK,SAAjB;AACAL,UAAAA,CAAC,CAACM,IAAF,GAASN,CAAC,CAACM,IAAX;AACH,SAND;AAOAT,QAAAA,OAAO,CAACC,GAAR,CAAYN,MAAZ;AACA,QAAA,MAAI,CAACe,GAAL,GAAWjC,WAAW,CAACkB,MAAD,CAAtB;;AACA,QAAA,MAAI,CAACE,QAAL,CAAc;AAACJ,UAAAA,OAAO,EAAC,KAAT;AAAeC,UAAAA,MAAM,EAAC;AAAtB,SAAd;AACH,OAbD;AAcH;AA9BH;AAAA;AAAA,6BAgCW;AACL,UAAG,CAAC,KAAKF,KAAL,CAAWE,MAAf,EAAsB;AAClB,eAAO,IAAP;AACH;;AACH,aACE,oBAAC,SAAD,CAAW,QAAX;AAAoB,QAAA,KAAK,EAAE;AAACgB,UAAAA,GAAG,EAAC,KAAKA;AAAV,SAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAK,QAAA,GAAG,EAAE,KAAKC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACC,KAAKpB,KAAL,CAAWqB,QADZ,CADF,CADF;AAOD;AA3CH;;AAAA;AAAA,EAAiCpC,KAAK,CAACqC,SAAvC","sourcesContent":["import React from \"react\";\nimport * as crossfilter from \"crossfilter2/crossfilter\";\nimport {csv,timeFormat,timeParse,timeMonth,format} from 'd3'\nimport TraceService from \"../services/TraceService/TraceService\";\nimport \"dc/dc.css\";\n\nexport const CXContext = React.createContext(\"CXContext\");\nexport const  dateFormatSpecifier = '%Y-%m-%d %H:%M:%S';\nexport const dateFormat = timeFormat(dateFormatSpecifier);\nexport const dateFormatParser = timeParse(dateFormatSpecifier);\nexport const numberFormat = format('.2f');\n\nexport class DataContext extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state={loading:false,hasNDX:false,traces:[]};\n\n    this.traceService = new TraceService();\n  }\n\n  componentDidMount() {\n      if (this.state.hasNDX){\n          return\n      }\n      if(this.state.loading){\n          return\n      }\n      this.setState({loading:true})\n      this.traceService.getAllTraces().then(traces => {\n          console.log(\"Reached here\");\n          console.log(traces);\n          traces.forEach(function (d) {\n              d.dd = dateFormatParser(d.Date);\n              d.month = timeMonth(d.dd);\n              d.Duration = +d.Duration / 1000000;\n              d.NumEvents = +d.NumEvents;\n              d.Tags = d.Tags;\n          });\n          console.log(traces);\n          this.ndx = crossfilter(traces);\n          this.setState({loading:false,hasNDX:true});  \n      });\n  }\n\n  render() {\n      if(!this.state.hasNDX){\n          return null;\n      }\n    return (\n      <CXContext.Provider value={{ndx:this.ndx}}>\n        <div ref={this.parent}>\n        {this.props.children}\n        </div>\n      </CXContext.Provider>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}