{"ast":null,"code":"import * as d3 from \"d3\";\nimport $ from \"jquery\";\nvar window = window ? window : {}; // Problems with resizing and jquery and chrome and this stuff is so dumb.\n\nwindow.width = function () {\n  return document.body.clientWidth;\n};\n\nwindow.height = function () {\n  return document.body.clientHeight;\n}; // http://stackoverflow.com/questions/523266/how-can-i-get-a-specific-parameter-from-location-search\n\n\nvar getParameter = function getParameter(name) {\n  name = name.replace(/[\\[]/, \"\\\\\\[\").replace(/[\\]]/, \"\\\\\\]\");\n  var regexS = \"[\\\\?&]\" + name + \"=([^&#]*)\";\n  var regex = new RegExp(regexS);\n  var results = regex.exec(window.location.href);\n  if (results == null) return \"\";else return results[1];\n};\n\nvar getParameters = function getParameters() {\n  if (window.location.href.indexOf(\"?\") == -1) return {};\n  var param_strs = window.location.href.substr(window.location.href.indexOf(\"?\") + 1).split(\"&\");\n  var params = {};\n  param_strs.forEach(function (str) {\n    var splits = str.split(\"=\");\n\n    if (splits.length == 2) {\n      params[splits[0]] = splits[1];\n    }\n  });\n  return params;\n};\n\nvar getReports = function getReports(ids_str, callback, errback) {\n  // Batches report requests\n  if (ids_str == null) {\n    errback(\"No IDs specified\");\n  }\n\n  var i = 0;\n  var batch_size = 20;\n  var ids = ids_str.split(\",\");\n  var json_ids = [];\n  var regular_ids = [];\n\n  for (var i = 0; i < ids.length; i++) {\n    var id = ids[i];\n\n    if (id.indexOf(\".json\") != -1) {\n      json_ids.push(id);\n    } else {\n      regular_ids.push(id);\n    }\n  }\n\n  var results = [];\n  var jsondone = false,\n      batchdone = false;\n\n  var batch_callback = function batch_callback(json) {\n    results = results.concat(json);\n    i++;\n\n    if (regular_ids.length == 0) {\n      batchdone = true;\n      if (jsondone && batchdone) callback(results);\n    } else {\n      var next_request_ids = regular_ids.splice(0, batch_size);\n      console.info(\"Retrieving batch \" + i + \":\", next_request_ids);\n      getAllReports(next_request_ids.join(), batch_callback, errback);\n    }\n  };\n\n  var json_fecthing_id = null;\n\n  var json_batch_callback = function json_batch_callback(json) {\n    if (json.length == 1) json[0].id = json_fecthing_id;\n    results = results.concat(json);\n\n    if (json_ids.length == 0) {\n      jsondone = true;\n      if (jsondone && batchdone) callback(results);\n    } else {\n      json_fecthing_id = json_ids.splice(0, 1);\n      d3.json(json_fecthing_id, json_batch_callback);\n      console.info(\"Retrieving JSON file \" + id);\n    }\n  };\n\n  batch_callback([]);\n  json_batch_callback([]);\n};\n\nvar loadTraceFromFile = function loadTraceFromFile(callback, errback) {\n  return function (evt) {\n    console.log(\"loading \", evt);\n    var files = evt.target.files; // FileList\n\n    var reader = new FileReader();\n\n    reader.onload = function (e) {\n      try {\n        var json = JSON.parse(e.target.result);\n      } catch (e) {\n        errback(\"Unable to parse JSON file \" + files[0].name, e);\n      }\n\n      try {\n        json.forEach(function (trace) {\n          sanitizeReports(trace.reports);\n        });\n        callback(json);\n      } catch (e) {\n        errback(\"Unable to process JSON file \" + files[0].name, e);\n      }\n    };\n\n    reader.readAsText(files[0]);\n  };\n};\n\nvar getAllReports = function getAllReports(ids, callback, errback) {\n  var report_url = \"reports/\" + ids;\n  var xhr = new XMLHttpRequest();\n  xhr.open(\"GET\", report_url, true);\n\n  xhr.onreadystatechange = function () {\n    if (xhr.readyState == 4) {\n      if (xhr.status = 200) {\n        var json = JSON.parse(xhr.responseText);\n        json.forEach(function (trace) {\n          sanitizeReports(trace.reports);\n        });\n        callback(json);\n      } else {\n        errback(xhr.status, xhr);\n      }\n    }\n  };\n\n  xhr.send(null);\n};\n\nvar getRawReports = function getRawReports(id, callback, errback) {\n  var report_url = \"reports/\" + id;\n  var xhr = new XMLHttpRequest();\n  xhr.open(\"GET\", report_url, true);\n\n  xhr.onreadystatechange = function () {\n    if (xhr.readyState == 4) {\n      if (xhr.status = 200) {\n        callback(xhr.responseText);\n      } else {\n        errback(xhr.status, xhr);\n      }\n    }\n  };\n\n  xhr.send(null);\n};\n\nfunction getRelated(ids, callback, errback) {\n  var overlapping_url = \"overlapping/\" + ids;\n  var xhr = new XMLHttpRequest();\n  xhr.open(\"GET\", overlapping_url, true);\n\n  xhr.onreadystatechange = function () {\n    if (xhr.readyState == 4) {\n      if (xhr.status = 200) {\n        try {\n          var json = JSON.parse(xhr.responseText);\n          callback(json);\n        } catch (e) {\n          errback(e);\n        }\n      } else {\n        errback(xhr);\n      }\n    }\n  };\n\n  xhr.send(null);\n}\n\n;\n\nfunction getTags(ids, callback, errback) {\n  var tags_url = \"tags/\" + ids;\n  var xhr = new XMLHttpRequest();\n  xhr.open(\"GET\", tags_url, true);\n\n  xhr.onreadystatechange = function () {\n    if (xhr.readyState == 4) {\n      if (xhr.status = 200) {\n        try {\n          var json = JSON.parse(xhr.responseText);\n          callback(json);\n        } catch (e) {\n          errback(e);\n        }\n      } else {\n        errback(xhr);\n      }\n    }\n  };\n\n  xhr.send(null);\n}\n\nfunction getGCReports(ids, callback, errback) {\n  var gcReportsReceivedCallback = function gcReportsReceivedCallback(data) {\n    var GCReportsByProcess = {};\n\n    for (var i = 0; i < data.length; i++) {\n      var reports = data[i].reports;\n\n      for (var j = 0; j < reports.length; j++) {\n        var report = reports[j];\n\n        if (report[\"Operation\"] && report[\"Operation\"] == \"GC\") {\n          var processID = report[\"ProcessID\"];\n          if (!GCReportsByProcess[processID]) GCReportsByProcess[processID] = [report];else GCReportsByProcess[processID].push(report);\n        }\n      }\n    }\n\n    callback(GCReportsByProcess);\n  };\n\n  var tagsReceivedCallback = function tagsReceivedCallback(tagdata) {\n    var GCTasks = [];\n\n    for (var taskid in tagdata) {\n      var tags = tagdata[taskid];\n\n      if (tags.indexOf(\"GarbageCollection\") != -1 || tags.indexOf(\"GC\") != -1) {\n        GCTasks.push(taskid);\n      }\n    }\n\n    if (GCTasks.length > 0) {\n      getReports(GCTasks.join(\",\"), gcReportsReceivedCallback, errback);\n    } else {\n      callback({});\n    }\n  };\n\n  var relatedIDsReceivedCallback = function relatedIDsReceivedCallback(ids) {\n    console.log(\"Searching for GarbageCollection data in ids: \" + ids.join(','));\n    getTags(ids.join(','), tagsReceivedCallback, errback);\n  };\n\n  getRelated(ids, relatedIDsReceivedCallback, errback);\n}\n\nvar sanitizeReports = function sanitizeReports(reports) {\n  var i = 0;\n  var erroneous = {\n    \"edges\": [],\n    \"ids\": []\n  };\n\n  while (i < reports.length) {\n    var report = reports[i];\n\n    if (!report.hasOwnProperty(\"ParentEventID\") || report[\"ParentEventID\"].length == 0) {\n      erroneous.edges.push(report);\n      report[\"ParentEventID\"] = [];\n    } else if (!report.hasOwnProperty(\"EventID\")) {\n      erroneous.ids.push(report);\n      reports.splice(i, 1);\n      i--;\n    }\n\n    i++;\n  }\n\n  if (erroneous.edges.length > 0 || erroneous.ids.length > 0) {\n    if (erroneous.edges.length > 0) console.warn(\"Warning: \" + erroneous.edges.length + \" reports with no edges\");\n    if (erroneous.ids.length > 0) console.warn(\"Warning: \" + erroneous.ids.length + \" reports with no or bad ID\");\n    console.warn(\"Erroneous reports: \", erroneous);\n  }\n\n  return reports;\n};\n\nvar createGraphFromReports = function createGraphFromReports(reports, params) {\n  console.log(\"Creating graph from reports\"); // Filter hideagent elements\n\n  if (params[\"hideagent\"]) {\n    console.info(\"Hiding agent\", params[\"hideagent\"], \"in\", reports.length, \"reports\");\n    reports = filter_agent_reports(reports, params[\"hideagent\"]);\n  } // Filter 'merge' elements\n\n\n  console.info(\"Removing 'merge' operations in\", reports.length, \"reports\");\n  reports = filter_merge_reports(reports); // Filter yarnchild reports\n\n  if (params[\"mapreduceonly\"]) {\n    console.info(\"Filtering mapreduce reports in\", reports.length, \"reports\");\n    reports = filter_yarnchild_reports(reports);\n  } // Create nodes\n\n\n  console.info(\"Creating graph nodes\");\n  var nodes = {};\n\n  for (var i = 0; i < reports.length; i++) {\n    var report = reports[i];\n\n    if (!report.hasOwnProperty(\"EventID\")) {\n      console.error(\"Bad report found with no ID:\", report);\n      continue;\n    }\n\n    var id = report.EventID;\n    nodes[id] = new Node(id);\n    nodes[id].report = report;\n  } // Second link the nodes together\n\n\n  console.info(\"Linking graph nodes\");\n\n  for (var nodeid in nodes) {\n    var node = nodes[nodeid];\n    node.report[\"ParentEventID\"].forEach(function (parentid) {\n      if (nodes[parentid]) {\n        nodes[parentid].addChild(node);\n        node.addParent(nodes[parentid]);\n      }\n    });\n  } // // Create the graph and add the nodes\n  // var graph = new Graph();\n  // for (var id in nodes) {\n  //     graph.addNode(nodes[id]);\n  // }\n  // console.log(\"Done creating graph from reports\");\n  // return graph;\n\n};\n\nvar createJSONFromVisibleGraph = function createJSONFromVisibleGraph(graph) {\n  var nodes = graph.getVisibleNodes();\n  var reports = [];\n\n  for (var i = 0; i < nodes.length; i++) {\n    var node = nodes[i];\n    var parents = node.getVisibleParents();\n    var report = $.extend({}, node.report);\n    report[\"ParentEventID\"] = [];\n\n    for (var j = 0; j < parents.length; j++) {\n      report[\"ParentEventID\"].push(parents[j].id);\n    }\n\n    reports.push(report);\n  }\n\n  return {\n    \"reports\": reports\n  };\n}; //Javascript impl of java's string hashcode:\n//http://werxltd.com/wp/2010/05/13/javascript-implementation-of-javas-string-hashcode-method/\n\n\nString.prototype.hashCode = function () {\n  var hash = 0,\n      i,\n      char;\n  if (this.length == 0) return hash;\n\n  for (i = 0; i < this.length; i++) {\n    char = this.charCodeAt(i);\n    hash = (hash << 5) - hash + char;\n    hash = hash & hash; // Convert to 32bit integer\n  }\n\n  return hash;\n};\n\nfunction hash_report(report) {\n  var hash = 0; //if (report[\"Agent\"]) hash += (\"Agent:\"+report[\"Agent\"]).hashCode();\n  //if (report[\"Label\"]) hash += (\"Label:\"+report[\"Label\"]).hashCode();\n  //if (report[\"Class\"]) hash += (\"Class:\"+report[\"Class\"]).hashCode();\n\n  if (report[\"Source\"]) hash += (\"Source:\" + report[\"Source\"]).hashCode();\n  return hash & hash;\n}\n\nvar filter_yarnchild_reports = function filter_yarnchild_reports(reports) {\n  // First, get the process IDs for the yarnchild nodes\n  var yarnchild_process_ids = {};\n\n  for (var i = 0; i < reports.length; i++) {\n    var report = reports[i];\n\n    if (report.hasOwnProperty(\"Agent\") && (report[\"Agent\"] == \"YarnChild\" || report[\"Agent\"] == \"Hadoop Job\")) {\n      yarnchild_process_ids[report[\"ProcessID\"]] = true;\n    }\n  } // A function to decide whether a report stays or goes\n\n\n  var filter = function filter(report) {\n    return yarnchild_process_ids[report[\"ProcessID\"]] ? false : true;\n  };\n\n  return filter_reports(reports, filter);\n};\n\nvar filter_merge_reports = function filter_merge_reports(reports) {\n  var filter = function filter(report) {\n    return report[\"Operation\"] && report[\"Operation\"] == \"merge\";\n  };\n\n  return filter_reports(reports, filter);\n};\n\nvar filter_agent_reports = function filter_agent_reports(reports, agent) {\n  var filter = function filter(report) {\n    return report[\"Agent\"] && report[\"Agent\"] == agent;\n  };\n\n  return filter_reports(reports, filter);\n};\n\nvar filter_reports = function filter_reports(reports, f) {\n  // Figure out which reports have to be removed\n  var retained = {};\n  var removed = {};\n  var reportmap = {};\n\n  for (var i = 0; i < reports.length; i++) {\n    var report = reports[i];\n    var id = report.EventID;\n    reportmap[id] = report;\n\n    if (f(report)) {\n      removed[id] = report;\n    } else {\n      retained[id] = report;\n    }\n  }\n\n  var remapped = {};\n  var num_calculated = 0;\n\n  var remap_parents = function remap_parents(id) {\n    if (remapped[id]) {\n      return;\n    } else {\n      var report = reportmap[id];\n      var parents = report[\"ParentEventID\"];\n      var newparents = {};\n\n      for (var i = 0; i < parents.length; i++) {\n        if (removed[parents[i]]) {\n          remap_parents(parents[i]);\n          reportmap[parents[i]][\"ParentEventID\"].forEach(function (grandparent) {\n            newparents[grandparent] = true;\n          });\n        } else {\n          newparents[parents[i]] = true;\n        }\n      }\n\n      report[\"ParentEventID\"] = Object.keys(newparents);\n      remapped[id] = true;\n    }\n  };\n\n  return Object.keys(retained).map(function (id) {\n    remap_parents(id);\n    return retained[id];\n  });\n}; // var yarnchild_kernelgraph_for_trace = function (trace) {\n//     trace.reports = filter_yarnchild_reports(trace.reports);\n//     trace.reports = filter_merge_reports(trace.reports);\n//     return kernelgraph_for_trace(trace);\n// }\n\n\nexport var report_id = function report_id(report) {\n  return report.EventID;\n}; // generates numeric ids starting from 0, never reuses same number\n\nexport var unique_id = function () {\n  var seed = 0;\n  return function () {\n    return seed++;\n  };\n}(); // generates random strings of default length 8 consisting of only letters\n\nvar random_string = function random_string(\n/*optional*/\nlength) {\n  if (!length) length = 8;\n  var text = \"\";\n  var possible = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz\";\n\n  for (var i = 0; i < length; i++) {\n    text += possible.charAt(Math.floor(Math.random() * possible.length));\n  }\n\n  return text;\n};\n\nexport function group_reports_by_field(reports, field) {\n  var grouping = {};\n\n  for (var i = 0; i < reports.length; i++) {\n    try {\n      var value = reports[i][field];\n      if (!(value in grouping)) grouping[value] = [];\n      grouping[value].push(reports[i]);\n    } catch (e) {\n      console.log(e);\n    }\n  }\n\n  return grouping;\n}\n;","map":{"version":3,"sources":["/home/stolet/TraViz/traviz_frontend/src/components/Swimlane/xtrace_utils.js"],"names":["d3","$","window","width","document","body","clientWidth","height","clientHeight","getParameter","name","replace","regexS","regex","RegExp","results","exec","location","href","getParameters","indexOf","param_strs","substr","split","params","forEach","str","splits","length","getReports","ids_str","callback","errback","i","batch_size","ids","json_ids","regular_ids","id","push","jsondone","batchdone","batch_callback","json","concat","next_request_ids","splice","console","info","getAllReports","join","json_fecthing_id","json_batch_callback","loadTraceFromFile","evt","log","files","target","reader","FileReader","onload","e","JSON","parse","result","trace","sanitizeReports","reports","readAsText","report_url","xhr","XMLHttpRequest","open","onreadystatechange","readyState","status","responseText","send","getRawReports","getRelated","overlapping_url","getTags","tags_url","getGCReports","gcReportsReceivedCallback","data","GCReportsByProcess","j","report","processID","tagsReceivedCallback","tagdata","GCTasks","taskid","tags","relatedIDsReceivedCallback","erroneous","hasOwnProperty","edges","warn","createGraphFromReports","filter_agent_reports","filter_merge_reports","filter_yarnchild_reports","nodes","error","EventID","Node","nodeid","node","parentid","addChild","addParent","createJSONFromVisibleGraph","graph","getVisibleNodes","parents","getVisibleParents","extend","String","prototype","hashCode","hash","char","charCodeAt","hash_report","yarnchild_process_ids","filter","filter_reports","agent","f","retained","removed","reportmap","remapped","num_calculated","remap_parents","newparents","grandparent","Object","keys","map","report_id","unique_id","seed","random_string","text","possible","charAt","Math","floor","random","group_reports_by_field","field","grouping","value"],"mappings":"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","sourcesContent":["import * as d3 from \"d3\"\nimport $ from \"jquery\"\nvar window = window ? window : {};\n// Problems with resizing and jquery and chrome and this stuff is so dumb.\nwindow.width = function () {\n    return document.body.clientWidth;\n};\n\nwindow.height = function () {\n    return document.body.clientHeight;\n};\n\n// http://stackoverflow.com/questions/523266/how-can-i-get-a-specific-parameter-from-location-search\nvar getParameter = function (name) {\n    name = name.replace(/[\\[]/, \"\\\\\\[\").replace(/[\\]]/, \"\\\\\\]\");\n    var regexS = \"[\\\\?&]\" + name + \"=([^&#]*)\";\n    var regex = new RegExp(regexS);\n    var results = regex.exec(window.location.href);\n    if (results == null)\n        return \"\";\n    else\n        return results[1];\n};\n\nvar getParameters = function () {\n    if (window.location.href.indexOf(\"?\") == -1) return {};\n    var param_strs = window.location.href.substr(window.location.href.indexOf(\"?\") + 1).split(\"&\");\n    var params = {};\n    param_strs.forEach(function (str) {\n        var splits = str.split(\"=\");\n        if (splits.length == 2) {\n            params[splits[0]] = splits[1];\n        }\n    });\n    return params;\n};\n\nvar getReports = function (ids_str, callback, errback) {\n    // Batches report requests\n    if (ids_str == null) {\n        errback(\"No IDs specified\");\n    }\n\n    var i = 0;\n    var batch_size = 20;\n    var ids = ids_str.split(\",\");\n\n    var json_ids = [];\n    var regular_ids = [];\n    for (var i = 0; i < ids.length; i++) {\n        var id = ids[i];\n        if (id.indexOf(\".json\") != -1) {\n            json_ids.push(id);\n        } else {\n            regular_ids.push(id);\n        }\n    }\n\n    var results = [];\n    var jsondone = false, batchdone = false;\n    var batch_callback = function (json) {\n        results = results.concat(json);\n        i++;\n        if (regular_ids.length == 0) {\n            batchdone = true;\n            if (jsondone && batchdone) callback(results);\n        } else {\n            var next_request_ids = regular_ids.splice(0, batch_size);\n            console.info(\"Retrieving batch \" + i + \":\", next_request_ids);\n            getAllReports(next_request_ids.join(), batch_callback, errback);\n        }\n    }\n\n    var json_fecthing_id = null;\n    var json_batch_callback = function (json) {\n        if (json.length == 1) json[0].id = json_fecthing_id;\n        results = results.concat(json);\n        if (json_ids.length == 0) {\n            jsondone = true;\n            if (jsondone && batchdone) callback(results);\n        } else {\n            json_fecthing_id = json_ids.splice(0, 1);\n            d3.json(json_fecthing_id, json_batch_callback);\n            console.info(\"Retrieving JSON file \" + id);\n        }\n    }\n\n    batch_callback([]);\n    json_batch_callback([]);\n}\n\nvar loadTraceFromFile = function (callback, errback) {\n    return function (evt) {\n        console.log(\"loading \", evt);\n        var files = evt.target.files; // FileList\n        var reader = new FileReader();\n        reader.onload = function (e) {\n            try {\n                var json = JSON.parse(e.target.result);\n            } catch (e) {\n                errback(\"Unable to parse JSON file \" + files[0].name, e);\n            }\n            try {\n                json.forEach(function (trace) { sanitizeReports(trace.reports); });\n                callback(json);\n            } catch (e) {\n                errback(\"Unable to process JSON file \" + files[0].name, e);\n            }\n        };\n        reader.readAsText(files[0]);\n    };\n}\n\nvar getAllReports = function (ids, callback, errback) {\n    var report_url = \"reports/\" + ids;\n\n    var xhr = new XMLHttpRequest();\n\n    xhr.open(\"GET\", report_url, true);\n\n    xhr.onreadystatechange = function () {\n        if (xhr.readyState == 4) {\n            if (xhr.status = 200) {\n                var json = JSON.parse(xhr.responseText);\n                json.forEach(function (trace) { sanitizeReports(trace.reports); });\n                callback(json);\n            } else {\n                errback(xhr.status, xhr);\n            }\n        }\n    };\n\n    xhr.send(null);\n};\n\nvar getRawReports = function (id, callback, errback) {\n    var report_url = \"reports/\" + id;\n\n    var xhr = new XMLHttpRequest();\n\n    xhr.open(\"GET\", report_url, true);\n\n    xhr.onreadystatechange = function () {\n        if (xhr.readyState == 4) {\n            if (xhr.status = 200) {\n                callback(xhr.responseText);\n            } else {\n                errback(xhr.status, xhr);\n            }\n        }\n    };\n\n    xhr.send(null);\n};\n\nfunction getRelated(ids, callback, errback) {\n    var overlapping_url = \"overlapping/\" + ids;\n\n    var xhr = new XMLHttpRequest();\n\n    xhr.open(\"GET\", overlapping_url, true);\n\n    xhr.onreadystatechange = function () {\n        if (xhr.readyState == 4) {\n            if (xhr.status = 200) {\n                try {\n                    var json = JSON.parse(xhr.responseText);\n                    callback(json);\n                } catch (e) {\n                    errback(e);\n                }\n            } else {\n                errback(xhr);\n            }\n        }\n    };\n\n    xhr.send(null);\n};\n\nfunction getTags(ids, callback, errback) {\n    var tags_url = \"tags/\" + ids;\n\n    var xhr = new XMLHttpRequest();\n\n    xhr.open(\"GET\", tags_url, true);\n\n    xhr.onreadystatechange = function () {\n        if (xhr.readyState == 4) {\n            if (xhr.status = 200) {\n                try {\n                    var json = JSON.parse(xhr.responseText);\n                    callback(json);\n                } catch (e) {\n                    errback(e);\n                }\n            } else {\n                errback(xhr);\n            }\n        }\n    };\n\n    xhr.send(null);\n}\n\nfunction getGCReports(ids, callback, errback) {\n    var gcReportsReceivedCallback = function (data) {\n        var GCReportsByProcess = {}\n        for (var i = 0; i < data.length; i++) {\n            var reports = data[i].reports;\n            for (var j = 0; j < reports.length; j++) {\n                var report = reports[j];\n                if (report[\"Operation\"] && report[\"Operation\"] == \"GC\") {\n                    var processID = report[\"ProcessID\"];\n                    if (!GCReportsByProcess[processID])\n                        GCReportsByProcess[processID] = [report];\n                    else\n                        GCReportsByProcess[processID].push(report);\n                }\n            }\n        }\n        callback(GCReportsByProcess);\n    };\n    var tagsReceivedCallback = function (tagdata) {\n        var GCTasks = [];\n        for (var taskid in tagdata) {\n            var tags = tagdata[taskid];\n            if (tags.indexOf(\"GarbageCollection\") != -1 || tags.indexOf(\"GC\") != -1) {\n                GCTasks.push(taskid);\n            }\n        }\n        if (GCTasks.length > 0) {\n            getReports(GCTasks.join(\",\"), gcReportsReceivedCallback, errback);\n        } else {\n            callback({});\n        }\n    };\n    var relatedIDsReceivedCallback = function (ids) {\n        console.log(\"Searching for GarbageCollection data in ids: \" + ids.join(','));\n        getTags(ids.join(','), tagsReceivedCallback, errback);\n    };\n    getRelated(ids, relatedIDsReceivedCallback, errback);\n}\n\nvar sanitizeReports = function (reports) {\n    var i = 0;\n    var erroneous = { \"edges\": [], \"ids\": [] };\n    while (i < reports.length) {\n        var report = reports[i];\n        if (!report.hasOwnProperty(\"ParentEventID\") || report[\"ParentEventID\"].length == 0) {\n            erroneous.edges.push(report);\n            report[\"ParentEventID\"] = [];\n        } else if (!report.hasOwnProperty(\"EventID\")) {\n            erroneous.ids.push(report);\n            reports.splice(i, 1);\n            i--;\n        }\n        i++;\n    }\n    if (erroneous.edges.length > 0 || erroneous.ids.length > 0) {\n        if (erroneous.edges.length > 0)\n            console.warn(\"Warning: \" + erroneous.edges.length + \" reports with no edges\");\n        if (erroneous.ids.length > 0)\n            console.warn(\"Warning: \" + erroneous.ids.length + \" reports with no or bad ID\");\n        console.warn(\"Erroneous reports: \", erroneous);\n    }\n\n    return reports;\n};\n\nvar createGraphFromReports = function (reports, params) {\n    console.log(\"Creating graph from reports\");\n\n    // Filter hideagent elements\n    if (params[\"hideagent\"]) {\n        console.info(\"Hiding agent\", params[\"hideagent\"], \"in\", reports.length, \"reports\");\n        reports = filter_agent_reports(reports, params[\"hideagent\"]);\n    }\n\n    // Filter 'merge' elements\n    console.info(\"Removing 'merge' operations in\", reports.length, \"reports\");\n    reports = filter_merge_reports(reports);\n\n    // Filter yarnchild reports\n    if (params[\"mapreduceonly\"]) {\n        console.info(\"Filtering mapreduce reports in\", reports.length, \"reports\");\n        reports = filter_yarnchild_reports(reports);\n    }\n\n    // Create nodes\n    console.info(\"Creating graph nodes\");\n    var nodes = {};\n    for (var i = 0; i < reports.length; i++) {\n        var report = reports[i];\n        if (!report.hasOwnProperty(\"EventID\")) {\n            console.error(\"Bad report found with no ID:\", report);\n            continue;\n        }\n        var id = report.EventID;\n        nodes[id] = new Node(id);\n        nodes[id].report = report;\n    }\n\n    // Second link the nodes together\n    console.info(\"Linking graph nodes\");\n    for (var nodeid in nodes) {\n        var node = nodes[nodeid];\n        node.report[\"ParentEventID\"].forEach(function (parentid) {\n            if (nodes[parentid]) {\n                nodes[parentid].addChild(node);\n                node.addParent(nodes[parentid]);\n            }\n        })\n    }\n\n    // // Create the graph and add the nodes\n    // var graph = new Graph();\n    // for (var id in nodes) {\n    //     graph.addNode(nodes[id]);\n    // }\n\n    // console.log(\"Done creating graph from reports\");\n    // return graph;\n}\n\nvar createJSONFromVisibleGraph = function (graph) {\n    var nodes = graph.getVisibleNodes();\n    var reports = [];\n\n    for (var i = 0; i < nodes.length; i++) {\n        var node = nodes[i];\n        var parents = node.getVisibleParents();\n        var report = $.extend({}, node.report);\n        report[\"ParentEventID\"] = [];\n        for (var j = 0; j < parents.length; j++) {\n            report[\"ParentEventID\"].push(parents[j].id);\n        }\n        reports.push(report);\n    }\n\n    return { \"reports\": reports };\n}\n\n\n//Javascript impl of java's string hashcode:\n//http://werxltd.com/wp/2010/05/13/javascript-implementation-of-javas-string-hashcode-method/\nString.prototype.hashCode = function () {\n    var hash = 0, i, char;\n    if (this.length == 0) return hash;\n    for (i = 0; i < this.length; i++) {\n        char = this.charCodeAt(i);\n        hash = ((hash << 5) - hash) + char;\n        hash = hash & hash; // Convert to 32bit integer\n    }\n    return hash;\n};\n\nfunction hash_report(report) {\n    var hash = 0;\n    //if (report[\"Agent\"]) hash += (\"Agent:\"+report[\"Agent\"]).hashCode();\n    //if (report[\"Label\"]) hash += (\"Label:\"+report[\"Label\"]).hashCode();\n    //if (report[\"Class\"]) hash += (\"Class:\"+report[\"Class\"]).hashCode();\n    if (report[\"Source\"]) hash += (\"Source:\" + report[\"Source\"]).hashCode();\n    return hash & hash;\n}\n\nvar filter_yarnchild_reports = function (reports) {\n    // First, get the process IDs for the yarnchild nodes\n    var yarnchild_process_ids = {};\n    for (var i = 0; i < reports.length; i++) {\n        var report = reports[i];\n        if (report.hasOwnProperty(\"Agent\") && (report[\"Agent\"] == \"YarnChild\" || report[\"Agent\"] == \"Hadoop Job\")) {\n            yarnchild_process_ids[report[\"ProcessID\"]] = true;\n        }\n    }\n\n    // A function to decide whether a report stays or goes\n    var filter = function (report) {\n        return yarnchild_process_ids[report[\"ProcessID\"]] ? false : true;\n    }\n\n    return filter_reports(reports, filter);\n}\n\nvar filter_merge_reports = function (reports) {\n    var filter = function (report) {\n        return report[\"Operation\"] && report[\"Operation\"] == \"merge\";\n    }\n\n    return filter_reports(reports, filter);\n}\n\nvar filter_agent_reports = function (reports, agent) {\n    var filter = function (report) {\n        return report[\"Agent\"] && report[\"Agent\"] == agent;\n    };\n\n    return filter_reports(reports, filter);\n}\n\n\nvar filter_reports = function (reports, f) {\n    // Figure out which reports have to be removed\n    var retained = {};\n    var removed = {};\n    var reportmap = {};\n    for (var i = 0; i < reports.length; i++) {\n        var report = reports[i];\n        var id = report.EventID;\n        reportmap[id] = report;\n        if (f(report)) {\n            removed[id] = report;\n        } else {\n            retained[id] = report;\n        }\n    }\n\n    var remapped = {};\n    var num_calculated = 0;\n    var remap_parents = function (id) {\n        if (remapped[id]) {\n            return;\n        } else {\n            var report = reportmap[id];\n            var parents = report[\"ParentEventID\"];\n            var newparents = {};\n            for (var i = 0; i < parents.length; i++) {\n                if (removed[parents[i]]) {\n                    remap_parents(parents[i]);\n                    reportmap[parents[i]][\"ParentEventID\"].forEach(function (grandparent) {\n                        newparents[grandparent] = true;\n                    })\n                } else {\n                    newparents[parents[i]] = true;\n                }\n            }\n            report[\"ParentEventID\"] = Object.keys(newparents);\n            remapped[id] = true;\n        }\n    }\n\n    return Object.keys(retained).map(function (id) {\n        remap_parents(id);\n        return retained[id];\n    })\n}\n\n// var yarnchild_kernelgraph_for_trace = function (trace) {\n//     trace.reports = filter_yarnchild_reports(trace.reports);\n//     trace.reports = filter_merge_reports(trace.reports);\n//     return kernelgraph_for_trace(trace);\n// }\n\nexport var report_id = function (report) {\n    return report.EventID;\n}\n\n// generates numeric ids starting from 0, never reuses same number\nexport var unique_id = function () {\n    var seed = 0;\n    return function () {\n        return seed++;\n    };\n}();\n\n// generates random strings of default length 8 consisting of only letters\nvar random_string = function (/*optional*/ length) {\n    if (!length)\n        length = 8;\n    var text = \"\";\n    var possible = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz\";\n\n    for (var i = 0; i < length; i++)\n        text += possible.charAt(Math.floor(Math.random() * possible.length));\n\n    return text;\n};\n\n\n\nexport function group_reports_by_field(reports, field) {\n    var grouping = {};\n    for (var i = 0; i < reports.length; i++) {\n        try {\n            var value = reports[i][field];\n            if (!(value in grouping))\n                grouping[value] = [];\n            grouping[value].push(reports[i]);\n        } catch (e) {\n            console.log(e);\n        }\n    }\n    return grouping;\n};"]},"metadata":{},"sourceType":"module"}