{"version":3,"sources":["components/Header/Header.js","services/TraceService/TraceService.js","dc/cxContext.js","dc/tableTemplate.js","dc/traceTable.js","dc/chartTemplate.js","dc/eventsChart.js","dc/durationChart.js","dc/dateChart.js","dc/dashboard.js","components/Swimlane/data/VizGroup.js","components/Swimlane/xtrace_utils.js","components/Swimlane/data/Workload.js","components/Swimlane/data/criticalpath.js","components/Swimlane/Swimlane.js","pages/Home/Home.js","components/Main/Main.js","App.js","index.js","components/Swimlane/data/VizLane.js"],"names":["Header","react_default","a","createElement","API_URL","TraceService","url","axios","get","then","response","data","id","CXContext","React","createContext","dateFormatParser","timeFormat","timeParse","numberFormat","format","DataContext","_React$Component","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","loading","hasNDX","traces","traceService","inherits","createClass","key","value","_this2","setState","getAllTraces","console","log","forEach","d","dd","Date","month","timeMonth","Duration","NumEvents","Tags","ndx","crossfilter","Provider","ref","parent","children","Component","NextButton","class","type","onClick","totFilteredRecs","groupAll","ofs","table","beginSlice","endSlice","redraw","LastButton","Pagination","tableTemplate_LastButton","tableTemplate_NextButton","TableTemplate","context","useContext","_React$useState","useState","_React$useState2","slicedToArray","updateTable","div","useRef","useEffect","newTable","tableFunction","current","render","title","tableTemplate_Pagination","tableFunc","divRef","traceTable","dc","dimension","group","d3Format","getFullYear","getMonth","columns","label","ID","getUTCFullYear","getUTCMonth","getUTCDate","sortBy","size","Infinity","showGroups","on","Math","floor","end","d3","text","attr","TraceTable","tableTemplate_TableTemplate","ResetButton","chart","filterAll","ChartTemplate","updateChart","newChart","chartFunction","chartTemplate_ResetButton","eventsChartFunc","eventsChart","gap","x","scaleLinear","domain","rangeRound","y","valueAccessor","centerBar","xUnits","renderHorizontalGridLines","filterPrinter","filters","filter","s","xAxis","tickFormat","v","yAxis","ticks","EventsChart","chartTemplate_ChartTemplate","durationChartFunc","durationChart","round","DurationChart","dateChartFunc","dateChart","dates","bottom","top","DateChart","Dashboard","style","css","padding","marginTop","cxContext_DataContext","lib","md","traceTable_TraceTable","eventsChart_EventsChart","durationChart_DurationChart","dateChart_DateChart","Group","prototype","Lanes","Events","concat","apply","map","lane","Spans","Threads","Processes","Tasks","Edges","GC","HDD","Network","Fill","_","arguments","length","fill","Height","Spacing","l","reduce","b","Offset","offset","spacing","Scale","scale","ProcessGroup","layout","process","lanes","thread","VizLane","random","evt","spn","gc","edge","child","GCEvents","TenantGroup","tasks","task","window","width","document","body","clientWidth","height","clientHeight","String","hashCode","i","hash","charCodeAt","report_id","report","EventID","unique_id","seed","group_reports_by_field","reports","field","grouping","push","e","PrototypeBuilder","getter","accessors","mappers","times","build","cls","fqid","globalID","getID","obj","getGlobalID","accessor","accessor_data_field","toLowerCase","mapper","dontcache","ret","elem","Start","start","min","End","max","XEvent","span","timestamp","Timestamp","Operation","duration","Number","substr","Agent","indexOf","keys","machine","reports_by_id","edges","parents","ParentEventID","XSpan","events","waiting","substring","sort","hddevents","event","networkevents","startsWith","XThread","spans","preWait","preWaitEndEvent","Wait","shortname","names","ThreadName","othernames","selected","XProcess","processid","replace","gcevents","totalTS","totalHRT","count","HRT","avgHRT","avgTS","reportTS","reports_by_thread","XtraceUtils","thread_id","threads","addGCData","gcdata","gcreports","GCEvent","gcevent","XMachine","llid","reports_by_process","process_id","processes","XTask","machines","reports_by_machine","machine_id","tags","j","Workload","workload","addTask","addGC","xtraceid","name","filter_criticalpath_events","finalevent","cpath","finalreport","reportmap","Utils","next","candidate","critical_path","oncpath","Swimlane","createSwimlane","bind","assertThisInitialized","node","margin","properties","showevents","showedges","showgc","showspans","showcpath","callbacks","refresh","sx","d3scale","brush","axis","tickSize","swimlane","selection","each","range","sy","defs","selectAll","enter","append","select","exit","remove","main","newmain","newlanes","newmargin","lanelabels","darker","Label","lanecontrols","Groups","VizGroup","mousex","moving","lastx","zoom","datalen","rangemin","rangemax","invert","newx0","extent","newx1","deltax","translate","swap","minExtent","maxExtent","spandata","getTime","hdddata","networkdata","eventdata","CritPath","edgedata","$","inArray","classed","hdd","network","norm","cb","property","Home","dashboard_Dashboard","components_Swimlane_Swimlane","Main","react_router","exact","path","component","App","className","components_Header_Header","components_Main_Main","ReactDOM","react_router_dom","src_App","getElementById","Lane","ThreadLane","ShortName","HDDEvents","NetworkEvents","TaskLane"],"mappings":"oMAWeA,MARf,WACI,OACIC,EAAAC,EAAAC,cAAA,cACIF,EAAAC,EAAAC,cAAA,iKCLNC,EAAU,6BAgBDC,8NAZDC,YAASF,iCACRG,IAAMC,IAAIF,GAAKG,KAAK,SAAAC,GACvB,OAAOA,EAASC,8KAITC,gFACLN,YAASF,qBAAkBQ,qBAC1BL,IAAMC,IAAIF,GAAKG,KAAK,SAAAC,GAAQ,OAAIA,EAASC,+GCP3CE,EAAYC,IAAMC,cAAc,aAGhCC,GADaC,YADU,qBAEJC,YAFI,sBAGvBC,EAAeC,YAAO,OAEtBC,EAAb,SAAAC,GACE,SAAAD,EAAYE,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAN,IACjBG,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAJ,GAAAS,KAAAH,KAAMJ,KACDQ,MAAM,CAACC,SAAQ,EAAMC,QAAO,EAAMC,OAAO,IAE9CV,EAAKW,aAAe,IAAI9B,EAJPmB,EADrB,OAAAC,OAAAW,EAAA,EAAAX,CAAAJ,EAAAC,GAAAG,OAAAY,EAAA,EAAAZ,CAAAJ,EAAA,EAAAiB,IAAA,oBAAAC,MAAA,WAQsB,IAAAC,EAAAb,KACZA,KAAKI,MAAME,QAGZN,KAAKI,MAAMC,UAGdL,KAAKc,SAAS,CAACT,SAAQ,IACvBL,KAAKQ,aAAaO,eAAejC,KAAK,SAAAyB,GAClCS,QAAQC,IAAI,gBACZD,QAAQC,IAAIV,GACZA,EAAOW,QAAQ,SAAUC,GACrBA,EAAEC,GAAK/B,EAAiB8B,EAAEE,MAC1BF,EAAEG,MAAQC,YAAUJ,EAAEC,IACtBD,EAAEK,UAAYL,EAAEK,SAAW,IAC3BL,EAAEM,WAAaN,EAAEM,UACjBN,EAAEO,KAAOP,EAAEO,OAEfV,QAAQC,IAAIV,GACZM,EAAKc,IAAMC,EAAYrB,GACvBM,EAAKC,SAAS,CAACT,SAAQ,EAAMC,QAAO,SA5B9C,CAAAK,IAAA,SAAAC,MAAA,WAiCM,OAAIZ,KAAKI,MAAME,OAIfhC,EAAAC,EAAAC,cAACU,EAAU2C,SAAX,CAAoBjB,MAAO,CAACe,IAAI3B,KAAK2B,MACnCrD,EAAAC,EAAAC,cAAA,OAAKsD,IAAK9B,KAAK+B,QACd/B,KAAKJ,MAAMoC,WALH,SAlCjBtC,EAAA,CAAiCP,IAAM8C,WCRjCC,EAAa,SAAAtC,GACf,OACItB,EAAAC,EAAAC,cAAA,SAAOS,GAAG,OAAOkD,MAAM,MAAMC,KAAK,SAASxB,MAAM,OAC7CyB,QAAS,WACL,IAAIC,EAAkB1C,EAAM+B,IAAIY,WAAW3B,QAGvC4B,GAFAA,EAAM5C,EAAM6C,MAAMC,cACZ,GACYJ,EAAkBA,EAAkBE,EADhD,GAEV5C,EAAM6C,MAAMC,WAAWF,GACvB5C,EAAM6C,MAAME,SAASH,EAHX,IAIV5C,EAAM6C,MAAMG,aAKtBC,EAAa,SAAAjD,GACf,OACItB,EAAAC,EAAAC,cAAA,SAAOS,GAAG,OAAOkD,MAAM,MAAMC,KAAK,SAASxB,MAAM,OAC7CyB,QAAS,WACL,IAEIG,GAFAA,EAAM5C,EAAM6C,MAAMC,cACZ,GACY,EAAI,EAAIF,EADpB,GAEV5C,EAAM6C,MAAMC,WAAWF,GACvB5C,EAAM6C,MAAME,SAASH,EAHX,IAIV5C,EAAM6C,MAAMG,aAKfE,EAAa,SAAAlD,GACtB,OACItB,EAAAC,EAAAC,cAAA,OAAKS,GAAG,UAAR,WACYX,EAAAC,EAAAC,cAAA,QAAMS,GAAG,UADrB,IACqCX,EAAAC,EAAAC,cAAA,QAAMS,GAAG,QAD9C,OAC+DX,EAAAC,EAAAC,cAAA,QAAMS,GAAG,SADxE,IACuFX,EAAAC,EAAAC,cAAA,QAAMS,GAAG,cAC5FX,EAAAC,EAAAC,cAACuE,EAAD,CAAYN,MAAO7C,EAAM6C,MAAOd,IAAK/B,EAAM+B,MAC3CrD,EAAAC,EAAAC,cAACwE,EAAD,CAAYP,MAAO7C,EAAM6C,MAAOd,IAAK/B,EAAM+B,QAK1CsB,EAAgB,SAAArD,GACzB,IAAMsD,EAAU/D,IAAMgE,WAAWjE,GADCkE,EAENjE,IAAMkE,SAAS,MAFTC,EAAAxD,OAAAyD,EAAA,EAAAzD,CAAAsD,EAAA,GAE3BX,EAF2Ba,EAAA,GAErBE,EAFqBF,EAAA,GAG5B3B,EAAMuB,EAAQvB,IACd8B,EAAMtE,IAAMuE,OAAO,MAOzB,OANAvE,IAAMwE,UAAU,WACZ,IAAMC,EAAWhE,EAAMiE,cAAcJ,EAAIK,QAASnC,GAClDiC,EAASG,SACTP,EAAYI,IACd,GAGEtF,EAAAC,EAAAC,cAAA,OAAKsD,IAAK2B,GACNnF,EAAAC,EAAAC,cAAA,aAAQoB,EAAMoE,OACd1F,EAAAC,EAAAC,cAACyF,EAAD,CAAYxB,MAAOA,EAAOd,IAAKA,MChDrCuC,EAAY,SAACC,EAAQxC,GACvB,IAAMyC,EAAaC,YAAaF,GAE1BG,EAAY3C,EAAI2C,UAAU,SAAAnD,GAAC,OAAGA,EAAEC,KAClCoB,EAAM,EAmEV,OAjEA4B,EAAWE,UAAUA,GACpBC,MAAM,SAAApD,GACH,IAAI1B,EAAS+E,YAAS,OACtB,OAAOrD,EAAEC,GAAGqD,cAAgB,IAAMhF,EAAQ0B,EAAEC,GAAGsD,WAAa,KAE/DC,QAAQ,CACL,CACIC,MAAO,KACPnF,OAAQ,SAAS0B,GACb,MAAO,mBAAqBA,EAAE0D,GAAK,KAAO1D,EAAE0D,GAAK,SAGzD,CACID,MAAO,OACPnF,OAAQ,SAAU0B,GACd,OAAOA,EAAEC,GAAG0D,iBAAkB,KAAM3D,EAAEC,GAAG2D,cAAc,GAAI,IAAK5D,EAAEC,GAAG4D,eAG7E,WACA,YACA,SAEHC,OAAO,SAAU9D,GACd,OAAOA,EAAEC,KAEZ8D,KAAKC,KACLC,YAAW,GACXC,GAAG,YAAa,SAAU5C,GACrB,IAAIH,EAAkBX,EAAIY,WAAW3B,QAGrC4B,GADAA,EAAMA,GAAOF,EA/BT,GA+B2BgD,KAAKC,OAAOjD,EAAkB,GA/BzD,IA+B2EE,GACnE,EAAI,EAAIA,EACpBC,EAAMC,WAAWF,GACjBC,EAAME,SAASH,EAlCX,MAoCT6C,GAAG,YAAa,SAAU5C,GACrB,IAAIH,EAAkBX,EAAIY,WAAW3B,QACrC4B,EAAMC,EAAMC,aACZ1B,QAAQC,IAAIuB,GAGZA,GADAA,EAAMA,GAAOF,EAzCT,GAyC2BgD,KAAKC,OAAOjD,EAAkB,GAzCzD,IAyC2EE,GACnE,EAAI,EAAIA,EACpBxB,QAAQC,IAAIuB,GACZC,EAAMC,WAAWF,GACjBC,EAAME,SAASH,EA7CX,MA+CT6C,GAAG,gBAAiB,SAAU5C,GACzB,IAAIH,EAAkBX,EAAIY,WAAW3B,QACjC4E,EAAMhD,EAjDN,GAiDkBF,EAAkBA,EAAkBE,EAjDtD,GAkDJiD,IAAU,UACLC,KAAa,IAARF,EAAWhD,EAAMA,EAAM,GACjCiD,IAAU,QACLC,KAAKF,GACVC,IAAU,SACLE,KAAK,WAAYnD,EAvDlB,GAuD0B,EAAI,OAAS,MAC3CiD,IAAU,SACLE,KAAK,WAAYnD,EAzDlB,IAyD2BF,EAAkB,OAAS,MAC1DmD,IAAU,SAASC,KAAKpD,GACrBA,GAAmBX,EAAIuD,OACxBO,IAAU,cAAcC,KAAK,oBAAsB/D,EAAIuD,OAAS,MAEhEO,IAAU,cAAcC,KAAK,MAI9BtB,GAIEwB,EAAa,SAAAhG,GAAK,OAC3BtB,EAAAC,EAAAC,cAACqH,EAAD,CAAehC,cAAeK,EAAWF,MAAM,2BCjF7C8B,EAAc,SAAAlG,GAClB,OACEtB,EAAAC,EAAAC,cAAA,SAAO2D,MAAM,MAAMC,KAAK,SAASxB,MAAM,QACrCyB,QAAS,WACPzC,EAAMmG,MAAMC,YACZ3B,kBAMK4B,EAAgB,SAAArG,GAO3B,IAAMsD,EAAU/D,IAAMgE,WAAWjE,GAPGkE,EAQRjE,IAAMkE,SAAS,MARPC,EAAAxD,OAAAyD,EAAA,EAAAzD,CAAAsD,EAAA,GAQ7B2C,EAR6BzC,EAAA,GAQvB4C,EARuB5C,EAAA,GAS9B3B,EAAMuB,EAAQvB,IACd8B,EAAMtE,IAAMuE,OAAO,MAQzB,OAPAvE,IAAMwE,UAAU,WACd,IAAMwC,EAAWvG,EAAMwG,cAAc3C,EAAIK,QAASnC,GAElDwE,EAASpC,SACTmC,EAAYC,IACZ,GAGA7H,EAAAC,EAAAC,cAAA,OACEsD,IAAK2B,GAENnF,EAAAC,EAAAC,cAAA,aAAQoB,EAAMoE,OACd1F,EAAAC,EAAAC,cAAC6H,EAAD,CAAaN,MAAOA,MChCnBO,EAAkB,SAACnC,EAAQxC,GAC7B,IAAM4E,EAAclC,WAAYF,GAC1BG,EAAY3C,EAAI2C,UAAU,SAAAnD,GAAC,OAAGA,EAAEM,YAChC8C,EAAQD,EAAUC,MAAM,SAAUpD,GAAK,OAA4B,GAArBmE,KAAKC,MAAMpE,EAAI,MAyBnE,OAxBAoF,EACCjC,UAAUA,GACVC,MAAMA,GACNiC,IAAI,GACJC,EAAEC,cAAcC,OAAO,CAAC,EAAE,MAAMC,WAAW,CAAC,EAAG,OAC/CC,EAAEH,cAAcC,OAAO,CAAC,EAAG,OAC3BG,cAAc,SAAAL,GAAC,OAAEA,EAAE7F,QACnBmG,WAAU,GACVC,OAAO,WAAa,OAAO,KAC3BC,2BAA0B,GAC1BC,cAAe,SAACC,GACb,IAAIC,EAASD,EAAQ,GAAIE,EAAI,GAE7B,OADAA,GAAK7H,EAAa4H,EAAO,IAAM,OAAS5H,EAAa4H,EAAO,MAIhEb,EAAYe,QAAQC,WAChB,SAAUC,GAAK,OAAOA,IAG1BjB,EAAYkB,QAAQC,MAAM,IAAIH,WAC1B,SAAUC,GAAK,OAAOA,EAAI,IAAO,MAG9BjB,GAGEoB,EAAc,SAAA/H,GAAK,OAC5BtB,EAAAC,EAAAC,cAACoJ,EAAD,CAAexB,cAAeE,EAAiBtC,MAAM,6BChCnD6D,EAAoB,SAAC1D,EAAQxC,GAC/B,IAAMmG,EAAgBzD,WAAYF,GAC5BG,EAAY3C,EAAI2C,UAAU,SAAAnD,GAAC,OAAGA,EAAEK,WAChC+C,EAAQD,EAAUC,MAAM,SAAUpD,GAAK,OAA4B,GAArBmE,KAAKC,MAAMpE,EAAI,MAyBnE,OAxBA2G,EACCxD,UAAUA,GACVC,MAAMA,GACNiC,IAAI,GACJC,EAAEC,cAAcC,OAAO,CAAC,EAAE,MAAOC,WAAW,CAAC,EAAG,OAChDC,EAAEH,cAAcC,OAAO,CAAC,EAAG,OAC3BG,cAAc,SAAAL,GAAC,OAAEA,EAAE7F,QACnBmG,WAAU,GACVC,OAAO,WAAa,OAAO,KAC3Be,MAAM1D,QAASkB,OACf2B,cAAe,SAACC,GACb,IAAIC,EAASD,EAAQ,GAAIE,EAAG,GAE5B,OADAA,GAAK7H,EAAa4H,EAAO,IAAM,SAAW5H,EAAa4H,EAAO,IAAM,OAIxEU,EAAcR,QAAQC,WAClB,SAAUC,GAAK,OAAOA,IAG1BM,EAAcL,QAAQF,WAClB,SAAUC,GAAK,OAAOA,IAGnBM,GAGEE,EAAgB,SAAApI,GAAK,OAC9BtB,EAAAC,EAAAC,cAACoJ,EAAD,CAAexB,cAAeyB,EAAmB7D,MAAM,0BCjCrDiE,EAAgB,SAAC9D,EAAQxC,GAC3B,IAAMuG,EAAY7D,WAAYF,GACxBG,EAAY3C,EAAI2C,UAAU,SAASnD,GAAK,OAAOA,EAAEC,KACjD+G,EAAQ7D,EAAUC,MAAMkB,KAW9B,OAVAzE,QAAQC,IAAIqD,EAAU8D,OAAO,IAC7BF,EACC5D,UAAUA,GACVC,MAAM4D,GACNJ,MAAMtC,IAAWsC,OACjBtB,EAAEhB,MACEkB,OAAO,CAACrC,EAAU8D,OAAO,GAAG,GAAGhH,GAAIkD,EAAU+D,IAAI,GAAG,GAAGjH,KACvDwF,WAAW,CAAC,EAAG,OAGbsB,GAGEI,EAAY,SAAA1I,GAAK,OAC1BtB,EAAAC,EAAAC,cAACoJ,EAAD,CAAexB,cAAe6B,EAAejE,MAAM,oBCd1CuE,EAAY,SAAC3I,GAEtB,IAAM4I,EAAQC,cAAI,CACdC,QAAQ,OACRC,UAAU,SAEd,OACIrK,EAAAC,EAAAC,cAAA,MAASgK,EACTlK,EAAAC,EAAAC,cAACoK,EAAD,KACQtK,EAAAC,EAAAC,cAACqK,EAAA,IAAD,KACIvK,EAAAC,EAAAC,cAACqK,EAAA,IAAD,CAAKC,GAAI,GACLxK,EAAAC,EAAAC,cAACuK,EAAD,OAEJzK,EAAAC,EAAAC,cAACqK,EAAA,IAAD,CAAKC,GAAI,IAETxK,EAAAC,EAAAC,cAACqK,EAAA,IAAD,CAAKC,GAAI,GACLxK,EAAAC,EAAAC,cAACqK,EAAA,IAAD,KACIvK,EAAAC,EAAAC,cAACwK,EAAD,OAEJ1K,EAAAC,EAAAC,cAACqK,EAAA,IAAD,KACIvK,EAAAC,EAAAC,cAACyK,EAAD,OAEJ3K,EAAAC,EAAAC,cAACqK,EAAA,IAAD,KACIvK,EAAAC,EAAAC,cAAC0K,EAAD,oCC9BjBC,EAAQ,aACnBA,EAAMC,UAAUC,MAAQ,WAAc,MAAO,IAE7CF,EAAMC,UAAUE,OAAS,WAAc,MAAO,GAAGC,OAAOC,MAAM,GAAIxJ,KAAKqJ,QAAQI,IAAI,SAAUC,GAAQ,OAAOA,EAAKJ,aACjHH,EAAMC,UAAUO,MAAQ,WAAc,MAAO,GAAGJ,OAAOC,MAAM,GAAIxJ,KAAKqJ,QAAQI,IAAI,SAAUC,GAAQ,OAAOA,EAAKC,YAChHR,EAAMC,UAAUQ,QAAU,WAAc,MAAO,GAAGL,OAAOC,MAAM,GAAIxJ,KAAKqJ,QAAQI,IAAI,SAAUC,GAAQ,OAAOA,EAAKE,cAClHT,EAAMC,UAAUS,UAAY,WAAc,MAAO,GAAGN,OAAOC,MAAM,GAAIxJ,KAAKqJ,QAAQI,IAAI,SAAUC,GAAQ,OAAOA,EAAKG,gBACpHV,EAAMC,UAAUU,MAAQ,WAAc,MAAO,GAAGP,OAAOC,MAAM,GAAIxJ,KAAKqJ,QAAQI,IAAI,SAAUC,GAAQ,OAAOA,EAAKI,YAChHX,EAAMC,UAAUW,MAAQ,WAAc,MAAO,GAAGR,OAAOC,MAAM,GAAIxJ,KAAKqJ,QAAQI,IAAI,SAAUC,GAAQ,OAAOA,EAAKK,YAChHZ,EAAMC,UAAUY,GAAK,WAAc,MAAO,GAAGT,OAAOC,MAAM,GAAIxJ,KAAKqJ,QAAQI,IAAI,SAAUC,GAAQ,OAAOA,EAAKM,SAC7Gb,EAAMC,UAAUa,IAAM,WAAc,MAAO,GAAGV,OAAOC,MAAM,GAAIxJ,KAAKqJ,QAAQI,IAAI,SAAUC,GAAQ,OAAOA,EAAKO,UAC9Gd,EAAMC,UAAUc,QAAU,WAAc,MAAO,GAAGX,OAAOC,MAAM,GAAIxJ,KAAKqJ,QAAQI,IAAI,SAAUC,GAAQ,OAAOA,EAAKQ,cAElHf,EAAMC,UAAUe,KAAO,SAAUC,GAAK,OAAKC,UAAUC,QAA0CtK,KAAKuK,KAAOH,EAAUpK,MAAjDA,KAAKuK,KAAOvK,KAAKuK,KAAO,GAC5FpB,EAAMC,UAAUoB,OAAS,SAAUJ,GAAK,IAAI/C,EAAIrH,KAAKyK,UAAW,OAA2B,GAAvBzK,KAAKqJ,QAAQiB,OAAoB,EAAUtK,KAAKqJ,QAAQI,IAAI,SAAUiB,GAAK,OAAOA,EAAEF,WAAaG,OAAO,SAAUpM,EAAGqM,GAAK,OAAOrM,EAAIqM,EAAIvD,KAC7M8B,EAAMC,UAAUyB,OAAS,SAAUT,GACjC,IAAKC,UAAUC,OACb,OAAOtK,KAAK8K,OAAS9K,KAAK8K,OAAS,EACrC9K,KAAK8K,OAASV,EACd,IAAIW,EAAU/K,KAAKyK,UAEnB,OADAzK,KAAKqJ,QAAQnI,QAAQ,SAAUwI,GAAQA,EAAKmB,OAAOT,GAAIA,GAAKV,EAAKc,SAAWO,IACrE/K,MAETmJ,EAAMC,UAAUqB,QAAU,SAAUL,GAClC,OAAKC,UAAUC,QAEftK,KAAK+K,QAAUX,EACfpK,KAAK6K,OAAO7K,KAAK6K,UACV7K,MAHEA,KAAK+K,QAAU/K,KAAK+K,QAAU,GAMzC5B,EAAM6B,MAAQ,SAAUC,GACtB,MAAO,CACLT,OAAQ,SAAUjG,GAAS,OAAO0G,EAAM1G,EAAMiG,WAC9CK,OAAQ,SAAUtG,GAAS,OAAO0G,EAAM1G,EAAMsG,aAIlD,IAAIK,EAAe,SAAUC,EAAQC,GAEnCpL,KAAKmL,OAASA,EACdnL,KAAKoL,QAAUA,EAGf,IAAI7G,EAAQvE,KACZA,KAAKqL,MAAQD,EAAQxB,UAAUH,IAAI,SAAU6B,GAAU,OAAO,IAAIC,aAAmBhH,EAAO+G,KAG5FtL,KAAKmK,KAAK1E,IAAO,IAAsB,GAAhBH,KAAKkG,SAAe,IAAsB,GAAhBlG,KAAKkG,SAAe,IAAsB,GAAhBlG,KAAKkG,WAChFxL,KAAKqL,MAAMnK,QAAQ,SAAUwI,GAAQA,EAAKS,KAAK5F,EAAM4F,UAGrDnK,KAAKyK,QAAQ,GAAGI,OAAO,GAGnBtG,EAAQvE,KACZA,KAAKsJ,SAASpI,QAAQ,SAAUuK,GAAOA,EAAIlH,MAAQA,IACnDvE,KAAK2J,QAAQzI,QAAQ,SAAUwK,GAAOA,EAAInH,MAAQA,IAClDvE,KAAKgK,KAAK9I,QAAQ,SAAUyK,GAAMA,EAAGpH,MAAQA,IAC7CvE,KAAK+J,QAAQ3C,OAAO,SAAUwE,GAAQ,OAAOA,EAAK7J,OAAO2H,MAAQkC,EAAKC,MAAMnC,MAAQkC,EAAK7J,OAAOwC,OAASA,IAAUrD,QAAQ,SAAU0K,GAAQA,EAAKxJ,KAAO,YAE3J8I,EAAa9B,UAAY,IAAID,GACNE,MAAQ,WAAc,OAAOrJ,KAAKqL,OACzDH,EAAa9B,UAAUY,GAAK,WAAc,OAAOhK,KAAKoL,QAAQU,YAE9D,IAAIC,EAAc,SAAUZ,EAAQa,GAClChM,KAAKmL,OAASA,EACdnL,KAAKgM,MAAQA,EAGb,IAAIzH,EAAQvE,KACZA,KAAKqL,MAAQW,EAAMvC,IAAI,SAAUwC,GAAQ,OAAO,IAAIV,WAAiBhH,EAAO0H,KAG5EjM,KAAKmK,KAAK1E,IAAO,IAAsB,GAAhBH,KAAKkG,SAAe,IAAsB,GAAhBlG,KAAKkG,SAAe,IAAsB,GAAhBlG,KAAKkG,WAChFxL,KAAKqL,MAAMnK,QAAQ,SAAUwI,GAAQA,EAAKS,KAAK5F,EAAM4F,UAGrDnK,KAAKyK,QAAQ,GAAGI,OAAO,GAGvBmB,EAAM9K,QAAQ,SAAU+K,GAAQA,EAAK1H,MAAQA,IAC7CvE,KAAKiK,MAAM/I,QAAQ,SAAUuK,GAAOA,EAAIlH,MAAQA,IAChDvE,KAAKkK,UAAUhJ,QAAQ,SAAUuK,GAAOA,EAAIlH,MAAQA,MAEtDwH,EAAY3C,UAAY,IAAID,GACNE,MAAQ,WAAc,OAAOrJ,KAAKqL,4BCtFpDa,GAASA,IAAkB,GAE/BA,GAAOC,MAAQ,WACX,OAAOC,SAASC,KAAKC,aAGzBJ,GAAOK,OAAS,WACZ,OAAOH,SAASC,KAAKG,cAiVzBC,OAAOrD,UAAUsD,SAAW,WACxB,IAAcC,EAAVC,EAAO,EACX,GAAmB,GAAf5M,KAAKsK,OAAa,OAAOsC,EAC7B,IAAKD,EAAI,EAAGA,EAAI3M,KAAKsK,OAAQqC,IAEzBC,GAASA,GAAQ,GAAKA,EADf5M,KAAK6M,WAAWF,GAEvBC,GAAcA,EAElB,OAAOA,GAYX,IAuFWE,GAAY,SAAUC,GAC7B,OAAOA,EAAOC,SAIPC,GAAY,WACnB,IAAIC,EAAO,EACX,OAAO,WACH,OAAOA,KAHQ,GAsBhB,SAASC,GAAuBC,EAASC,GAE5C,IADA,IAAIC,EAAW,GACNX,EAAI,EAAGA,EAAIS,EAAQ9C,OAAQqC,IAChC,IACI,IAAI/L,EAAQwM,EAAQT,GAAGU,GACjBzM,KAAS0M,IACXA,EAAS1M,GAAS,IACtB0M,EAAS1M,GAAO2M,KAAKH,EAAQT,IAC/B,MAAOa,GACLxM,QAAQC,IAAIuM,GAGpB,OAAOF,EC1eX,IAAIG,GAAmB,WACrB,IAAIC,EAAS,KACTC,EAAY,GACZC,EAAU,GACV3O,GAAK,EACL4O,GAAQ,EAERC,EAAQ,SAAUC,GAEhB9O,IACF8O,EAAI3E,UAAUvE,GAAK,WAAc,OAAO7E,KAAKgO,MAC7CD,EAAI3E,UAAU6E,SAAW,WAAc,OAAOjO,KAAKf,IACnD8O,EAAIG,MAAQ,SAAUC,GAAO,OAAOA,EAAItJ,MACxCkJ,EAAIK,YAAc,SAAUD,GAAO,OAAOA,EAAIF,aAIlC,MAAVP,IACFK,EAAI3E,UAAUsE,OAASA,EACvBC,EAAUJ,KAAKG,IAIjB,IAAK,IAAIf,EAAI,EAAGA,EAAIgB,EAAUrD,OAAQqC,IAAK,CACzC,IAAI0B,EAAWV,EAAUhB,GACrB2B,EAAsBD,EAASE,cACnCR,EAAI3E,UAAUiF,GAAY,SAAUhB,GAAS,OAAO,WAAc,OAAOrN,KAAKqN,IAApD,CAAiEiB,GAI7F,GAAc,MAAVZ,EAAJ,CAIA,IAASf,EAAI,EAAGA,EAAIiB,EAAQtD,OAAQqC,IAClCoB,EAAI3E,UAAUwE,EAAQjB,IAAM,SAAU6B,GACpC,OAAO,SAAsBC,GAC3B,GAAIzO,KAAKwO,EAAOD,eACd,OAAOvO,KAAKwO,EAAOD,eACrB,IAAIG,EAAM,GAAGnF,OAAOC,MAAM,GAAIxJ,KAAKA,KAAK0N,UAAUjE,IAAI,SAAUkF,GAAQ,OAAOA,EAAKH,IAAQ,MAG5F,OAFKC,IACHzO,KAAKwO,EAAOD,eAAiBG,GACxBA,GAPiB,CAS1Bd,EAAQjB,IAIRkB,IACFE,EAAI3E,UAAUwF,MAAQ,WAGpB,OAFkB,MAAd5O,KAAK6O,QACP7O,KAAK6O,MAAQvJ,KAAKwJ,IAAItF,MAAMxJ,KAAMA,KAAKA,KAAK0N,UAAUjE,IAAI,SAAUkF,GAAQ,OAAOA,EAAKC,YACnF5O,KAAK6O,OAEdd,EAAI3E,UAAU2F,IAAM,WAGlB,OAFgB,MAAZ/O,KAAKwF,MACPxF,KAAKwF,IAAMF,KAAK0J,IAAIxF,MAAMxJ,KAAMA,KAAKA,KAAK0N,UAAUjE,IAAI,SAAUkF,GAAQ,OAAOA,EAAKI,UACjF/O,KAAKwF,KAEduI,EAAI3E,UAAU5H,SAAW,WACvB,OAAOxB,KAAK+O,MAAQ/O,KAAK4O,YAW/B,OANAd,EAAMJ,OAAS,SAAUtD,GAAK,OAAKC,UAAUC,QAAuBoD,EAAStD,EAAU0D,GAA3BJ,GAC5DI,EAAMH,UAAY,SAAUvD,GAAK,OAAKC,UAAUC,QAA0BqD,EAAYvD,EAAU0D,GAAjCH,GAC/DG,EAAMF,QAAU,SAAUxD,GAAK,OAAKC,UAAUC,QAAwBsD,EAAUxD,EAAU0D,GAA7BF,GAC7DE,EAAM7O,GAAK,SAAUmL,GAAK,OAAKC,UAAUC,QAAmBrL,EAAKmL,EAAU0D,GAAnB7O,GACxD6O,EAAMD,MAAQ,SAAUzD,GAAK,OAAKC,UAAUC,QAAsBuD,EAAQzD,EAAU0D,GAAzBD,GAEpDC,GAKEmB,GAAS,SAAUC,EAAMnC,GAiBlC,GAhBA/M,KAAK+M,OAASA,EACd/M,KAAKkP,KAAOA,EACZlP,KAAKf,GAAK8N,EAAO9N,GACjBe,KAAKgO,KAAOhO,KAAKf,GACjBe,KAAKmP,UAAYpC,EAAOqC,UACxBpP,KAAKoC,KAAO,QACR2K,EAAM,YACR/M,KAAKoC,KAAO,aAAe2K,EAAOsC,WACpCrP,KAAK6O,MAAQ7O,KAAKmP,UAClBnP,KAAKwF,IAAMxF,KAAKmP,UAChBnP,KAAKsP,SAAW,EACZvC,EAAM,WACR/M,KAAKsP,SAAWC,OAAOxC,EAAM,UAAgB,IAC7C/M,KAAK6O,MAAQ7O,KAAKmP,UAAYnP,KAAKsP,SACnCtP,KAAKwF,IAAMxF,KAAKmP,WAEdpC,EAAM,WAAkD,QAAjCA,EAAOsC,UAAUG,OAAO,EAAG,KAA4D,GAA5CzC,EAAO0C,MAAMC,QAAQ,mBAA0B,CACnH,IAAIC,EAAO,CAAC,UAAW,cAAe,SAAU,aAAc,WAAY,gBAC1E3P,KAAKsP,SAAW,EAChB,IAAK,IAAI3C,EAAI,EAAGA,EAAIgD,EAAKrF,OAAQqC,IAC3B3M,KAAK+M,OAAO4C,EAAKhD,MACnB3M,KAAKsP,UAAYC,OAAOvP,KAAK+M,OAAO4C,EAAKhD,MAE7C3M,KAAKsP,SAAWtP,KAAKsP,SAAW,IAChCtP,KAAK6O,MAAQ7O,KAAKmP,UAAYnP,KAAKsP,SACnCtP,KAAKwF,IAAMxF,KAAKmP,UAGlBnP,KAAKkP,KAAK5D,OAAOF,QAAQwE,QAAQ3D,KAAK4D,cAAc7P,KAAKf,IAAMe,MAGjEiP,GAAO7F,UAAUW,MAAQ,WACvB,GAAkB,MAAd/J,KAAK8P,MAAe,CACtB9P,KAAK8P,MAAQ,GAEb,IADA,IAAIC,EAAU/P,KAAK+M,OAAOiD,cACjBrD,EAAI,EAAc,MAAXoD,GAAmBpD,EAAIoD,EAAQzF,OAAQqC,IAAK,CAC1D,IAAIf,EAAO,CACT3M,GAAIe,KAAKf,GAAK8Q,EAAQpD,GACtB5K,OAAQ/B,KAAKkP,KAAK5D,OAAOF,QAAQwE,QAAQ3D,KAAK4D,cAAcE,EAAQpD,IACpEd,MAAO7L,MAEL4L,EAAK7J,QAAU6J,EAAKC,OACtB7L,KAAK8P,MAAMvC,KAAK3B,IAGtB,OAAO5L,KAAK8P,OAEdrC,KAAmBE,UAAU,CAAC,aAA9BF,CAA4CwB,IAIrC,IAAIgB,GAAQ,SAAU3E,EAAQrM,EAAImO,GACvCpN,KAAKsL,OAASA,EACdtL,KAAKf,GAAKe,KAAKsL,OAAO0C,KAAO,SAAW/O,EACxCe,KAAKgO,KAAOhO,KAAKf,GACjBe,KAAKkQ,OAAS,GACdlQ,KAAKmQ,SAAU,EACf,IAAK,IAAIxD,EAAI,EAAGA,EAAIS,EAAQ9C,OAAQqC,IAC9BS,EAAQT,GAAG0C,WAAajC,EAAQT,GAAG0C,UAAUe,UAAU,EAAG,GAC5DpQ,KAAKkQ,OAAO3C,KAAK,IAAI0B,GAAOjP,KAAMoN,EAAQT,KAK9C3M,KAAKkQ,OAAOG,KAAK,SAAU9R,EAAGqM,GAAK,OAAOrM,EAAE4Q,UAAYvE,EAAEuE,YAC1DnP,KAAK6O,MAAQ7O,KAAKkQ,OAAO,GAAGd,YAC5BpP,KAAKwF,IAAMxF,KAAKkQ,OAAOlQ,KAAKkQ,OAAO5F,OAAS,GAAG8E,YAC/CpP,KAAKsQ,UAAYtQ,KAAKsJ,SAASlC,OAAO,SAAUmJ,GAAS,OAAOA,EAAMxD,OAAOsC,WAAuD,QAA1CkB,EAAMxD,OAAOsC,UAAUe,UAAU,EAAG,KAC9HpQ,KAAKwQ,cAAgBxQ,KAAKsJ,SAASlC,OAAO,SAAUmJ,GAAS,OAAOA,EAAMxD,OAAOsC,YAAckB,EAAMxD,OAAOsC,UAAUoB,WAAW,QAAUF,EAAMxD,OAAOsC,UAAUoB,WAAW,gBAE/KhD,KAAmBC,OAAO,UAAUC,UAAU,CAAC,YAAa,kBAAkBC,QAAQ,CAAC,SAAvFH,CAAiGwC,IAI1F,IAAIS,GAAU,SAAUtF,EAASnM,EAAImO,GAC1CA,EAAQiD,KAAK,SAAU9R,EAAGqM,GAAK,OAAOrM,EAAE6Q,UAAYxE,EAAEwE,YACtDpP,KAAKoL,QAAUA,EACfpL,KAAKf,GAAKe,KAAKoL,QAAQnM,GAAK,WAAaA,EACzCe,KAAKgO,KAAOhO,KAAKoL,QAAQ4C,KAAO,WAAa/O,EAE7Ce,KAAK2Q,MAAQ,GAEb,IADA,IAAIzB,EAAO,GACFvC,EAAI,EAAGA,EAAIS,EAAQ9C,OAAQqC,IAClC,GAAIS,EAAQT,GAAG0C,WAAqC,UAAxBjC,EAAQT,GAAG0C,UAAuB,CAM5D,IAAIC,EAAWC,OAAOnC,EAAQT,GAAGnL,UAAY,IAG7C0N,EAAK3B,KAAKH,EAAQT,IAClB,IAAIiE,EAAU,IAAIX,GAAMjQ,KAAMA,KAAK2Q,MAAMrG,OAAQ4E,GAC7C2B,EAAkBD,EAAQV,OAAOU,EAAQV,OAAO5F,OAAS,GAC7DtK,KAAK2Q,MAAMpD,KAAKqD,GAGhB,IAAIE,EAAO,IAAIb,GAAMjQ,KAAMA,KAAK2Q,MAAMrG,OAAQ,CAAC8C,EAAQT,GAAIS,EAAQT,KACnEmE,EAAKX,SAAU,EACfW,EAAKZ,OAAO,GAAGf,UAAY2B,EAAKZ,OAAO,GAAGf,UAAYG,EACtDuB,EAAgB1B,UAAY2B,EAAKZ,OAAO,GAAGf,UAC3CnP,KAAK2Q,MAAMpD,KAAKuD,GAGhBF,EAAQpL,IAAMqL,EAAgB1B,UAC9B2B,EAAKjC,MAAQiC,EAAKZ,OAAO,GAAGf,UAG5BD,EAAO,CAAC9B,EAAQT,SACPS,EAAQT,GAAG0C,WAAqC,SAAxBjC,EAAQT,GAAG0C,WAC5CH,EAAK3B,KAAKH,EAAQT,IAClB3M,KAAK2Q,MAAMpD,KAAK,IAAI0C,GAAMjQ,KAAMA,KAAK2Q,MAAMrG,OAAQ4E,IACnDA,EAAO,IAEPA,EAAK3B,KAAKH,EAAQT,IAGlBuC,EAAK5E,OAAS,GAChBtK,KAAK2Q,MAAMpD,KAAK,IAAI0C,GAAMjQ,KAAMA,KAAK2Q,MAAMrG,OAAQ4E,IACrDlP,KAAK2Q,MAAMN,KAAK,SAAU9R,EAAGqM,GAAK,OAAOrM,EAAEqQ,QAAUhE,EAAEgE,UAGvD5O,KAAK+Q,UAAY,UAAY/Q,KAAKf,GAClC,IAAI+R,EAAQ,GACZA,EAAMhR,KAAK+Q,YAAa,EACxB,IAAIb,EAASlQ,KAAKsJ,SAClB,IAASqD,EAAI,EAAGA,EAAIuD,EAAO5F,OAAQqC,IAC7BuD,EAAOvD,GAAGI,OAAOkE,aACnBD,EAAMd,EAAOvD,GAAGI,OAAOkE,aAAc,UAElCD,EAAMhR,KAAK+Q,WAClB,IAAIG,EAAapR,OAAO6P,KAAKqB,GAC7B,GAAIE,EAAW5G,OAAS,EAAG,CACzB,IAAI6G,EAAWD,EAAW,GACtBC,EAAS7G,OAAS,GACpBtK,KAAK+Q,UAAYI,EAASf,UAAU,EAAG,IAAM,MAE7CpQ,KAAK+Q,UAAYI,IAGvB1D,KAAmBC,OAAO,SAASC,UAAU,CAAC,cAAcC,QAAQ,CAAC,SAAU,QAAS,YAAa,iBAArGH,CAAuHiD,IAIhH,IAAIU,GAAW,SAAUxB,EAAS3Q,EAAImO,GAQ3C,GAPApN,KAAK4P,QAAUA,EACf5P,KAAKqR,UAAYpS,EACjBe,KAAKf,GAAKe,KAAK4P,QAAQ3Q,GAAK,YAAcA,EAAGqS,QAAQ,IAAK,IAC1DtR,KAAKgO,KAAOhO,KAAK4P,QAAQ5B,KAAO,YAAc/O,EAAGqS,QAAQ,IAAK,IAC9DtR,KAAKuR,SAAW,GAGZnE,EAAQ,GAAR,IAAmB,CAIrB,IAHA,IAAIoE,EAAU,EACVC,EAAW,EACXC,EAAQ,EACH/E,EAAI,EAAGA,EAAIS,EAAQ9C,OAAQqC,IAClC6E,GAAWjC,OAAOnC,EAAQT,GAAGyC,WAC7BqC,GAAYlC,OAAOnC,EAAQT,GAAGgF,KAC9BD,GAAS,EAGX,IAAIE,EAASH,EAAWC,EACpBG,EAAQL,EAAUE,EACtB,IAAS/E,EAAI,EAAGA,EAAIS,EAAQ9C,OAAQqC,IAAK,CACvC,IACImF,EAAWD,GADCtC,OAAOnC,EAAQT,GAAGgF,KACEC,GAAU,IAC9CxE,EAAQT,GAAGyC,UAAY0C,GAI3B,IAAIC,EAAoBC,GAAmC5E,EAAS,YAGpE,IAAK,IAAI6E,KADTjS,KAAKkS,QAAU,GACOH,EACpB/R,KAAKkS,QAAQ3E,KAAK,IAAImD,GAAQ1Q,KAAMiS,EAAWF,EAAkBE,KACnEjS,KAAKkS,QAAQ7B,KAAK,SAAU9R,EAAGqM,GAAK,OAAOrM,EAAEqQ,QAAUhE,EAAEgE,WAE3DwC,GAAShI,UAAU+I,UAAY,SAAUC,GACvC,IAAIC,EAAYD,EAAOpS,KAAKqR,WAC5B,GAAIgB,EAAW,CACb,IAAIjH,EAAUpL,KACdA,KAAKuR,SAAWc,EAAU5I,IAAI,SAAUsD,GAAU,OAAO,IAAIuF,GAAQlH,EAAS2B,KAC9E/M,KAAKuR,SAAWvR,KAAKuR,SAASnK,OAAO,SAAUmL,GAC7C,OAAOA,EAAQ1D,OAASzD,EAAQ2D,OAASwD,EAAQ/M,KAAO4F,EAAQwD,SAAW2D,EAAQjD,SAAW,MAIpG7B,KAAmBC,OAAO,WAAWC,UAAU,CAAC,aAAaC,QAAQ,CAAC,QAAS,SAAU,QAAS,YAAa,iBAA/GH,CAAiI2D,IAE1H,IAAIoB,GAAW,SAAUvG,EAAMhN,EAAImO,GACxCpN,KAAKiM,KAAOA,EACZjM,KAAKf,GAAK,WAAaA,EACvBe,KAAKgO,KAAOhO,KAAKiM,KAAKpH,KAAO,IAAM7E,KAAKf,GACxCe,KAAKyS,KAAO,WAAazS,KAAKf,GAE9B,IAAIyT,EAAqBV,GAAmC5E,EAAS,aAGrE,IAAK,IAAIuF,KADT3S,KAAK4S,UAAY,GACMF,EACrB1S,KAAK4S,UAAUrF,KAAK,IAAI6D,GAASpR,KAAM2S,EAAYD,EAAmBC,KAExE3S,KAAK4S,UAAUvC,KAAK,SAAU9R,EAAGqM,GAAK,OAAOrM,EAAEqQ,QAAUhE,EAAEgE,WAE7DnB,KAAmBC,OAAO,aAAaE,QAAQ,CAAC,UAAW,QAAS,SAAU,QAAS,YAAa,gBAAiB,YAArHH,CAAkI+E,IAI3H,IAAIK,GAAQ,SAAU7T,GAE3BgB,KAAKf,GAAKD,EAAKC,GACfe,KAAKgO,KAAO,QAAUhO,KAAKf,GAC3Be,KAAKoN,QAAUpO,EAAKoO,QACpBpN,KAAK6P,cAAgB,GAErB,IAAK,IAAIlD,EAAI,EAAGA,EAAI3M,KAAKoN,QAAQ9C,OAAQqC,IAAK,CAC5C,IAAII,EAAS/M,KAAKoN,QAAQT,GACJ,MAAlBI,EAAOC,QACTD,EAAO9N,GAAK,IAAMqG,KAAKC,MAAM,IAAAD,KAAKkG,UAAsC,KAExEuB,EAAO9N,GAAK8N,EAAOC,QACrBhN,KAAK6P,cAAc9C,EAAO9N,IAAM8N,EAIlC/M,KAAK8S,SAAW,GAChB,IAAIC,EAAqBf,GAAmChT,EAAKoO,QAAS,QAC1E,IAAK,IAAI4F,KAAcD,EACrB/S,KAAK8S,SAASvF,KAAK,IAAIiF,GAASxS,KAAMgT,EAAYD,EAAmBC,KACvEhT,KAAK8S,SAASzC,KAAK,SAAU9R,EAAGqM,GAAK,OAAOrM,EAAEqQ,QAAUhE,EAAEgE,UAG1D,IAAIqE,EAAO,GACX,IAAStG,EAAI,EAAGA,EAAI3M,KAAKoN,QAAQ9C,OAAQqC,IACvC,GAAI3M,KAAKoN,QAAQT,GAAb,IACF,IAAK,IAAIuG,EAAI,EAAGA,EAAIlT,KAAKoN,QAAQT,GAAb,IAAuBrC,OAAQ4I,IACjDD,EAAKjT,KAAKoN,QAAQT,GAAb,IAAuBuG,KAAM,EAExClT,KAAKiT,KAAOnT,OAAO6P,KAAKsD,IAE1BxF,KAAmBC,OAAO,YAAYC,UAAU,CAAC,SAASC,QAAQ,CAAC,YAAa,UAAW,QAAS,SAAU,QAAS,WAAY,YAAa,iBAAhJH,CAAkKoF,IAIlK,IAAIM,GAAW,SAAUnU,EAAMoT,GAC7BlG,OAAOkH,SAAWpT,KAClBA,KAAKhB,KAAO,GACZgB,KAAKoS,OAASA,EACdpS,KAAKf,GAAK+S,KACVhS,KAAKgO,KAAOhO,KAAKf,GAGjBe,KAAKgM,MAAQ,GACb,IAAK,IAAIW,EAAI,EAAGA,EAAI3N,EAAKsL,OAAQqC,IAC/B3M,KAAKqT,QAAQrU,EAAK2N,KAGtBwG,GAAS/J,UAAUiK,QAAU,SAAUrU,GACrCgB,KAAKhB,KAAKuO,KAAKvO,GACf,IAAIiN,EAAO,IAAI4G,GAAM7T,GACrBgB,KAAKgM,MAAMuB,KAAKtB,GAChBjM,KAAKgM,MAAMqE,KAAK,SAAU9R,EAAGqM,GAAK,OAAOrM,EAAEqQ,QAAUhE,EAAEgE,UACvD5O,KAAK6O,MAAQ,KAAM7O,KAAKwF,IAAM,KAC9BxF,KAAK8O,IAAM9O,KAAK4O,QAChB5O,KAAKgP,IAAMhP,KAAK+O,MAChB,IAAIqD,EAASpS,KAAKoS,OACdA,GACFnG,EAAKpC,YAAY3I,QAAQ,SAAUkK,GAAWA,EAAQ+G,UAAUC,MAEpEe,GAAS/J,UAAUkK,MAAQ,SAAUlB,GACnCpS,KAAKoS,OAASA,EACVpS,KAAKoS,QACPpS,KAAK6J,YAAY3I,QAAQ,SAAUkK,GAAWA,EAAQ+G,UAAUC,MAEpE3E,KAAmBC,OAAO,SAASE,QAAQ,CAAC,WAAY,YAAa,UAAW,QAAS,SAAU,QAAS,WAAY,YAAa,iBAArIH,CAAuJ0F,IAEhJ,IAAIb,GAAU,SAAUlH,EAAS2B,GACtC/M,KAAK+M,OAASA,EACd/M,KAAKoL,QAAUA,EACO,MAAlB2B,EAAOC,QACTD,EAAO9N,GAAK,IAAMqG,KAAKC,MAAM,IAAAD,KAAKkG,UAAsC,KAExEuB,EAAO9N,GAAK8N,EAAOC,QACrBhN,KAAKuT,SAAWxG,EAAO9N,GACvBe,KAAKf,GAAKe,KAAKoL,QAAQ4C,KAAO,OAAShO,KAAKuT,SAC5CvT,KAAKgO,KAAOhO,KAAKf,GAEjBe,KAAK6O,MAAQU,OAAOvP,KAAK+M,OAAL,SAA0B,EAC9C/M,KAAKsP,SAAWC,OAAOvP,KAAK+M,OAAL,YAA6B,EACpD/M,KAAKwF,IAAMxF,KAAK6O,MAAQ7O,KAAKsP,SAC7BtP,KAAKwT,KAAOxT,KAAK+M,OAAL,QCpVP,SAAS0G,GAA2BvD,GAC1C,IAAI9C,EAAU8C,EAAOzG,IAAI,SAAU8G,GAAS,OAAOA,EAAMxD,SAErD2G,EAAaxD,EAAO,GACxBA,EAAOhP,QAAQ,SAAUqP,GACpBA,EAAMnB,YAAcsE,EAAWtE,cAClCsE,EAAanD,KAMf,IAHA,IAAIoD,EApCL,SAAuBvG,EAASwG,GACZ,MAAfA,IACHA,EAAcxG,EAAQA,EAAQ9C,OAAS,IAGxC,IADA,IAAIuJ,EAAY,GACPlH,EAAI,EAAGA,EAAIS,EAAQ9C,OAAQqC,IACnCkH,EAAUC,GAAgB1G,EAAQT,KAAOS,EAAQT,GAKlD,IAFA,IAAIgH,EAAQ,GACRI,EAAOH,EACJG,GAAQA,EAAI,eAAmB,CACrCJ,EAAMpG,KAAKwG,GACX,IAAIhE,EAAUgE,EAAI,cAElB,IADAA,EAAOF,EAAU9D,EAAQ,IAChBpD,EAAI,EAAW,MAARoH,GAAgBpH,EAAIoD,EAAQzF,OAAQqC,IACnDoH,EAAOF,EAAU9D,EAAQpD,IAE1B,IAASA,EAAI,EAAGA,EAAIoD,EAAQzF,OAAQqC,IAAK,CACxC,IAAIqH,EAAYH,EAAU9D,EAAQpD,IAC9BkH,EAAU9D,EAAQpD,KAAO4C,OAAOyE,EAAS,WAAiBzE,OAAOwE,EAAI,aACxEA,EAAOC,IAGV,OAAOL,EAYKM,CAAc7G,EAASsG,EAAW3G,QAE1CmH,EAAU,GACLvH,EAAI,EAAGA,EAAIgH,EAAMrJ,OAAQqC,IACjCuH,EAAQJ,GAAgBH,EAAMhH,MAAO,EAGtC,OAAOuD,EAAO9I,OAAO,SAAUmJ,GAAS,OAAO2D,EAAQ3D,EAAMtR,MDuU9DwO,KAAmBE,UAAU,CAAC,QAAS,WAAY,QAAnDF,CAA4D6E,eE7C7C6B,eA5TX,SAAAA,EAAYvU,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAmU,IACftU,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAqU,GAAAhU,KAAAH,KAAMJ,KACDwU,eAAiBvU,EAAKuU,eAAeC,KAApBvU,OAAAwU,EAAA,EAAAxU,CAAAD,IAFPA,mFAMfG,KAAKoU,8DAILpU,KAAKoU,0DAIL,IAAMG,EAAOvU,KAAKuU,KAEd9N,EAAI,EACJI,EAAI,EACJsF,EAAQ,IACRI,EAAS,IACTiI,EAAS,IAGTC,EAAa,CACbC,YAAc,EACdC,WAAa,EACbC,QAAU,EACVC,WAAa,EACbC,WAAa,GAIbC,EAAY,CACZC,QAAW,cAIXC,EAAKC,MACLC,EAAQ1P,MACR2P,EAAO3P,MAAgBiC,MAAM,IAAI2N,SAAS,EAAG,EAAG,GAWpD,SAASC,EAASC,GAEdA,EAAUC,KAAK,SAAUrK,GAErB8J,EAAGQ,MAAM,CAAC,EAAGtJ,IACb,IAAIuJ,EAAKR,MAAsBvO,OAAO,CAAC,EAAGwE,EAAOX,WAAWiL,MAAM,CAAC,EAAGlJ,IAGlEoJ,EAAOlQ,IAAU8O,GAAMqB,UAAU,YAAY5W,KAAK,CAACmM,IACvDwK,EAAKE,QAAQC,OAAO,QAAQnQ,KAAK,QAAS,WAAWmQ,OAAO,YAAYnQ,KAAK,KAAM,QAAQmQ,OAAO,QAClGH,EAAKI,OAAO,QAAQpQ,KAAK,QAASwG,GAAOxG,KAAK,SAAU4G,GACxDoJ,EAAKK,OAAOC,SAGZ,IAAIC,EAAOzQ,IAAU8O,GAAMqB,UAAU,SAAS5W,KAAK,CAACmM,IAChDgL,EAAUD,EAAKL,QAAQC,OAAO,KAAKnQ,KAAK,QAAS,QACjDyQ,EAAWD,EAAQL,OAAO,KAAKnQ,KAAK,QAAS,SACjDyQ,EAASN,OAAO,KAAKnQ,KAAK,QAAS,mBACnCyQ,EAASN,OAAO,KAAKnQ,KAAK,QAAS,QACnCyQ,EAASN,OAAO,KAAKnQ,KAAK,QAAS,SACnCyQ,EAASN,OAAO,KAAKnQ,KAAK,QAAS,iBAAiBmQ,OAAO,QAC3DM,EAASN,OAAO,KAAKnQ,KAAK,QAAS,SACnCyQ,EAASN,OAAO,KAAKnQ,KAAK,QAAS,MACnCyQ,EAASN,OAAO,KAAKnQ,KAAK,QAAS,OACnCyQ,EAASN,OAAO,KAAKnQ,KAAK,QAAS,WACnCyQ,EAASN,OAAO,KAAKnQ,KAAK,QAAS,UACnC,IAAI0Q,EAAYF,EAAQL,OAAO,KAAKnQ,KAAK,QAAS,UAClD0Q,EAAUP,OAAO,KAAKnQ,KAAK,QAAS,eACpC0Q,EAAUP,OAAO,KAAKnQ,KAAK,QAAS,iBACpCuQ,EAAKF,OAAOC,SAGZC,EAAKvQ,KAAK,YAAa,aAAec,EAAI,IAAMI,EAAI,KAAKlB,KAAK,QAASwG,GAAOxG,KAAK,SAAU4G,GAC7F2J,EAAKN,UAAU,UAAUjQ,KAAK,YAAa,aAAe6O,EAAS,OAGnE,IAAInJ,EAAQ6K,EAAKH,OAAO,oBAAoBH,UAAU,QAAQ5W,KAAKmM,EAAO9B,SAC1EgC,EAAMwK,QAAQC,OAAO,QAAQnQ,KAAK,OAAQ4F,OAAapB,MACvDkB,EAAM1F,KAAK,IAAK,GAAGA,KAAK,IAAK4F,OAAaP,MAAM0K,GAAI7K,QAAQlF,KAAK,QAASwG,GAAOxG,KAAK,SAAU4F,OAAaP,MAAM0K,GAAIlL,QACvHa,EAAM2K,OAAOC,SAGb,IAAIK,EAAaJ,EAAKH,OAAO,gBAAgBH,UAAU,QAAQ5W,KAAKmM,EAAO9B,SAC3EiN,EAAWT,QAAQC,OAAO,QAAQnQ,KAAK,cAAe,OAAOA,KAAK,OAAQ,SAAUxE,GAAK,OAAOA,EAAEgJ,OAAOoM,OAAO,KAC3G7Q,KAAK6F,OAAaiL,OACvBF,EAAW3Q,KAAK,IAAK6O,EAAS,IAAI7O,KAAK,IAAK,SAAUxE,GAAK,OAAOuU,EAAGvU,EAAE0J,SAAwB,GAAb1J,EAAEqJ,YAAoB7E,KAAK,oBAAqB,UAClI2Q,EAAWN,OAAOC,SAGlB,IAAIQ,EAAeP,EAAKH,OAAO,kBAAkBH,UAAU,sBAAsB5W,KAAKmM,EAAOuL,UAC7FD,EAAaZ,QAAQC,OAAO,QAAQnQ,KAAK,QAAS,iBAClD8Q,EAAa9Q,KAAK,IAAK6O,EAAS,GAAG7O,KAAK,IAAKgR,EAAe3L,MAAM0K,GAAI7K,QAAQlF,KAAK,QAAS,GAAGA,KAAK,SAAUgR,EAAe3L,MAAM0K,GAAIlL,QAClI7E,KAAK,OAAQ,SAAUxE,GAAK,OAAOA,EAAEgJ,OAAOoM,OAAO,KACxDE,EAAaT,OAAOC,SAGpBC,EAAKH,OAAO,SAASpQ,KAAK,YAAa,eAAiB4G,EAAS,KAGjE2J,EAAKH,OAAO,UAAUpQ,KAAK,YAAa,cACxCuQ,EAAKH,OAAO,kBAAkBpQ,KAAK,YAAa,cAChDuQ,EAAKH,OAAO,UAAUpQ,KAAK,YAAa,cACxCuQ,EAAKH,OAAO,OAAOpQ,KAAK,YAAa,cACrCuQ,EAAKH,OAAO,QAAQpQ,KAAK,YAAa,cACtCuQ,EAAKH,OAAO,YAAYpQ,KAAK,YAAa,cAC1CuQ,EAAKH,OAAO,WAAWpQ,KAAK,YAAa,cAGzCuQ,EAAKH,OAAO,uBAAuBpQ,KAAK,KAAM,GAAGA,KAAK,KAAM4G,GAC5D2J,EAAK7Q,GAAG,YAAa,SAAUmI,GAC3B,IAAIoJ,EAASnR,IAAS8O,GAAM,GAAKC,EACjC/O,IAAU8O,GAAMwB,OAAO,uBAAuBpQ,KAAK,KAAMiR,GAAQjR,KAAK,KAAMiR,KAIhF,IAAIC,GAAS,EACTC,EAAQ,KACZrR,IAAU8O,GAAMlP,GAAG,YAAa,WAAcwR,GAAS,EAAMC,EAAQ,OACrErR,IAAU8O,GAAMlP,GAAG,UAAW,WAAcwR,GAAS,EAAOC,EAAQ,OAEpE,IAAIC,EAAOtR,MACXsR,EAAK1R,GAAG,OAAQ,WACZ,IAAIrG,EAAOmM,EAAOiI,SACd4D,EAAUhY,EAAKgQ,IAAMhQ,EAAK8P,IAC1BmI,EAAWjY,EAAK8P,IAAMkI,EAAU,GAChCE,EAAWlY,EAAKgQ,IAAMgI,EAAU,GAEhCJ,EAAS3B,EAAGkC,OAAO1R,IAAS8O,GAAM,GAAKC,GAEvC4C,EAAQjC,EAAMkC,SAAS,GACvBC,EAAQnC,EAAMkC,SAAS,GAG3B,GAAIR,EAAQ,CACR,GAAa,MAATC,EAAe,CACf,IAAIS,EAAStC,EAAGkC,OAAOL,GAAS7B,EAAGkC,OAAO1R,IAAS+R,UAAU,KACxDJ,EAAQH,GAAYM,EAAS,KAAOD,EAAQJ,GAAYK,EAAS,KAClEH,GAASG,EACTD,GAASC,EACTX,GAAUW,GAGlBT,EAAQrR,IAAS+R,UAAU,GAQ/B,GAJAJ,EAAQR,GAAWQ,EAAQR,GAAUnR,IAASwF,MAC9CqM,EAAQV,GAAWU,EAAQV,GAAUnR,IAASwF,OAC9CmM,EAAQ9R,KAAK0J,IAAIoI,EAAOH,KACxBK,EAAQhS,KAAKwJ,IAAIwI,EAAOJ,IACL,CACflW,QAAQC,IAAI,WAAYmW,EAAOE,EAAO7R,IAASwF,MAAOkK,EAAMkC,UAC5D,IAAII,EAAOL,EACXA,EAAQE,EACRA,EAAQG,EAIZtC,EAAMkC,OAAO,CAACD,EAAOE,IACrBvC,EAAS,QAAY5U,KAAKoU,GAC1BwC,EAAK9L,MAAM,KAEf8L,EAAK5W,KAAKsF,IAAU8O,IAIpB2B,EAAKH,OAAO,UAAUH,UAAU,QAAQK,SACxCC,EAAKH,OAAO,WAAWH,UAAU,UAAUK,SAC3CC,EAAKH,OAAO,UAAUH,UAAU,QAAQK,SACxCC,EAAKH,OAAO,OAAOH,UAAU,QAAQK,SACrCC,EAAKH,OAAO,QAAQH,UAAU,QAAQK,SACtCC,EAAKH,OAAO,YAAYH,UAAU,QAAQK,WAKlDX,EAASN,QAAU,SAAUO,GACzBA,EAAUC,KAAK,SAAUrK,GACrB,IAAI+K,EAAOzQ,IAAU8O,GAAMwB,OAAO,SAGlCd,EAAGtO,OAAOwO,EAAMkC,UAChB,IAAI3B,EAAKR,MAAsBvO,OAAO,CAAC,EAAGwE,EAAOX,WAAWiL,MAAM,CAAC,EAAGlJ,IAElEmL,EAAYzC,EAAGtO,SAAS,GACxBgR,EAAY1C,EAAGtO,SAAS,GAKxBiR,IAHQ,IAAIvW,MAAOwW,UAGR1M,EAAOxB,QAAQvC,OAAO,SAAUjG,GAAK,OAAOA,EAAEyN,QAAU+I,GAAaxW,EAAE4N,MAAQ2I,KAC1FtF,EAASjH,EAAOnB,KAAK5C,OAAO,SAAUjG,GAAK,OAAOA,EAAE0N,MAAQ8I,GAAaxW,EAAEqE,IAAMkS,IACjFI,EAAU3M,EAAOlB,MAAM7C,OAAO,SAAUjG,GAAK,OAAOA,EAAE0N,MAAQ8I,GAAaxW,EAAEqE,IAAMkS,IACnFK,EAAc5M,EAAOjB,UAAU9C,OAAO,SAAUjG,GAAK,OAAOA,EAAE0N,MAAQ8I,GAAaxW,EAAEqE,IAAMkS,IAE3FM,EAAY7M,EAAO7B,SACK,GAAxBmL,EAAWK,YACXkD,EAAYC,GAAoCD,IACpDA,EAAYA,EAAU5Q,OAAO,SAAUjG,GAAK,OAAOA,EAAEiO,YAAcsI,GAAavW,EAAEiO,YAAcuI,IAEhG,IAAIO,EAAW/M,EAAOpB,QAQtB,GAP4B,GAAxB0K,EAAWK,YACXoD,EAAWA,EAAS9Q,OAAO,SAAUwE,GAAQ,OAA6C,GAAtCuM,IAAEC,QAAQxM,EAAK7J,OAAQiW,KAAyD,GAArCG,IAAEC,QAAQxM,EAAKC,MAAOmM,MACzHE,EAAWA,EAAS9Q,OAAO,SAAUjG,GAAK,OAAOA,EAAEY,OAAOqN,YAAcuI,GAAaxW,EAAE0K,MAAMuD,YAAcsI,KAGnG,IAAIrW,MAAOwW,UAES,GAAxBpD,EAAWI,UAAmB,CAC9B,IAAIlE,EAAQuF,EAAKH,OAAO,UAAUH,UAAU,QAAQ5W,KAAK4Y,EAAUzE,GAAejF,OAClFyC,EAAMkF,QAAQC,OAAO,QAAQuC,QAAQ,UAAW,SAAUlX,GAAK,OAAOA,EAAEgP,UACnExK,KAAK,IAAK,SAAUxE,GAAK,OAAOuU,EAAGvU,EAAEuI,KAAKmB,SAAW,GAAM1J,EAAEuI,KAAKc,YAClE7E,KAAK,SAAU,SAAUxE,GAAK,OAAOuU,EAAG,GAAMvU,EAAEuI,KAAKc,YAC1DmG,EAAMhL,KAAK,IAAK,SAAUxE,GAAK,OAAO8T,EAAG9T,EAAEyN,WACtCjJ,KAAK,QAAS,SAAUxE,GAAK,OAAO8T,EAAG9T,EAAE4N,OAASkG,EAAG9T,EAAEyN,WAC5D+B,EAAMqF,OAAOC,cAEbC,EAAKH,OAAO,UAAUH,UAAU,QAAQK,SAI5C,GAA6B,GAAzBxB,EAAWC,WAAoB,CAC/B,IAAIxE,EAASgG,EAAKH,OAAO,WAAWH,UAAU,UAAU5W,KAAKgZ,EAAW7E,GAAgBjF,OACxFgC,EAAO2F,QAAQC,OAAO,UAAUnQ,KAAK,QAAS,SAAUxE,GAAK,OAAOA,EAAEiB,OACjEuD,KAAK,KAAM,SAAUxE,GAAK,OAAOuU,EAAGvU,EAAEuI,KAAKmB,SAAW,GAAM1J,EAAEuI,KAAKc,YACnE7E,KAAK,IAAK,SAAUxE,GAAK,MAAiB,SAAVA,EAAEiB,KAAkB,EAAI,IACxDuD,KAAK,KAAM,SAAUxE,GAAK,OAAOA,EAAE0D,OAExCqL,EAAOvK,KAAK,KAAM,SAAUxE,GAAK,OAAO8T,EAAG9T,EAAEiO,eAC7Cc,EAAO8F,OAAOC,cAEdC,EAAKH,OAAO,WAAWH,UAAU,UAAUK,SAI/C,GAA4B,GAAxBxB,EAAWE,UAAmB,CAC9B,IAAI7E,EAAQoG,EAAKH,OAAO,UAAUH,UAAU,QAAQ5W,KAAKkZ,EAAU,SAAU/W,GAAK,OAAOA,EAAElC,KAC3F6Q,EAAM+F,QAAQC,OAAO,QAChBnQ,KAAK,KAAM,SAAUxE,GAAK,OAAOuU,EAAGvU,EAAEY,OAAO2H,KAAKmB,SAAW,GAAM1J,EAAEY,OAAO2H,KAAKc,YACjF7E,KAAK,KAAM,SAAUxE,GAAK,OAAOuU,EAAGvU,EAAE0K,MAAMnC,KAAKmB,SAAW,GAAM1J,EAAE0K,MAAMnC,KAAKc,YACpFsF,EAAMkG,OAAOC,SACbnG,EAAMnK,KAAK,KAAM,SAAUxE,GAAK,OAAO8T,EAAG9T,EAAEY,OAAOqN,eAC9CzJ,KAAK,KAAM,SAAUxE,GAAK,OAAO8T,EAAG9T,EAAE0K,MAAMuD,eAC5CzJ,KAAK,QAAS,SAAUxE,GAAK,OAAOA,EAAEiB,YAE3C8T,EAAKH,OAAO,UAAUH,UAAU,QAAQK,SAI5C,GAAyB,GAArBxB,EAAWG,OAAgB,CAC3B,IAAIjJ,EAAKuK,EAAKH,OAAO,OAAOH,UAAU,QAAQ5W,KAAKoT,EAAQe,GAAiBjF,OAC5EvC,EAAGkK,QAAQC,OAAO,QAAQnQ,KAAK,IAAK,SAAUxE,GAAK,OAAOuU,EAAGvU,EAAEoD,MAAMsG,YAChElF,KAAK,SAAU,SAAUxE,GAAK,OAAOuU,EAAGvU,EAAEoD,MAAMiG,YACrDmB,EAAGhG,KAAK,IAAK,SAAUxE,GAAK,OAAO8T,EAAG9T,EAAE0N,SAAWlJ,KAAK,QAAS,SAAUxE,GAAK,OAAO8T,EAAG9T,EAAEqE,KAAOyP,EAAG9T,EAAE0N,SACxGlD,EAAGqK,OAAOC,cAEVC,EAAKH,OAAO,OAAOH,UAAU,QAAQK,SAIzC,IAAIqC,EAAMpC,EAAKH,OAAO,QAAQH,UAAU,QAAQ5W,KAAK8Y,EAAS3E,GAAgBjF,OAC9EoK,EAAIzC,QAAQC,OAAO,QAAQnQ,KAAK,QAAS,SAAUxE,GAAK,OAAOA,EAAEiB,OAC5DuD,KAAK,IAAK,SAAUxE,GAAK,OAAOuU,EAAGvU,EAAEuI,KAAKmB,SAA6B,IAAlB1J,EAAEuI,KAAKc,YAC5D7E,KAAK,SAAU,SAAUxE,GAAK,OAAOuU,EAAqB,GAAlBvU,EAAEuI,KAAKc,YAEpD8N,EAAI3S,KAAK,IAAK,SAAUxE,GAAK,OAAO8T,EAAG9T,EAAE0N,SACpClJ,KAAK,QAAS,SAAUxE,GAAK,OAAO8T,EAAG9T,EAAEqE,KAAOyP,EAAG9T,EAAE0N,SAC1DyJ,EAAItC,OAAOC,SAGX,IAAIsC,EAAUrC,EAAKH,OAAO,YAAYH,UAAU,QAAQ5W,KAAK+Y,EAAa5E,GAAgBjF,OAC1FqK,EAAQ1C,QAAQC,OAAO,QAAQnQ,KAAK,QAAS,SAAUxE,GAAK,OAAOA,EAAEiB,OAChEuD,KAAK,IAAK,SAAUxE,GAAK,OAAOuU,EAAGvU,EAAEuI,KAAKmB,SAA6B,IAAlB1J,EAAEuI,KAAKc,YAC5D7E,KAAK,SAAU,SAAUxE,GAAK,OAAOuU,EAAqB,GAAlBvU,EAAEuI,KAAKc,YAEpD+N,EAAQ5S,KAAK,IAAK,SAAUxE,GAAK,OAAO8T,EAAG9T,EAAE0N,SACxClJ,KAAK,QAAS,SAAUxE,GAAK,OAAO8T,EAAG9T,EAAEqE,KAAOyP,EAAG9T,EAAE0N,SAC1D0J,EAAQvC,OAAOC,SAGf,IAAIuC,EAAOtD,MAAsBO,MAAM,CAAC,EAAGtJ,IAAQxF,OAAO,CAACwO,EAAMkC,SAAS,GAAKlM,EAAOiI,SAAStE,IAAKqG,EAAMkC,SAAS,GAAKlM,EAAOiI,SAAStE,MACxIoH,EAAKH,OAAO,SAAS5V,KAAKiV,EAAKnK,MAAMuN,OAI7ClD,EAASjQ,GAAK,SAAUoG,EAAKgN,GACzB,OAAU,MAANA,EACO1D,EAAUtJ,IACrBsJ,EAAUtJ,GAAOgN,EACVnD,IAGXA,EAASH,MAAQ,SAAU/K,GAAK,OAAKC,UAAUC,QAAsB6K,EAAQ/K,EAAUkL,GAAzBH,GAC9DG,EAAS7O,EAAI,SAAU2D,GAAK,OAAKC,UAAUC,QAAkB7D,EAAI2D,EAAUkL,GAAjB7O,GAC1D6O,EAASzO,EAAI,SAAUuD,GAAK,OAAKC,UAAUC,QAAkBzD,EAAIuD,EAAUkL,GAAjBzO,GAC1DyO,EAASnJ,MAAQ,SAAU/B,GAAK,OAAKC,UAAUC,QAAsB6B,EAAQ/B,EAAUkL,GAAzBnJ,GAC9DmJ,EAAS/I,OAAS,SAAUnC,GAAK,OAAKC,UAAUC,QAAuBiC,EAASnC,EAAUkL,GAA3B/I,GAC/D+I,EAASd,OAAS,SAAUpK,GAAK,OAAKC,UAAUC,QAAuBkK,EAASpK,EAAUkL,GAA3Bd,GAC/Dc,EAASoD,SAAW,SAAU/X,EAAKC,GAAS6T,EAAW9T,GAAOC,EAAO0U,EAASjQ,GAAG,WAAWlF,KAAKoU,qCAG5F,IAAA1T,EAAAb,KACL,OAAO1B,EAAAC,EAAAC,cAAA,OAAKsD,IAAK,SAAAyS,GAAI,OAAI1T,EAAK0T,KAAOA,GAAMpI,MAAO,IAAKI,OAAQ,aA1ThDtK,aCWR0W,oLAbP,OACIra,EAAAC,EAAAC,cAAA,WACGF,EAAAC,EAAAC,cAACqK,EAAA,KAAD,KACIvK,EAAAC,EAAAC,cAACoa,EAAD,OAEJta,EAAAC,EAAAC,cAAA,WACKF,EAAAC,EAAAC,cAACqa,GAAD,eATD1Z,IAAM8C,kBCWV6W,OAVf,WACI,OACIxa,EAAAC,EAAAC,cAAA,YACIF,EAAAC,EAAAC,cAACua,EAAA,EAAD,KACIza,EAAAC,EAAAC,cAACua,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,UAAWP,QCKlCQ,OATf,WACE,OACE7a,EAAAC,EAAAC,cAAA,OAAK4a,UAAU,OACb9a,EAAAC,EAAAC,cAAC6a,EAAD,MACA/a,EAAAC,EAAAC,cAAC8a,GAAD,iBCJNC,IAASxV,OACLzF,EAAAC,EAAAC,cAACgb,GAAA,EAAD,KACAlb,EAAAC,EAAAC,cAACib,GAAD,OAEArN,SAASsN,eAAe,2BCV5B,IAAIC,EAAO,aAEXA,EAAKvQ,UAAUE,OAAS,WAAc,MAAO,IAC7CqQ,EAAKvQ,UAAUO,MAAQ,WAAc,MAAO,IAC5CgQ,EAAKvQ,UAAUQ,QAAU,WAAc,MAAO,IAC9C+P,EAAKvQ,UAAUS,UAAY,WAAc,MAAO,IAChD8P,EAAKvQ,UAAUU,MAAQ,WAAc,MAAO,IAC5C6P,EAAKvQ,UAAUW,MAAQ,WAAc,MAAO,IAC5C4P,EAAKvQ,UAAUY,GAAK,WAAc,MAAO,IACzC2P,EAAKvQ,UAAUa,IAAM,WAAc,MAAO,IAC1C0P,EAAKvQ,UAAUc,QAAU,WAAc,MAAO,IAE9CyP,EAAKvQ,UAAUoB,OAAS,WAAc,OAAKH,UAAUC,QAA+CtK,KAAKuM,OAAS,KAAavM,MAA3DA,KAAKuM,OAASvM,KAAKuM,OAAS,IAChGoN,EAAKvQ,UAAUe,KAAO,WAAc,OAAKE,UAAUC,QAA0CtK,KAAKuK,KAAO,KAAavK,MAApDA,KAAKuK,KAAOvK,KAAKuK,KAAO,GAC1FoP,EAAKvQ,UAAUyB,OAAS,WAAc,OAAKR,UAAUC,QAA8CtK,KAAK8K,OAAS,KAAa9K,MAA1DA,KAAK8K,OAAS9K,KAAK8K,OAAS,GAChG6O,EAAKvQ,UAAUoN,MAAQ,WAAc,OAAKnM,UAAUC,QAA6CtK,KAAK4E,MAAQ,KAAa5E,MAAxDA,KAAK4E,MAAQ5E,KAAK4E,MAAQ,IAE7F+U,EAAK3O,MAAQ,SAAUC,GACrB,MAAO,CACLT,OAAQ,SAAUd,GAAQ,OAAOuB,EAAMvB,EAAKc,WAC5CK,OAAQ,SAAUnB,GAAQ,OAAOuB,EAAMvB,EAAKmB,aAGhD8O,EAAKxP,KAAO,SAAUT,GAAQ,OAAOA,EAAKS,QAC1CwP,EAAKnD,MAAQ,SAAU9M,GAAQ,OAAOA,EAAK8M,SAE3C,IAAIoD,EAAa,SAAUrV,EAAO+G,GAEhCtL,KAAKuE,MAAQA,EACbvE,KAAKsL,OAASA,EAGdtL,KAAKwW,MAAMlL,EAAOuO,aAGlB,IAAInQ,EAAO1J,KACXA,KAAKsJ,SAASpI,QAAQ,SAAUuK,GAAOA,EAAI/B,KAAOA,IAClD1J,KAAK2J,QAAQzI,QAAQ,SAAUwK,GAAOA,EAAIhC,KAAOA,IACjD1J,KAAK+J,QAAQ3C,OAAO,SAAUwE,GAAQ,OAAOA,EAAK7J,OAAO2H,MAAQA,IAASxI,QAAQ,SAAU0K,GAAQA,EAAKxJ,KAAO,WAElHwX,EAAWxQ,UAAY,IAAIuQ,GACNrQ,OAAS,WAAc,OAAOtJ,KAAKsL,OAAOhC,UAC/DsQ,EAAWxQ,UAAUO,MAAQ,WAAc,OAAO3J,KAAKsL,OAAO3B,SAC9DiQ,EAAWxQ,UAAUW,MAAQ,WAAc,OAAO/J,KAAKsL,OAAOvB,SAC9D6P,EAAWxQ,UAAUa,IAAM,WAAc,OAAOjK,KAAKsL,OAAOwO,aAC5DF,EAAWxQ,UAAUc,QAAU,WAAc,OAAOlK,KAAKsL,OAAOyO,iBAEhE,IAAIC,EAAW,SAAUzV,EAAO0H,GAC9BjM,KAAKuE,MAAQA,EACbvE,KAAKiM,KAAOA,EAEZjM,KAAKwW,MAAMvK,EAAKpH,MAGhB,IAAI6E,EAAO1J,KACXA,KAAKiM,KAAKvC,KAAOA,EACjB1J,KAAKiK,MAAM/I,QAAQ,SAAUuK,GAAOA,EAAI/B,KAAOA,IAC/C1J,KAAKkK,UAAUhJ,QAAQ,SAAUuK,GAAOA,EAAI/B,KAAOA,MAErDsQ,EAAS5Q,UAAY,IAAIuQ,GACNhQ,MAAQ,WAAc,MAAO,CAAC3J,KAAKiM,OACtD+N,EAAS5Q,UAAUa,IAAM,WAAc,OAAOjK,KAAKiM,KAAK6N,aACxDE,EAAS5Q,UAAUc,QAAU,WAAc,OAAOlK,KAAKiM,KAAK8N","file":"static/js/main.3944835b.chunk.js","sourcesContent":["import React from \"react\";\nimport './Header.css';\n\nfunction Header() {\n    return (\n        <header>\n            <h1> TraViz </h1>\n        </header>\n    );\n}\n\nexport default Header;\n","import axios from \"axios\";\nconst API_URL = \"http://198.162.52.119:9000\"\n\nclass TraceService {\n    async getAllTraces() {\n        const url = `${API_URL}/overview`;\n        return axios.get(url).then(response => {\n            return response.data;\n        })\n    }\n\n    async getTrace(id) {\n        const url = `${API_URL}/traces/${id}`;\n        return axios.get(url).then(response => response.data);\n    }\n}\n\nexport default TraceService\n","import React from \"react\";\nimport * as crossfilter from \"crossfilter2/crossfilter\";\nimport {csv,timeFormat,timeParse,timeMonth,format} from 'd3'\nimport TraceService from \"../services/TraceService/TraceService\";\nimport \"dc/dc.css\";\n\nexport const CXContext = React.createContext(\"CXContext\");\nexport const  dateFormatSpecifier = '%Y-%m-%d %H:%M:%S';\nexport const dateFormat = timeFormat(dateFormatSpecifier);\nexport const dateFormatParser = timeParse(dateFormatSpecifier);\nexport const numberFormat = format('.2f');\n\nexport class DataContext extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state={loading:false,hasNDX:false,traces:[]};\n\n    this.traceService = new TraceService();\n  }\n\n  componentDidMount() {\n      if (this.state.hasNDX){\n          return\n      }\n      if(this.state.loading){\n          return\n      }\n      this.setState({loading:true})\n      this.traceService.getAllTraces().then(traces => {\n          console.log(\"Reached here\");\n          console.log(traces);\n          traces.forEach(function (d) {\n              d.dd = dateFormatParser(d.Date);\n              d.month = timeMonth(d.dd);\n              d.Duration = +d.Duration / 1000000;\n              d.NumEvents = +d.NumEvents;\n              d.Tags = d.Tags;\n          });\n          console.log(traces);\n          this.ndx = crossfilter(traces);\n          this.setState({loading:false,hasNDX:true});  \n      });\n  }\n\n  render() {\n      if(!this.state.hasNDX){\n          return null;\n      }\n    return (\n      <CXContext.Provider value={{ndx:this.ndx}}>\n        <div ref={this.parent}>\n        {this.props.children}\n        </div>\n      </CXContext.Provider>\n    );\n  }\n}\n","import React from \"react\";\nimport { CXContext } from \"./cxContext\";\nimport * as dc from \"dc\";\n\nconst NextButton = props => {\n    return (\n        <input id=\"next\" class=\"btn\" type=\"button\" value=\"Next\"\n            onClick={() => {\n                var totFilteredRecs = props.ndx.groupAll().value();\n                var ofs = props.table.beginSlice();\n                var pag = 50;\n                var ofs = ofs + pag > totFilteredRecs ? totFilteredRecs : ofs + pag;\n                props.table.beginSlice(ofs);\n                props.table.endSlice(ofs+pag);\n                props.table.redraw();\n            }} />\n    );\n};\n\nconst LastButton = props => {\n    return (\n        <input id=\"last\" class=\"btn\" type=\"button\" value=\"Last\"\n            onClick={() => {\n                var ofs = props.table.beginSlice();\n                var pag = 50;\n                var ofs = ofs - pag < 0 ? 0 : ofs - pag;\n                props.table.beginSlice(ofs);\n                props.table.endSlice(ofs+pag);\n                props.table.redraw();\n            }} />\n    );\n};\n\nexport const Pagination = props => {\n    return (\n        <div id=\"paging\">\n            Showing <span id=\"begin\"></span>-<span id=\"end\"></span> of <span id=\"size\"></span> <span id=\"totalsize\"></span>\n            <LastButton table={props.table} ndx={props.ndx}/>\n            <NextButton table={props.table} ndx={props.ndx}/>\n        </div>\n    )\n}\n\nexport const TableTemplate = props => {\n    const context = React.useContext(CXContext);\n    const [table,updateTable] = React.useState(null);\n    const ndx = context.ndx;\n    const div = React.useRef(null);\n    React.useEffect(() => {\n        const newTable = props.tableFunction(div.current, ndx);\n        newTable.render();\n        updateTable(newTable);\n    },1); {/*Run this exactly once */}\n\n    return (\n        <div ref={div}>\n            <label>{props.title}</label>\n            <Pagination table={table} ndx={ndx}/>\n        </div>\n    );\n}\n","import React from \"react\";\nimport * as dc from \"dc\";\nimport \"dc/dc.css\";\n\nimport {format as d3Format } from 'd3'\nimport * as d3 from \"d3\";\nimport { TableTemplate } from \"./tableTemplate\";\nimport { numberFormat } from \"./cxContext\";\n\nconst tableFunc = (divRef, ndx) => {\n    const traceTable = dc.dataTable(divRef);\n\n    const dimension = ndx.dimension(d=> d.dd);\n    var ofs = 0;\n    var pag = 50;\n    traceTable.dimension(dimension)\n    .group(d=>{\n        var format = d3Format('02d');\n        return d.dd.getFullYear() + '/' + format((d.dd.getMonth() + 1));\n    })\n    .columns([\n        {\n            label: 'ID',\n            format: function(d) {\n                return '<a href=traces/\"' + d.ID + '\">' + d.ID + '</a>'\n            }\n        },\n        {\n            label: 'Date',\n            format: function (d) {\n                return d.dd.getUTCFullYear() +\"/\"+ (d.dd.getUTCMonth()+1) +\"/\"+ d.dd.getUTCDate()\n            }\n        },\n        'Duration',\n        'NumEvents',\n        'Tags'\n    ])\n    .sortBy(function (d) {\n        return d.dd;\n    })\n    .size(Infinity)\n    .showGroups(false)\n    .on('preRender', function (table) {\n          var totFilteredRecs = ndx.groupAll().value();\n          var end = ofs + pag > totFilteredRecs ? totFilteredRecs : ofs + pag;\n          ofs = ofs >= totFilteredRecs ? Math.floor((totFilteredRecs - 1) / pag) * pag : ofs;\n          ofs = ofs < 0 ? 0 : ofs;\n          table.beginSlice(ofs);\n          table.endSlice(ofs+pag);\n    })\n    .on('preRedraw', function (table) {\n          var totFilteredRecs = ndx.groupAll().value();\n          ofs = table.beginSlice();\n          console.log(ofs);\n          var end = ofs + pag > totFilteredRecs ? totFilteredRecs : ofs + pag;\n          ofs = ofs >= totFilteredRecs ? Math.floor((totFilteredRecs - 1) / pag) * pag : ofs;\n          ofs = ofs < 0 ? 0 : ofs;\n          console.log(ofs);\n          table.beginSlice(ofs);\n          table.endSlice(ofs+pag);\n    })\n    .on('pretransition', function (table) {\n          var totFilteredRecs = ndx.groupAll().value();\n          var end = ofs + pag > totFilteredRecs ? totFilteredRecs : ofs + pag;\n          d3.select('#begin')\n              .text(end === 0? ofs : ofs + 1);\n          d3.select('#end')\n              .text(end);\n          d3.select('#last')\n              .attr('disabled', ofs-pag<0 ? 'true' : null);\n          d3.select('#next')\n              .attr('disabled', ofs+pag>=totFilteredRecs ? 'true' : null);\n          d3.select('#size').text(totFilteredRecs);\n          if(totFilteredRecs != ndx.size()){\n            d3.select('#totalsize').text(\"(filtered Total: \" + ndx.size() + \" )\");\n          }else{\n            d3.select('#totalsize').text('');\n          }\n    });\n\n    return traceTable;\n\n}\n\nexport const TraceTable = props => (\n    <TableTemplate tableFunction={tableFunc} title=\"Summary Table\"/>\n)\n","import React from \"react\";\nimport { CXContext } from \"./cxContext\";\nimport * as dc from \"dc\";\n\nconst ResetButton = props => {\n  return (\n    <input class=\"btn\" type=\"button\" value=\"Reset\"\n      onClick={() => {\n        props.chart.filterAll();\n        dc.redrawAll();\n      }}\n    />\n  );\n};\n\nexport const ChartTemplate = props => {\n    /*\n    We render the dc chart using an effect. We want to pass the chart as a prop after the dc call,\n    but there is nothing by default to trigger a re-render and the prop, by default would be undefined.\n    To solve this, we hold a state key and increment it after the effect ran. \n    By passing the key to the parent div, we get a rerender once the chart is defined. \n    */\n  const context = React.useContext(CXContext);\n  const [chart,updateChart] = React.useState(null);\n  const ndx = context.ndx;\n  const div = React.useRef(null);\n  React.useEffect(() => {\n    const newChart = props.chartFunction(div.current, ndx); // chartfunction takes the ref and does something with it\n\n    newChart.render();\n    updateChart(newChart);\n  },1); {/*Run this exactly once */}\n\n  return (\n    <div\n      ref={div}\n    >\n     <label>{props.title}</label>\n     <ResetButton chart={chart} /> \n    </div>\n  );\n};\n","import React from \"react\";\nimport * as dc from \"dc\";\nimport { scaleLinear } from \"d3\";\nimport { ChartTemplate } from \"./chartTemplate\";\nimport { numberFormat } from \"./cxContext\";\n\nconst eventsChartFunc = (divRef, ndx) => {\n    const eventsChart = dc.barChart(divRef);\n    const dimension = ndx.dimension(d=> d.NumEvents);\n    const group = dimension.group(function (d) { return Math.floor(d / 20) * 20; });\n    eventsChart\n    .dimension(dimension)\n    .group(group)\n    .gap(1)\n    .x(scaleLinear().domain([0,400]).rangeRound([0, 10 * 20]))\n    .y(scaleLinear().domain([0, 10000]))\n    .valueAccessor(x=>x.value)\n    .centerBar(true)\n    .xUnits(function() { return 21; })\n    .renderHorizontalGridLines(true)\n    .filterPrinter( (filters) => {\n        var filter = filters[0], s = '';\n        s += numberFormat(filter[0]) + ' -> ' + numberFormat(filter[1]);\n        return s;\n    });\n\n    eventsChart.xAxis().tickFormat(\n        function (v) { return v; }  \n    );\n\n    eventsChart.yAxis().ticks(10).tickFormat(\n        function (v) { return v / 1000 + 'K'; }\n    );\n\n    return eventsChart;\n}\n\nexport const EventsChart = props => (\n    <ChartTemplate chartFunction={eventsChartFunc} title=\"Num Events distribution\" />\n)","import React from \"react\";\nimport * as dc from \"dc\";\nimport { scaleLinear } from \"d3\";\nimport { ChartTemplate } from \"./chartTemplate\";\nimport { numberFormat } from \"./cxContext\";\n\nconst durationChartFunc = (divRef, ndx) => {\n    const durationChart = dc.barChart(divRef);\n    const dimension = ndx.dimension(d=> d.Duration);\n    const group = dimension.group(function (d) { return Math.floor(d / 50) * 50; });\n    durationChart\n    .dimension(dimension)\n    .group(group)\n    .gap(1)\n    .x(scaleLinear().domain([0,1000]).rangeRound([0, 10 * 40]))\n    .y(scaleLinear().domain([0, 2000]))\n    .valueAccessor(x=>x.value)\n    .centerBar(true)\n    .xUnits(function() { return 21; })\n    .round(dc.round.floor)\n    .filterPrinter( (filters) => {\n        var filter = filters[0], s= '';\n        s += numberFormat(filter[0]) + 'ms -> ' + numberFormat(filter[1]) + 'ms';\n        return s;\n    });\n\n    durationChart.xAxis().tickFormat(\n        function (v) { return v;}\n    );\n\n    durationChart.yAxis().tickFormat(\n        function (v) { return v;}\n    );\n\n    return durationChart;\n}\n\nexport const DurationChart = props => (\n    <ChartTemplate chartFunction={durationChartFunc} title=\"Latency Distribution\" />\n)","import React from \"react\";\nimport * as dc from \"dc\";\nimport * as d3 from \"d3\";\nimport { ChartTemplate } from \"./chartTemplate\";\n\nconst dateChartFunc = (divRef, ndx) => {\n    const dateChart = dc.barChart(divRef);\n    const dimension = ndx.dimension(function(d) { return d.dd;});\n    const dates = dimension.group(d3.timeDay);\n    console.log(dimension.bottom(1));\n    dateChart\n    .dimension(dimension)\n    .group(dates)\n    .round(d3.timeDay.round)\n    .x(d3.scaleTime()\n        .domain([dimension.bottom(1)[0].dd, dimension.top(1)[0].dd])\n        .rangeRound([0, 10 * 90])\n    );\n\n    return dateChart;\n}\n\nexport const DateChart = props => (\n    <ChartTemplate chartFunction={dateChartFunc} title=\"Days of Traces\" />\n)","import React from 'react'\nimport {Grid,Row,Col} from 'react-flexbox-grid'\nimport { TraceTable } from \"./traceTable\";\nimport { DataContext } from \"./cxContext\";\nimport { css } from 'glamor';\nimport { EventsChart } from './eventsChart';\nimport { DurationChart } from './durationChart';\nimport { DateChart } from './dateChart';\n\nexport const Dashboard = (props)=>{\n\n    const style = css({\n        padding:'1rem',\n        marginTop:'2rem'\n    })\n    return(\n        <div {...style}>\n        <DataContext>\n                <Row>\n                    <Col md={6} >\n                        <TraceTable />\n                    </Col>\n                    <Col md={3} >\n                    </Col>\n                    <Col md={3} >\n                        <Row>\n                            <EventsChart />\n                        </Row>\n                        <Row>\n                            <DurationChart />\n                        </Row>\n                        <Row>\n                            <DateChart />\n                        </Row>\n                    </Col>\n                </Row>\n        </DataContext>\n        </div>\n    )\n}\n","import * as d3 from \"d3\"\nimport * as VizLane from \"./VizLane\"\nexport var Group = function () { };\nGroup.prototype.Lanes = function () { return []; };\n\nGroup.prototype.Events = function () { return [].concat.apply([], this.Lanes().map(function (lane) { return lane.Events(); })); };\nGroup.prototype.Spans = function () { return [].concat.apply([], this.Lanes().map(function (lane) { return lane.Spans(); })); };\nGroup.prototype.Threads = function () { return [].concat.apply([], this.Lanes().map(function (lane) { return lane.Threads(); })); };\nGroup.prototype.Processes = function () { return [].concat.apply([], this.Lanes().map(function (lane) { return lane.Processes(); })); };\nGroup.prototype.Tasks = function () { return [].concat.apply([], this.Lanes().map(function (lane) { return lane.Tasks(); })); };\nGroup.prototype.Edges = function () { return [].concat.apply([], this.Lanes().map(function (lane) { return lane.Edges(); })); };\nGroup.prototype.GC = function () { return [].concat.apply([], this.Lanes().map(function (lane) { return lane.GC(); })); };\nGroup.prototype.HDD = function () { return [].concat.apply([], this.Lanes().map(function (lane) { return lane.HDD(); })); };\nGroup.prototype.Network = function () { return [].concat.apply([], this.Lanes().map(function (lane) { return lane.Network(); })); };\n\nGroup.prototype.Fill = function (_) { if (!arguments.length) return this.fill ? this.fill : 0; this.fill = _; return this; };\nGroup.prototype.Height = function (_) { var s = this.Spacing(); if (this.Lanes().length == 0) return 0; return this.Lanes().map(function (l) { return l.Height(); }).reduce(function (a, b) { return a + b + s; }); };\nGroup.prototype.Offset = function (_) {\n  if (!arguments.length)\n    return this.offset ? this.offset : 0;\n  this.offset = _;\n  var spacing = this.Spacing();\n  this.Lanes().forEach(function (lane) { lane.Offset(_); _ += lane.Height() + spacing; });\n  return this;\n};\nGroup.prototype.Spacing = function (_) {\n  if (!arguments.length)\n    return this.spacing ? this.spacing : 0;\n  this.spacing = _;\n  this.Offset(this.Offset());\n  return this;\n};\n\nGroup.Scale = function (scale) {\n  return {\n    Height: function (group) { return scale(group.Height()); },\n    Offset: function (group) { return scale(group.Offset()); }\n  };\n};\n\nvar ProcessGroup = function (layout, process) {\n  // Save the arguments\n  this.layout = layout;\n  this.process = process;\n\n  // Create the lanes\n  var group = this;\n  this.lanes = process.Threads().map(function (thread) { return new VizLane.ThreadLane(group, thread); });\n\n  // Generate a background colour for this group\n  this.Fill(d3.rgb(200 + Math.random() * 20, 200 + Math.random() * 20, 200 + Math.random() * 20));\n  this.lanes.forEach(function (lane) { lane.Fill(group.Fill()); });\n\n  // Set initial spacing and offset for lanes\n  this.Spacing(1).Offset(0);\n\n  // Save the group on the GC events\n  var group = this;\n  this.Events().forEach(function (evt) { evt.group = group; });\n  this.Spans().forEach(function (spn) { spn.group = group; });\n  this.GC().forEach(function (gc) { gc.group = group; });\n  this.Edges().filter(function (edge) { return edge.parent.lane != edge.child.lane && edge.parent.group == group; }).forEach(function (edge) { edge.type = \"group\"; });\n};\nProcessGroup.prototype = new Group();\nProcessGroup.prototype.Lanes = function () { return this.lanes; };\nProcessGroup.prototype.GC = function () { return this.process.GCEvents(); };\n\nvar TenantGroup = function (layout, tasks) {\n  this.layout = layout;\n  this.tasks = tasks;\n\n  // Create the lanes\n  var group = this;\n  this.lanes = tasks.map(function (task) { return new VizLane.TaskLane(group, task); });\n\n  // Generate a background colour for this group\n  this.Fill(d3.rgb(200 + Math.random() * 20, 200 + Math.random() * 20, 200 + Math.random() * 20));\n  this.lanes.forEach(function (lane) { lane.Fill(group.Fill()); });\n\n  // Set initial spacing and offset for lanes\n  this.Spacing(1).Offset(0);\n\n  // Save the group on things\n  tasks.forEach(function (task) { task.group = group; });\n  this.HDD().forEach(function (evt) { evt.group = group; });\n  this.Network().forEach(function (evt) { evt.group = group; });\n};\nTenantGroup.prototype = new Group();\nTenantGroup.prototype.Lanes = function () { return this.lanes; };\n\n//var CompactProcessGroup = function(layout, process) {\n//  \n//};\n//\n//function SpanGroup(threads) {\n//  var groups = [];\n//  \n//  var makegroup = function() {\n//    var group = [];\n//    var id = groupid+\"_group\"+groups.length;\n//    group.ID = function() { return id; };\n//    group.End = function() { return group.length==0 ? 0 : group[group.length-1].End(); }\n//    group.Events = function() { return [].concat.apply([], group.map(function(span) { return span.Events(); })); };\n//    group.Spans = function() { return group; };\n//    return group;\n//  };\n//  \n//  for (var i = 0; i < numgroups; i++)\n//    groups.push(makegroup(i));\n//\n//  var affinity = {};\n//  for (var i = 0; i < threaddata.length; i++)\n//    affinity[threaddata[i].ID()] = i % numgroups;\n//  \n//  var spans = [].concat.apply([], threaddata.map(function(thread) { return thread.Spans(); }));\n//  spans.sort(function(a, b) { return a.Start() - b.Start(); });\n//  \n//  for (var i = 0; i < spans.length; i++) {\n//    var span = spans[i], spanaffinity = affinity[span.thread.ID()];\n//    for (var j = 0; j < numgroups; j++) {\n//      var k = (j + spanaffinity) % numgroups;\n//      if (groups[k].End() <= span.Start()) {\n//        groups[k].push(span);\n//        break;\n//      }\n//    }\n//  }\n//  \n//  return groups;\n//};","import * as d3 from \"d3\"\nimport $ from \"jquery\"\nvar window = window ? window : {};\n// Problems with resizing and jquery and chrome and this stuff is so dumb.\nwindow.width = function () {\n    return document.body.clientWidth;\n};\n\nwindow.height = function () {\n    return document.body.clientHeight;\n};\n\n// http://stackoverflow.com/questions/523266/how-can-i-get-a-specific-parameter-from-location-search\nvar getParameter = function (name) {\n    name = name.replace(/[\\[]/, \"\\\\\\[\").replace(/[\\]]/, \"\\\\\\]\");\n    var regexS = \"[\\\\?&]\" + name + \"=([^&#]*)\";\n    var regex = new RegExp(regexS);\n    var results = regex.exec(window.location.href);\n    if (results == null)\n        return \"\";\n    else\n        return results[1];\n};\n\nvar getParameters = function () {\n    if (window.location.href.indexOf(\"?\") == -1) return {};\n    var param_strs = window.location.href.substr(window.location.href.indexOf(\"?\") + 1).split(\"&\");\n    var params = {};\n    param_strs.forEach(function (str) {\n        var splits = str.split(\"=\");\n        if (splits.length == 2) {\n            params[splits[0]] = splits[1];\n        }\n    });\n    return params;\n};\n\nvar getReports = function (ids_str, callback, errback) {\n    // Batches report requests\n    if (ids_str == null) {\n        errback(\"No IDs specified\");\n    }\n\n    var i = 0;\n    var batch_size = 20;\n    var ids = ids_str.split(\",\");\n\n    var json_ids = [];\n    var regular_ids = [];\n    for (var i = 0; i < ids.length; i++) {\n        var id = ids[i];\n        if (id.indexOf(\".json\") != -1) {\n            json_ids.push(id);\n        } else {\n            regular_ids.push(id);\n        }\n    }\n\n    var results = [];\n    var jsondone = false, batchdone = false;\n    var batch_callback = function (json) {\n        results = results.concat(json);\n        i++;\n        if (regular_ids.length == 0) {\n            batchdone = true;\n            if (jsondone && batchdone) callback(results);\n        } else {\n            var next_request_ids = regular_ids.splice(0, batch_size);\n            console.info(\"Retrieving batch \" + i + \":\", next_request_ids);\n            getAllReports(next_request_ids.join(), batch_callback, errback);\n        }\n    }\n\n    var json_fecthing_id = null;\n    var json_batch_callback = function (json) {\n        if (json.length == 1) json[0].id = json_fecthing_id;\n        results = results.concat(json);\n        if (json_ids.length == 0) {\n            jsondone = true;\n            if (jsondone && batchdone) callback(results);\n        } else {\n            json_fecthing_id = json_ids.splice(0, 1);\n            d3.json(json_fecthing_id, json_batch_callback);\n            console.info(\"Retrieving JSON file \" + id);\n        }\n    }\n\n    batch_callback([]);\n    json_batch_callback([]);\n}\n\nvar loadTraceFromFile = function (callback, errback) {\n    return function (evt) {\n        console.log(\"loading \", evt);\n        var files = evt.target.files; // FileList\n        var reader = new FileReader();\n        reader.onload = function (e) {\n            try {\n                var json = JSON.parse(e.target.result);\n            } catch (e) {\n                errback(\"Unable to parse JSON file \" + files[0].name, e);\n            }\n            try {\n                json.forEach(function (trace) { sanitizeReports(trace.reports); });\n                callback(json);\n            } catch (e) {\n                errback(\"Unable to process JSON file \" + files[0].name, e);\n            }\n        };\n        reader.readAsText(files[0]);\n    };\n}\n\nvar getAllReports = function (ids, callback, errback) {\n    var report_url = \"reports/\" + ids;\n\n    var xhr = new XMLHttpRequest();\n\n    xhr.open(\"GET\", report_url, true);\n\n    xhr.onreadystatechange = function () {\n        if (xhr.readyState == 4) {\n            if (xhr.status = 200) {\n                var json = JSON.parse(xhr.responseText);\n                json.forEach(function (trace) { sanitizeReports(trace.reports); });\n                callback(json);\n            } else {\n                errback(xhr.status, xhr);\n            }\n        }\n    };\n\n    xhr.send(null);\n};\n\nvar getRawReports = function (id, callback, errback) {\n    var report_url = \"reports/\" + id;\n\n    var xhr = new XMLHttpRequest();\n\n    xhr.open(\"GET\", report_url, true);\n\n    xhr.onreadystatechange = function () {\n        if (xhr.readyState == 4) {\n            if (xhr.status = 200) {\n                callback(xhr.responseText);\n            } else {\n                errback(xhr.status, xhr);\n            }\n        }\n    };\n\n    xhr.send(null);\n};\n\nfunction getRelated(ids, callback, errback) {\n    var overlapping_url = \"overlapping/\" + ids;\n\n    var xhr = new XMLHttpRequest();\n\n    xhr.open(\"GET\", overlapping_url, true);\n\n    xhr.onreadystatechange = function () {\n        if (xhr.readyState == 4) {\n            if (xhr.status = 200) {\n                try {\n                    var json = JSON.parse(xhr.responseText);\n                    callback(json);\n                } catch (e) {\n                    errback(e);\n                }\n            } else {\n                errback(xhr);\n            }\n        }\n    };\n\n    xhr.send(null);\n};\n\nfunction getTags(ids, callback, errback) {\n    var tags_url = \"tags/\" + ids;\n\n    var xhr = new XMLHttpRequest();\n\n    xhr.open(\"GET\", tags_url, true);\n\n    xhr.onreadystatechange = function () {\n        if (xhr.readyState == 4) {\n            if (xhr.status = 200) {\n                try {\n                    var json = JSON.parse(xhr.responseText);\n                    callback(json);\n                } catch (e) {\n                    errback(e);\n                }\n            } else {\n                errback(xhr);\n            }\n        }\n    };\n\n    xhr.send(null);\n}\n\nfunction getGCReports(ids, callback, errback) {\n    var gcReportsReceivedCallback = function (data) {\n        var GCReportsByProcess = {}\n        for (var i = 0; i < data.length; i++) {\n            var reports = data[i].reports;\n            for (var j = 0; j < reports.length; j++) {\n                var report = reports[j];\n                if (report[\"Operation\"] && report[\"Operation\"] == \"GC\") {\n                    var processID = report[\"ProcessID\"];\n                    if (!GCReportsByProcess[processID])\n                        GCReportsByProcess[processID] = [report];\n                    else\n                        GCReportsByProcess[processID].push(report);\n                }\n            }\n        }\n        callback(GCReportsByProcess);\n    };\n    var tagsReceivedCallback = function (tagdata) {\n        var GCTasks = [];\n        for (var taskid in tagdata) {\n            var tags = tagdata[taskid];\n            if (tags.indexOf(\"GarbageCollection\") != -1 || tags.indexOf(\"GC\") != -1) {\n                GCTasks.push(taskid);\n            }\n        }\n        if (GCTasks.length > 0) {\n            getReports(GCTasks.join(\",\"), gcReportsReceivedCallback, errback);\n        } else {\n            callback({});\n        }\n    };\n    var relatedIDsReceivedCallback = function (ids) {\n        console.log(\"Searching for GarbageCollection data in ids: \" + ids.join(','));\n        getTags(ids.join(','), tagsReceivedCallback, errback);\n    };\n    getRelated(ids, relatedIDsReceivedCallback, errback);\n}\n\nvar sanitizeReports = function (reports) {\n    var i = 0;\n    var erroneous = { \"edges\": [], \"ids\": [] };\n    while (i < reports.length) {\n        var report = reports[i];\n        if (!report.hasOwnProperty(\"ParentEventID\") || report[\"ParentEventID\"].length == 0) {\n            erroneous.edges.push(report);\n            report[\"ParentEventID\"] = [];\n        } else if (!report.hasOwnProperty(\"EventID\")) {\n            erroneous.ids.push(report);\n            reports.splice(i, 1);\n            i--;\n        }\n        i++;\n    }\n    if (erroneous.edges.length > 0 || erroneous.ids.length > 0) {\n        if (erroneous.edges.length > 0)\n            console.warn(\"Warning: \" + erroneous.edges.length + \" reports with no edges\");\n        if (erroneous.ids.length > 0)\n            console.warn(\"Warning: \" + erroneous.ids.length + \" reports with no or bad ID\");\n        console.warn(\"Erroneous reports: \", erroneous);\n    }\n\n    return reports;\n};\n\nvar createGraphFromReports = function (reports, params) {\n    console.log(\"Creating graph from reports\");\n\n    // Filter hideagent elements\n    if (params[\"hideagent\"]) {\n        console.info(\"Hiding agent\", params[\"hideagent\"], \"in\", reports.length, \"reports\");\n        reports = filter_agent_reports(reports, params[\"hideagent\"]);\n    }\n\n    // Filter 'merge' elements\n    console.info(\"Removing 'merge' operations in\", reports.length, \"reports\");\n    reports = filter_merge_reports(reports);\n\n    // Filter yarnchild reports\n    if (params[\"mapreduceonly\"]) {\n        console.info(\"Filtering mapreduce reports in\", reports.length, \"reports\");\n        reports = filter_yarnchild_reports(reports);\n    }\n\n    // Create nodes\n    console.info(\"Creating graph nodes\");\n    var nodes = {};\n    for (var i = 0; i < reports.length; i++) {\n        var report = reports[i];\n        if (!report.hasOwnProperty(\"EventID\")) {\n            console.error(\"Bad report found with no ID:\", report);\n            continue;\n        }\n        var id = report.EventID;\n        nodes[id] = new Node(id);\n        nodes[id].report = report;\n    }\n\n    // Second link the nodes together\n    console.info(\"Linking graph nodes\");\n    for (var nodeid in nodes) {\n        var node = nodes[nodeid];\n        node.report[\"ParentEventID\"].forEach(function (parentid) {\n            if (nodes[parentid]) {\n                nodes[parentid].addChild(node);\n                node.addParent(nodes[parentid]);\n            }\n        })\n    }\n\n    // // Create the graph and add the nodes\n    // var graph = new Graph();\n    // for (var id in nodes) {\n    //     graph.addNode(nodes[id]);\n    // }\n\n    // console.log(\"Done creating graph from reports\");\n    // return graph;\n}\n\nvar createJSONFromVisibleGraph = function (graph) {\n    var nodes = graph.getVisibleNodes();\n    var reports = [];\n\n    for (var i = 0; i < nodes.length; i++) {\n        var node = nodes[i];\n        var parents = node.getVisibleParents();\n        var report = $.extend({}, node.report);\n        report[\"ParentEventID\"] = [];\n        for (var j = 0; j < parents.length; j++) {\n            report[\"ParentEventID\"].push(parents[j].id);\n        }\n        reports.push(report);\n    }\n\n    return { \"reports\": reports };\n}\n\n\n//Javascript impl of java's string hashcode:\n//http://werxltd.com/wp/2010/05/13/javascript-implementation-of-javas-string-hashcode-method/\nString.prototype.hashCode = function () {\n    var hash = 0, i, char;\n    if (this.length == 0) return hash;\n    for (i = 0; i < this.length; i++) {\n        char = this.charCodeAt(i);\n        hash = ((hash << 5) - hash) + char;\n        hash = hash & hash; // Convert to 32bit integer\n    }\n    return hash;\n};\n\nfunction hash_report(report) {\n    var hash = 0;\n    //if (report[\"Agent\"]) hash += (\"Agent:\"+report[\"Agent\"]).hashCode();\n    //if (report[\"Label\"]) hash += (\"Label:\"+report[\"Label\"]).hashCode();\n    //if (report[\"Class\"]) hash += (\"Class:\"+report[\"Class\"]).hashCode();\n    if (report[\"Source\"]) hash += (\"Source:\" + report[\"Source\"]).hashCode();\n    return hash & hash;\n}\n\nvar filter_yarnchild_reports = function (reports) {\n    // First, get the process IDs for the yarnchild nodes\n    var yarnchild_process_ids = {};\n    for (var i = 0; i < reports.length; i++) {\n        var report = reports[i];\n        if (report.hasOwnProperty(\"Agent\") && (report[\"Agent\"] == \"YarnChild\" || report[\"Agent\"] == \"Hadoop Job\")) {\n            yarnchild_process_ids[report[\"ProcessID\"]] = true;\n        }\n    }\n\n    // A function to decide whether a report stays or goes\n    var filter = function (report) {\n        return yarnchild_process_ids[report[\"ProcessID\"]] ? false : true;\n    }\n\n    return filter_reports(reports, filter);\n}\n\nvar filter_merge_reports = function (reports) {\n    var filter = function (report) {\n        return report[\"Operation\"] && report[\"Operation\"] == \"merge\";\n    }\n\n    return filter_reports(reports, filter);\n}\n\nvar filter_agent_reports = function (reports, agent) {\n    var filter = function (report) {\n        return report[\"Agent\"] && report[\"Agent\"] == agent;\n    };\n\n    return filter_reports(reports, filter);\n}\n\n\nvar filter_reports = function (reports, f) {\n    // Figure out which reports have to be removed\n    var retained = {};\n    var removed = {};\n    var reportmap = {};\n    for (var i = 0; i < reports.length; i++) {\n        var report = reports[i];\n        var id = report.EventID;\n        reportmap[id] = report;\n        if (f(report)) {\n            removed[id] = report;\n        } else {\n            retained[id] = report;\n        }\n    }\n\n    var remapped = {};\n    var num_calculated = 0;\n    var remap_parents = function (id) {\n        if (remapped[id]) {\n            return;\n        } else {\n            var report = reportmap[id];\n            var parents = report[\"ParentEventID\"];\n            var newparents = {};\n            for (var i = 0; i < parents.length; i++) {\n                if (removed[parents[i]]) {\n                    remap_parents(parents[i]);\n                    reportmap[parents[i]][\"ParentEventID\"].forEach(function (grandparent) {\n                        newparents[grandparent] = true;\n                    })\n                } else {\n                    newparents[parents[i]] = true;\n                }\n            }\n            report[\"ParentEventID\"] = Object.keys(newparents);\n            remapped[id] = true;\n        }\n    }\n\n    return Object.keys(retained).map(function (id) {\n        remap_parents(id);\n        return retained[id];\n    })\n}\n\n// var yarnchild_kernelgraph_for_trace = function (trace) {\n//     trace.reports = filter_yarnchild_reports(trace.reports);\n//     trace.reports = filter_merge_reports(trace.reports);\n//     return kernelgraph_for_trace(trace);\n// }\n\nexport var report_id = function (report) {\n    return report.EventID;\n}\n\n// generates numeric ids starting from 0, never reuses same number\nexport var unique_id = function () {\n    var seed = 0;\n    return function () {\n        return seed++;\n    };\n}();\n\n// generates random strings of default length 8 consisting of only letters\nvar random_string = function (/*optional*/ length) {\n    if (!length)\n        length = 8;\n    var text = \"\";\n    var possible = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz\";\n\n    for (var i = 0; i < length; i++)\n        text += possible.charAt(Math.floor(Math.random() * possible.length));\n\n    return text;\n};\n\n\n\nexport function group_reports_by_field(reports, field) {\n    var grouping = {};\n    for (var i = 0; i < reports.length; i++) {\n        try {\n            var value = reports[i][field];\n            if (!(value in grouping))\n                grouping[value] = [];\n            grouping[value].push(reports[i]);\n        } catch (e) {\n            console.log(e);\n        }\n    }\n    return grouping;\n};","import * as XtraceUtils from \"../xtrace_utils\"\n\nvar PrototypeBuilder = function () {\n  var getter = null;\n  var accessors = [];\n  var mappers = [];\n  var id = true;\n  var times = true;\n\n  var build = function (cls) {\n    // First, add the ID and getID methods if requested\n    if (id) {\n      cls.prototype.ID = function () { return this.fqid; };\n      cls.prototype.globalID = function () { return this.id; };\n      cls.getID = function (obj) { return obj.ID(); };\n      cls.getGlobalID = function (obj) { return obj.globalID(); };\n    }\n\n    // The getter is just an accessor\n    if (getter != null) {\n      cls.prototype.getter = getter;\n      accessors.push(getter);\n    }\n\n    // Accessors access data fields\n    for (var i = 0; i < accessors.length; i++) {\n      var accessor = accessors[i];\n      var accessor_data_field = accessor.toLowerCase();\n      cls.prototype[accessor] = function (field) { return function () { return this[field]; }; }(accessor_data_field);\n    }\n\n    // At this point, remaining methods need a getter.  If no getter, return\n    if (getter == null)\n      return;\n\n    // Mappers simply call the mapper method on each of the elements returned by the getter\n    for (var i = 0; i < mappers.length; i++) {\n      cls.prototype[mappers[i]] = function (mapper) {\n        return function (/*optional*/dontcache) {\n          if (this[mapper.toLowerCase()])\n            return this[mapper.toLowerCase()];\n          var ret = [].concat.apply([], this[this.getter]().map(function (elem) { return elem[mapper](true); }));\n          if (!dontcache)\n            this[mapper.toLowerCase()] = ret;\n          return ret;\n        };\n      }(mappers[i]);\n    };\n\n    // Times call the max/min of the times of the getter\n    if (times) {\n      cls.prototype.Start = function () {\n        if (this.start == null)\n          this.start = Math.min.apply(this, this[this.getter]().map(function (elem) { return elem.Start(); }));\n        return this.start;\n      };\n      cls.prototype.End = function () {\n        if (this.end == null)\n          this.end = Math.max.apply(this, this[this.getter]().map(function (elem) { return elem.End(); }));\n        return this.end;\n      };\n      cls.prototype.Duration = function () {\n        return this.End() - this.Start();\n      };\n    }\n  };\n\n  build.getter = function (_) { if (!arguments.length) return getter; getter = _; return build; };\n  build.accessors = function (_) { if (!arguments.length) return accessors; accessors = _; return build; };\n  build.mappers = function (_) { if (!arguments.length) return mappers; mappers = _; return build; };\n  build.id = function (_) { if (!arguments.length) return id; id = _; return build; };\n  build.times = function (_) { if (!arguments.length) return times; times = _; return build; };\n\n  return build;\n};\n\n\n\nexport var XEvent = function (span, report) {\n  this.report = report;\n  this.span = span;\n  this.id = report.id;\n  this.fqid = this.id;\n  this.timestamp = report.Timestamp\n  this.type = \"event\";\n  if (report[\"Operation\"])\n    this.type = \"operation \" + report.Operation;\n  this.start = this.timestamp;\n  this.end = this.timestamp;\n  this.duration = 0;\n  if (report[\"Duration\"]) {\n    this.duration = Number(report[\"Duration\"]) / 1000000.0;\n    this.start = this.timestamp - this.duration;\n    this.end = this.timestamp;\n  }\n  if (report[\"Operation\"] && report.Operation.substr(0, 4) == \"file\" && report.Agent.indexOf(\"ScheduledFileIO\") != -1) {\n    var keys = [\"PreWait\", \"PreDuration\", \"IOWait\", \"IODuration\", \"PostWait\", \"PostDuration\"];\n    this.duration = 0;\n    for (var i = 0; i < keys.length; i++) {\n      if (this.report[keys[i]])\n        this.duration += Number(this.report[keys[i]]);\n    }\n    this.duration = this.duration / 1000000.0;\n    this.start = this.timestamp - this.duration;\n    this.end = this.timestamp;\n  }\n\n  this.span.thread.process.machine.task.reports_by_id[this.id] = this;\n};\n\nXEvent.prototype.Edges = function () {\n  if (this.edges == null) {\n    this.edges = [];\n    var parents = this.report.ParentEventID;\n    for (var i = 0; parents != null && i < parents.length; i++) {\n      var edge = {\n        id: this.id + parents[i],\n        parent: this.span.thread.process.machine.task.reports_by_id[parents[i]],\n        child: this\n      };\n      if (edge.parent && edge.child)\n        this.edges.push(edge);\n    }\n  }\n  return this.edges;\n};\nPrototypeBuilder().accessors([\"Timestamp\"])(XEvent);\n\n\n\nexport var XSpan = function (thread, id, reports) {\n  this.thread = thread;\n  this.id = this.thread.fqid + \"_Span-\" + id;\n  this.fqid = this.id;\n  this.events = [];\n  this.waiting = false; // is this a span where a thread is waiting?\n  for (var i = 0; i < reports.length; i++) {\n    if (reports[i].Operation && reports[i].Operation.substring(0, 4) == \"file\") {\n      this.events.push(new XEvent(this, reports[i]));\n    } else {\n      this.events.push(new XEvent(this, reports[i]));\n    }\n  }\n  this.events.sort(function (a, b) { return a.timestamp - b.timestamp; });\n  this.start = this.events[0].Timestamp();\n  this.end = this.events[this.events.length - 1].Timestamp();\n  this.hddevents = this.Events().filter(function (event) { return event.report.Operation && event.report.Operation.substring(0, 4) == \"file\"; });\n  this.networkevents = this.Events().filter(function (event) { return event.report.Operation && (event.report.Operation.startsWith(\"net\") || event.report.Operation.startsWith(\"loopback\")); });\n};\nPrototypeBuilder().getter(\"Events\").accessors([\"HDDEvents\", \"NetworkEvents\"]).mappers([\"Edges\"])(XSpan);\n\n\n\nexport var XThread = function (process, id, reports) {\n  reports.sort(function (a, b) { return a.Timestamp - b.Timestamp; });\n  this.process = process;\n  this.id = this.process.id + \"_Thread-\" + id;\n  this.fqid = this.process.fqid + \"_Thread-\" + id;\n\n  this.spans = [];\n  var span = [];\n  for (var i = 0; i < reports.length; i++) {\n    if (reports[i].Operation && reports[i].Operation == \"waited\") {\n\t\t\t/* Special case: a 'wait' report.  A 'wait' report translates into two events; a start and end.\n\t\t\t * A 'wait' report is generated at the end of the wait, and contains a field specifying the duration\n\t\t\t * of the wait.  So we must manually reconstruct the begin event of the wait */\n\n      // The duration of the wait event\n      var duration = Number(reports[i].Duration) / 1000000.0;\n\n      // Add an event to the end of the prior span and modify the timestamp\n      span.push(reports[i]);\n      var preWait = new XSpan(this, this.spans.length, span);\n      var preWaitEndEvent = preWait.events[preWait.events.length - 1];\n      this.spans.push(preWait);\n\n      // Create a span just for the event\n      var Wait = new XSpan(this, this.spans.length, [reports[i], reports[i]]);\n      Wait.waiting = true;\n      Wait.events[0].timestamp = Wait.events[0].timestamp - duration;\n      preWaitEndEvent.timestamp = Wait.events[0].timestamp; // modify the timestamp of the end event of the prior span\n      this.spans.push(Wait);\n\n      // Fix start/end ts (a hack, whatever)\n      preWait.end = preWaitEndEvent.timestamp;\n      Wait.start = Wait.events[0].timestamp;\n\n      // Create the start of the next span;\n      span = [reports[i]];\n    } else if (reports[i].Operation && reports[i].Operation == \"unset\") {\n      span.push(reports[i]);\n      this.spans.push(new XSpan(this, this.spans.length, span));\n      span = [];\n    } else {\n      span.push(reports[i]);\n    }\n  }\n  if (span.length > 0)\n    this.spans.push(new XSpan(this, this.spans.length, span));\n  this.spans.sort(function (a, b) { return a.Start() - b.Start(); });\n\n  // Now set the short name of this thread\n  this.shortname = \"Thread-\" + this.id;\n  var names = {};\n  names[this.shortname] = true;\n  var events = this.Events();\n  for (var i = 0; i < events.length; i++) {\n    if (events[i].report.ThreadName)\n      names[events[i].report.ThreadName] = true;\n  }\n  delete names[this.shortname];\n  var othernames = Object.keys(names);\n  if (othernames.length > 0) {\n    var selected = othernames[0];\n    if (selected.length > 20)\n      this.shortname = selected.substring(0, 20) + \"...\";\n    else\n      this.shortname = selected;\n  }\n};\nPrototypeBuilder().getter(\"Spans\").accessors([\"ShortName\"]).mappers([\"Events\", \"Edges\", \"HDDEvents\", \"NetworkEvents\"])(XThread);\n\n\n\nexport var XProcess = function (machine, id, reports) {\n  this.machine = machine;\n  this.processid = id;\n  this.id = this.machine.id + \"_Process-\" + id.replace(\"@\", \"\");\n  this.fqid = this.machine.fqid + \"_Process-\" + id.replace(\"@\", \"\");\n  this.gcevents = [];\n\n  // We want high resolution timestamps, so perform some averaging\n  if (reports[0][\"HRT\"]) {\n    var totalTS = 0.0;\n    var totalHRT = 0.0;\n    var count = 0.0;\n    for (var i = 0; i < reports.length; i++) {\n      totalTS += Number(reports[i].Timestamp);\n      totalHRT += Number(reports[i].HRT);\n      count += 1.0;\n    }\n\n    var avgHRT = totalHRT / count;\n    var avgTS = totalTS / count;\n    for (var i = 0; i < reports.length; i++) {\n      var reportHRT = Number(reports[i].HRT);\n      var reportTS = avgTS + (reportHRT - avgHRT) / 1000000.0;\n      reports[i].Timestamp = reportTS;\n    }\n  }\n\n  var reports_by_thread = XtraceUtils.group_reports_by_field(reports, \"ThreadID\");\n\n  this.threads = [];\n  for (var thread_id in reports_by_thread)\n    this.threads.push(new XThread(this, thread_id, reports_by_thread[thread_id]));\n  this.threads.sort(function (a, b) { return a.Start() - b.Start(); });\n};\nXProcess.prototype.addGCData = function (gcdata) {\n  var gcreports = gcdata[this.processid];\n  if (gcreports) {\n    var process = this;\n    this.gcevents = gcreports.map(function (report) { return new GCEvent(process, report); });\n    this.gcevents = this.gcevents.filter(function (gcevent) {\n      return gcevent.start <= process.End() && gcevent.end >= process.Start() && gcevent.duration > 0;\n    });\n  };\n}\nPrototypeBuilder().getter(\"Threads\").accessors([\"GCEvents\"]).mappers([\"Spans\", \"Events\", \"Edges\", \"HDDEvents\", \"NetworkEvents\"])(XProcess);\n\nexport var XMachine = function (task, id, reports) {\n  this.task = task;\n  this.id = \"Machine-\" + id;\n  this.fqid = this.task.ID() + \"_\" + this.id;\n  this.llid = \"Machine-\" + this.id;\n\n  var reports_by_process = XtraceUtils.group_reports_by_field(reports, \"ProcessID\");\n\n  this.processes = [];\n  for (var process_id in reports_by_process) {\n    this.processes.push(new XProcess(this, process_id, reports_by_process[process_id]));\n  }\n  this.processes.sort(function (a, b) { return a.Start() - b.Start(); });\n};\nPrototypeBuilder().getter(\"Processes\").mappers([\"Threads\", \"Spans\", \"Events\", \"Edges\", \"HDDEvents\", \"NetworkEvents\", \"GCEvents\"])(XMachine);\n\n\n\nexport var XTask = function (data) {\n  // Copy the params\n  this.id = data.id;\n  this.fqid = \"Task-\" + this.id;\n  this.reports = data.reports;\n  this.reports_by_id = {};\n\n  for (var i = 0; i < this.reports.length; i++) {\n    var report = this.reports[i];\n    if (report.EventID == null)\n      report.id = \"\" + (Math.floor(Math.random() * (9999999 - 1000000 + 1)) + 1000000);\n    else\n      report.id = report.EventID;\n    this.reports_by_id[report.id] = report;\n  }\n\n  // Create the data structures\n  this.machines = [];\n  var reports_by_machine = XtraceUtils.group_reports_by_field(data.reports, \"Host\");\n  for (var machine_id in reports_by_machine)\n    this.machines.push(new XMachine(this, machine_id, reports_by_machine[machine_id]));\n  this.machines.sort(function (a, b) { return a.Start() - b.Start(); });\n\n  // Extract the tags\n  var tags = {};\n  for (var i = 0; i < this.reports.length; i++) {\n    if (this.reports[i][\"Tag\"])\n      for (var j = 0; j < this.reports[i][\"Tag\"].length; j++)\n        tags[this.reports[i][\"Tag\"][j]] = true;\n  }\n  this.tags = Object.keys(tags);\n};\nPrototypeBuilder().getter(\"Machines\").accessors([\"Tags\"]).mappers([\"Processes\", \"Threads\", \"Spans\", \"Events\", \"Edges\", \"GCEvents\", \"HDDEvents\", \"NetworkEvents\"])(XTask);\n\n\n\nvar Workload = function (data, gcdata) {\n  window.workload = this;\n  this.data = [];\n  this.gcdata = gcdata;\n  this.id = XtraceUtils.unique_id();\n  this.fqid = this.id;\n\n  // Create the data structures\n  this.tasks = [];\n  for (var i = 0; i < data.length; i++) {\n    this.addTask(data[i]);\n  }\n};\nWorkload.prototype.addTask = function (data) {\n  this.data.push(data);\n  var task = new XTask(data);\n  this.tasks.push(task);\n  this.tasks.sort(function (a, b) { return a.Start() - b.Start(); });\n  this.start = null; this.end = null;\n  this.min = this.Start();\n  this.max = this.End();\n  var gcdata = this.gcdata;\n  if (gcdata)\n    task.Processes().forEach(function (process) { process.addGCData(gcdata); });\n};\nWorkload.prototype.addGC = function (gcdata) {\n  this.gcdata = gcdata;\n  if (this.gcdata)\n    this.Processes().forEach(function (process) { process.addGCData(gcdata); });\n};\nPrototypeBuilder().getter(\"Tasks\").mappers([\"Machines\", \"Processes\", \"Threads\", \"Spans\", \"Events\", \"Edges\", \"GCEvents\", \"HDDEvents\", \"NetworkEvents\"])(Workload);\n\nexport var GCEvent = function (process, report) {\n  this.report = report;\n  this.process = process;\n  if (report.EventID == null)\n    report.id = \"\" + (Math.floor(Math.random() * (9999999 - 1000000 + 1)) + 1000000);\n  else\n    report.id = report.EventID;\n  this.xtraceid = report.id;\n  this.id = this.process.fqid + \"_GC-\" + this.xtraceid;\n  this.fqid = this.id;\n\n  this.start = Number(this.report[\"GcStart\"]) + 1;\n  this.duration = Number(this.report[\"GcDuration\"]) - 1;\n  this.end = this.start + this.duration;\n  this.name = this.report[\"GcName\"];\n};\n\nPrototypeBuilder().accessors([\"Start\", \"Duration\", \"Name\"])(GCEvent);","import * as Utils from \"../xtrace_utils\"\n\n// JSON reports as argument, produce IDs on critical path\nfunction critical_path(reports, finalreport) {\n\tif (finalreport == null)\n\t\tfinalreport = reports[reports.length - 1];\n\n\tvar reportmap = {};\n\tfor (var i = 0; i < reports.length; i++) {\n\t\treportmap[Utils.report_id(reports[i])] = reports[i];\n\t}\n\n\tvar cpath = [];\n\tvar next = finalreport;\n\twhile (next && next[\"ParentEventID\"]) {\n\t\tcpath.push(next);\n\t\tvar parents = next[\"ParentEventID\"];\n\t\tnext = reportmap[parents[0]];\n\t\tfor (var i = 1; next == null && i < parents.length; i++) {\n\t\t\tnext = reportmap[parents[i]];\n\t\t}\n\t\tfor (var i = 1; i < parents.length; i++) {\n\t\t\tvar candidate = reportmap[parents[i]];\n\t\t\tif (reportmap[parents[i]] && Number(candidate[\"Timestamp\"]) > Number(next[\"Timestamp\"]))\n\t\t\t\tnext = candidate;\n\t\t}\n\t}\n\treturn cpath;\n};\n\nexport function filter_criticalpath_events(events) {\n\tvar reports = events.map(function (event) { return event.report; });\n\n\tvar finalevent = events[0];\n\tevents.forEach(function (event) {\n\t\tif (event.Timestamp() > finalevent.Timestamp())\n\t\t\tfinalevent = event;\n\t});\n\n\tvar cpath = critical_path(reports, finalevent.report);\n\n\tvar oncpath = {};\n\tfor (var i = 0; i < cpath.length; i++) {\n\t\toncpath[Utils.report_id(cpath[i])] = true;\n\t}\n\n\treturn events.filter(function (event) { return oncpath[event.id]; });\n}\n","import React, { Component } from \"react\";\nimport * as d3 from \"d3\";\nimport * as d3scale from \"d3-scale\"\nimport * as VizLane from \"./data/VizLane\"\nimport * as VizGroup from \"./data/VizGroup\"\nimport * as Workload from \"./data/Workload\"\nimport * as CritPath from \"./data/criticalpath\"\nimport $ from \"jquery\"\nimport \"./Swimlane.css\";\n\nclass Swimlane extends Component {\n\n    constructor(props) {\n        super(props);\n        this.createSwimlane = this.createSwimlane.bind(this);\n    }\n\n    componentDidMount() {\n        this.createSwimlane();\n    }\n\n    componentDidUpdate() {\n        this.createSwimlane();\n    }\n\n    createSwimlane() {\n        const node = this.node;\n        /* Default values for placement of the swimlane.  User should pass these */\n        var x = 0;\n        var y = 0;\n        var width = 500;\n        var height = 100;\n        var margin = 120;\n\n        /* turns on or off key components of the viz */\n        var properties = {\n            \"showevents\": true,\n            \"showedges\": true,\n            \"showgc\": true,\n            \"showspans\": true,\n            \"showcpath\": false\n        };\n\n        /* event callbacks */\n        var callbacks = {\n            \"refresh\": function () { }\n        };\n\n        // For internal use\n        var sx = d3scale.scaleLinear(); // scale between global / zoomed\n        var brush = d3.brushX(); // specifies the active draw area\n        var axis = d3.axisBottom().ticks(10).tickSize(6, 0, 0); // time axis at bottom of viz\n\n        // Tooltips\n        // var ttGravity = $.fn.tipsy.autoBounds(Math.min(window.width(), window.height()) / 3, \"s\");\n        // var EventTooltip = makeEventTooltip(ttGravity);\n        // var GCTooltip = makeGCTooltip(ttGravity);\n        // var HDDTooltip = makeHDDTooltip(ttGravity);\n        // var NetworkTooltip = makeNetworkTooltip(ttGravity);\n        // var ThreadTooltip = makeThreadTooltip($.fn.tipsy.autoWE);\n\n        /* Main rendering function */\n        function swimlane(selection) {\n\n            selection.each(function (layout) {\n                // For spacing out the threads\n                sx.range([0, width]);\n                var sy = d3scale.scaleLinear().domain([0, layout.Height()]).range([0, height]);\n\n                // Create the clip def\n                var defs = d3.select(node).selectAll(\".clipdef\").data([layout]);\n                defs.enter().append(\"defs\").attr(\"class\", \"clipdef\").append(\"clipPath\").attr(\"id\", \"clip\").append(\"rect\");\n                defs.select(\"rect\").attr(\"width\", width).attr(\"height\", height);\n                defs.exit().remove();\n\n                // Add all of the containers for the viz\n                var main = d3.select(node).selectAll(\".main\").data([layout]);\n                var newmain = main.enter().append('g').attr(\"class\", \"main\");\n                var newlanes = newmain.append('g').attr(\"class\", \"lanes\");\n                newlanes.append(\"g\").attr(\"class\", \"lane-background\");\n                newlanes.append(\"g\").attr(\"class\", \"axis\");\n                newlanes.append(\"g\").attr(\"class\", \"spans\");\n                newlanes.append(\"g\").attr(\"class\", \"timeindicator\").append(\"line\");\n                newlanes.append(\"g\").attr(\"class\", \"edges\");\n                newlanes.append(\"g\").attr(\"class\", \"gc\");\n                newlanes.append(\"g\").attr(\"class\", \"hdd\");\n                newlanes.append(\"g\").attr(\"class\", \"network\");\n                newlanes.append(\"g\").attr(\"class\", \"events\");\n                var newmargin = newmain.append('g').attr(\"class\", \"margin\");\n                newmargin.append(\"g\").attr(\"class\", \"lane-labels\");\n                newmargin.append(\"g\").attr(\"class\", \"lane-controls\");\n                main.exit().remove();\n\n                // Position the containers\n                main.attr(\"transform\", \"translate(\" + x + \",\" + y + \")\").attr(\"width\", width).attr(\"height\", height);\n                main.selectAll(\".lanes\").attr(\"transform\", \"translate(\" + margin + \",0)\");\n\n                // Draw the thread backgrounds\n                var lanes = main.select(\".lane-background\").selectAll(\"rect\").data(layout.Lanes());\n                lanes.enter().append('rect').attr('fill', VizLane.Lane.Fill);\n                lanes.attr('x', 0).attr('y', VizLane.Lane.Scale(sy).Offset).attr('width', width).attr('height', VizLane.Lane.Scale(sy).Height);\n                lanes.exit().remove();\n\n                // Draw the lane labels\n                var lanelabels = main.select(\".lane-labels\").selectAll(\"text\").data(layout.Lanes());\n                lanelabels.enter().append(\"text\").attr('text-anchor', 'end').attr('fill', function (d) { return d.Fill().darker(1); })\n                    .text(VizLane.Lane.Label)//.call(ThreadTooltip);\n                lanelabels.attr('x', margin - 12).attr('y', function (d) { return sy(d.Offset() + d.Height() * 0.5); }).attr(\"dominant-baseline\", \"middle\");\n                lanelabels.exit().remove();\n\n                // Add the hit area\n                var lanecontrols = main.select(\".lane-controls\").selectAll(\"rect.groupcontrols\").data(layout.Groups());\n                lanecontrols.enter().append(\"rect\").attr(\"class\", \"groupcontrols\");\n                lanecontrols.attr(\"x\", margin - 6).attr(\"y\", VizGroup.Group.Scale(sy).Offset).attr(\"width\", 4).attr(\"height\", VizGroup.Group.Scale(sy).Height)\n                    .attr(\"fill\", function (d) { return d.Fill().darker(1); });\n                lanecontrols.exit().remove();\n\n                // Place the time axis\n                main.select(\".axis\").attr(\"transform\", \"translate(0,\" + height + \")\");\n\n                // Update the clip paths of the visualization elements\n                main.select(\".spans\").attr(\"clip-path\", \"url(#clip)\");\n                main.select(\".timeindicator\").attr(\"clip-path\", \"url(#clip)\");\n                main.select(\".edges\").attr(\"clip-path\", \"url(#clip)\");\n                main.select(\".gc\").attr(\"clip-path\", \"url(#clip)\");\n                main.select(\".hdd\").attr(\"clip-path\", \"url(#clip)\");\n                main.select(\".network\").attr(\"clip-path\", \"url(#clip)\");\n                main.select(\".events\").attr(\"clip-path\", \"url(#clip)\");\n\n                // Add a mouse marker\n                main.select(\".timeindicator line\").attr('y1', 0).attr('y2', height);\n                main.on(\"mousemove\", function (e) {\n                    var mousex = d3.mouse(node)[0] - margin;\n                    d3.select(node).select(\".timeindicator line\").attr('x1', mousex).attr('x2', mousex);\n                });\n\n                // Attach the zoom behaviour.  A little bit hairy for now\n                var moving = false,\n                    lastx = null;\n                d3.select(node).on(\"mousedown\", function () { moving = true; lastx = null; });\n                d3.select(node).on(\"mouseup\", function () { moving = false; lastx = null; });\n\n                var zoom = d3.zoom();\n                zoom.on(\"zoom\", function () {\n                    var data = layout.workload;\n                    var datalen = data.max - data.min;\n                    var rangemin = data.min - datalen / 10.0;\n                    var rangemax = data.max + datalen / 10.0;\n\n                    var mousex = sx.invert(d3.mouse(node)[0] - margin);\n\n                    var newx0 = brush.extent()[0];\n                    var newx1 = brush.extent()[1];\n\n                    // Apply any translate\n                    if (moving) {\n                        if (lastx != null) {\n                            var deltax = sx.invert(lastx) - sx.invert(d3.event.translate[0]);\n                            if ((newx0 > rangemin || deltax > 0) && (newx1 < rangemax || deltax < 0)) {\n                                newx0 += deltax;\n                                newx1 += deltax;\n                                mousex += deltax;\n                            }\n                        }\n                        lastx = d3.event.translate[0];\n                    }\n\n                    // do the zoom in or out, clamping if necessary\n                    newx0 = mousex + ((newx0 - mousex) / d3.event.scale);\n                    newx1 = mousex + ((newx1 - mousex) / d3.event.scale);\n                    newx0 = Math.max(newx0, rangemin);\n                    newx1 = Math.min(newx1, rangemax);\n                    if (newx0 > newx1) {\n                        console.log(\"inverted\", newx0, newx1, d3.event.scale, brush.extent());\n                        var swap = newx0;\n                        newx0 = newx1;\n                        newx1 = swap;\n                    }\n\n                    // apply the extent and refresh\n                    brush.extent([newx0, newx1]);\n                    callbacks[\"refresh\"].call(node);\n                    zoom.scale(1);\n                });\n                zoom.call(d3.select(node));\n\n                // Remove any of the actual viz.  Done here because y co-ords only update on a redraw, so optimization to put here rather than\n                // update y co-ords unnecessarily on each refresh\n                main.select(\".spans\").selectAll(\"rect\").remove();\n                main.select(\".events\").selectAll(\"circle\").remove();\n                main.select(\".edges\").selectAll(\"line\").remove();\n                main.select(\".gc\").selectAll(\"rect\").remove();\n                main.select(\".hdd\").selectAll(\"rect\").remove();\n                main.select(\".network\").selectAll(\"rect\").remove();\n            });\n\n        };\n\n        swimlane.refresh = function (selection) {\n            selection.each(function (layout) {\n                var main = d3.select(node).select(\".main\");\n\n                // Update the x scale from the brush, create a y scale\n                sx.domain(brush.extent());\n                var sy = d3scale.scaleLinear().domain([0, layout.Height()]).range([0, height]);\n\n                var minExtent = sx.domain()[0];\n                var maxExtent = sx.domain()[1];\n\n                var start = new Date().getTime();\n\n                // Figure out which data should be drawn\n                var spandata = layout.Spans().filter(function (d) { return d.Start() < maxExtent && d.End() > minExtent; });\n                var gcdata = layout.GC().filter(function (d) { return d.start < maxExtent && d.end > minExtent; });\n                var hdddata = layout.HDD().filter(function (d) { return d.start < maxExtent && d.end > minExtent; });\n                var networkdata = layout.Network().filter(function (d) { return d.start < maxExtent && d.end > minExtent; });\n\n                var eventdata = layout.Events();\n                if (properties.showcpath == true)\n                    eventdata = CritPath.filter_criticalpath_events(eventdata);\n                eventdata = eventdata.filter(function (d) { return d.Timestamp() > minExtent && d.Timestamp() < maxExtent; });\n\n                var edgedata = layout.Edges();\n                if (properties.showcpath == true)\n                    edgedata = edgedata.filter(function (edge) { return $.inArray(edge.parent, eventdata) != -1 && $.inArray(edge.child, eventdata) != -1; });\n                edgedata = edgedata.filter(function (d) { return d.parent.Timestamp() < maxExtent && d.child.Timestamp() > minExtent; });\n\n\n                start = new Date().getTime();\n                // Update the span rects\n                if (properties.showspans == true) {\n                    var spans = main.select(\".spans\").selectAll(\"rect\").data(spandata, Workload.XSpan.getID);\n                    spans.enter().append(\"rect\").classed(\"waiting\", function (d) { return d.waiting; })\n                        .attr('y', function (d) { return sy(d.lane.Offset() + 0.1 * d.lane.Height()); })\n                        .attr('height', function (d) { return sy(0.8 * d.lane.Height()); });\n                    spans.attr('x', function (d) { return sx(d.Start()); })\n                        .attr('width', function (d) { return sx(d.End()) - sx(d.Start()); });\n                    spans.exit().remove();\n                } else {\n                    main.select(\".spans\").selectAll(\"rect\").remove();\n                }\n\n                // Update the event dots\n                if (properties.showevents == true) {\n                    var events = main.select(\".events\").selectAll(\"circle\").data(eventdata, Workload.XEvent.getID);\n                    events.enter().append('circle').attr(\"class\", function (d) { return d.type; })\n                        .attr('cy', function (d) { return sy(d.lane.Offset() + 0.5 * d.lane.Height()); })\n                        .attr('r', function (d) { return d.type == \"event\" ? 5 : 2; })\n                        .attr('id', function (d) { return d.ID(); })\n                    //.call(EventTooltip);\n                    events.attr('cx', function (d) { return sx(d.Timestamp()); });\n                    events.exit().remove();\n                } else {\n                    main.select(\".events\").selectAll(\"circle\").remove();\n                }\n\n                // Update the causality edges\n                if (properties.showedges == true) {\n                    var edges = main.select(\".edges\").selectAll(\"line\").data(edgedata, function (d) { return d.id; });\n                    edges.enter().append(\"line\")\n                        .attr('y1', function (d) { return sy(d.parent.lane.Offset() + 0.5 * d.parent.lane.Height()); })\n                        .attr('y2', function (d) { return sy(d.child.lane.Offset() + 0.5 * d.child.lane.Height()); });\n                    edges.exit().remove();\n                    edges.attr('x1', function (d) { return sx(d.parent.Timestamp()); })\n                        .attr('x2', function (d) { return sx(d.child.Timestamp()); })\n                        .attr('class', function (d) { return d.type; });\n                } else {\n                    main.select(\".edges\").selectAll(\"line\").remove();\n                }\n\n                // Update the GC blocks\n                if (properties.showgc == true) {\n                    var gc = main.select(\".gc\").selectAll(\"rect\").data(gcdata, Workload.GCEvent.getID);\n                    gc.enter().append(\"rect\").attr('y', function (d) { return sy(d.group.Offset()); })\n                        .attr('height', function (d) { return sy(d.group.Height()); })//.call(GCTooltip);\n                    gc.attr('x', function (d) { return sx(d.start); }).attr('width', function (d) { return sx(d.end) - sx(d.start); });\n                    gc.exit().remove();\n                } else {\n                    main.select(\".gc\").selectAll(\"rect\").remove();\n                }\n\n                // Update the HDD blocks\n                var hdd = main.select(\".hdd\").selectAll(\"rect\").data(hdddata, Workload.XEvent.getID);\n                hdd.enter().append('rect').attr('class', function (d) { return d.type; })\n                    .attr('y', function (d) { return sy(d.lane.Offset() + d.lane.Height() * 0.25); })\n                    .attr('height', function (d) { return sy(d.lane.Height() * 0.5); })\n                //.call(HDDTooltip);\n                hdd.attr('x', function (d) { return sx(d.start); })\n                    .attr('width', function (d) { return sx(d.end) - sx(d.start); });\n                hdd.exit().remove();\n\n                // Update the network blocks\n                var network = main.select(\".network\").selectAll(\"rect\").data(networkdata, Workload.XEvent.getID);\n                network.enter().append('rect').attr('class', function (d) { return d.type; })\n                    .attr('y', function (d) { return sy(d.lane.Offset() + d.lane.Height() * 0.25); })\n                    .attr('height', function (d) { return sy(d.lane.Height() * 0.5); })\n                //.call(NetworkTooltip);\n                network.attr('x', function (d) { return sx(d.start); })\n                    .attr('width', function (d) { return sx(d.end) - sx(d.start); });\n                network.exit().remove();\n\n                // Update the axis\n                var norm = d3scale.scaleLinear().range([0, width]).domain([brush.extent()[0] - layout.workload.min, brush.extent()[1] - layout.workload.min]);\n                main.select(\".axis\").call(axis.scale(norm));\n            });\n        };\n\n        swimlane.on = function (evt, cb) {\n            if (cb == null)\n                return callbacks[evt];\n            callbacks[evt] = cb;\n            return swimlane;\n        };\n\n        swimlane.brush = function (_) { if (!arguments.length) return brush; brush = _; return swimlane; };\n        swimlane.x = function (_) { if (!arguments.length) return x; x = _; return swimlane; };\n        swimlane.y = function (_) { if (!arguments.length) return y; y = _; return swimlane; };\n        swimlane.width = function (_) { if (!arguments.length) return width; width = _; return swimlane; };\n        swimlane.height = function (_) { if (!arguments.length) return height; height = _; return swimlane; };\n        swimlane.margin = function (_) { if (!arguments.length) return margin; margin = _; return swimlane; };\n        swimlane.property = function (key, value) { properties[key] = value; swimlane.on(\"refresh\").call(node); };\n    }\n\n    render() {\n        return <svg ref={node => this.node = node} width={500} height={500}></svg>\n    }\n}\n\nexport default Swimlane;","import React from \"react\";\nimport { Grid } from \"react-flexbox-grid\";\nimport { Dashboard } from \"../../dc/dashboard\";\nimport Swimlane  from \"../../components/Swimlane/Swimlane\";\n\nclass Home extends React.Component {\n\n    render() {\n        return (\n            <div>\n               <Grid>\n                   <Dashboard />\n               </Grid>\n               <div>\n                    <Swimlane />\n               </div>\n            </div>\n        );\n    }\n}\n\nexport default Home;\n\n","import React from \"react\";\nimport { Switch, Route } from \"react-router-dom\";\nimport Home from \"../../pages/Home/Home\";\n\nimport \"./Main.css\";\n\nfunction Main() {\n    return (\n        <main>\n            <Switch>\n                <Route exact path=\"/\" component={Home} />\n            </Switch>\n        </main>\n    );\n}\n\nexport default Main;\n","import React from 'react';\nimport './App.css';\nimport Header from './components/Header/Header';\nimport Main from './components/Main/Main';\nimport Swimlane from \"./components/Swimlane/Swimlane\"\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Header/>\n      <Main/>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { BrowserRouter } from 'react-router-dom';\n\nReactDOM.render(\n    <BrowserRouter>\n    <App />\n    </BrowserRouter>, \n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\n//serviceWorker.unregister();\n","var Lane = function () { };\n\nLane.prototype.Events = function () { return []; };\nLane.prototype.Spans = function () { return []; };\nLane.prototype.Threads = function () { return []; };\nLane.prototype.Processes = function () { return []; };\nLane.prototype.Tasks = function () { return []; };\nLane.prototype.Edges = function () { return []; };\nLane.prototype.GC = function () { return []; };\nLane.prototype.HDD = function () { return []; };\nLane.prototype.Network = function () { return []; };\n\nLane.prototype.Height = function () { if (!arguments.length) return this.height ? this.height : 10; this.height = null; return this; };\nLane.prototype.Fill = function () { if (!arguments.length) return this.fill ? this.fill : 0; this.fill = null; return this; };\nLane.prototype.Offset = function () { if (!arguments.length) return this.offset ? this.offset : 0; this.offset = null; return this; };\nLane.prototype.Label = function () { if (!arguments.length) return this.label ? this.label : \"\"; this.label = null; return this; };\n\nLane.Scale = function (scale) {\n  return {\n    Height: function (lane) { return scale(lane.Height()); },\n    Offset: function (lane) { return scale(lane.Offset()); }\n  };\n};\nLane.Fill = function (lane) { return lane.Fill(); };\nLane.Label = function (lane) { return lane.Label(); };\n\nvar ThreadLane = function (group, thread) {\n  // Save the arguments\n  this.group = group;\n  this.thread = thread;\n\n  // Set the thread label\n  this.Label(thread.ShortName());\n\n  // Save the lane on the events and spans\n  var lane = this;\n  this.Events().forEach(function (evt) { evt.lane = lane; });\n  this.Spans().forEach(function (spn) { spn.lane = lane; });\n  this.Edges().filter(function (edge) { return edge.parent.lane == lane; }).forEach(function (edge) { edge.type = \"lane\"; });\n};\nThreadLane.prototype = new Lane();\nThreadLane.prototype.Events = function () { return this.thread.Events(); };\nThreadLane.prototype.Spans = function () { return this.thread.Spans(); };\nThreadLane.prototype.Edges = function () { return this.thread.Edges(); };\nThreadLane.prototype.HDD = function () { return this.thread.HDDEvents(); };\nThreadLane.prototype.Network = function () { return this.thread.NetworkEvents(); };\n\nvar TaskLane = function (group, task) {\n  this.group = group;\n  this.task = task;\n\n  this.Label(task.ID());\n\n  // Save the lane on the events and spans, in this case just the task\n  var lane = this;\n  this.task.lane = lane;\n  this.HDD().forEach(function (evt) { evt.lane = lane; });\n  this.Network().forEach(function (evt) { evt.lane = lane; });\n};\nTaskLane.prototype = new Lane();\nTaskLane.prototype.Spans = function () { return [this.task]; };\nTaskLane.prototype.HDD = function () { return this.task.HDDEvents(); };\nTaskLane.prototype.Network = function () { return this.task.NetworkEvents(); };"],"sourceRoot":""}